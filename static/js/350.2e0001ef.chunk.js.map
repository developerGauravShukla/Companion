{"version":3,"file":"static/js/350.2e0001ef.chunk.js","mappings":"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","sources":["components/DragAndDrop/DragAndDrop.jsx","components/Popup/Popup.jsx","pages/companionWidget/MassUpdateDropdown.jsx","pages/companionWidget/companionWidgetToolbarNativeCta.jsx","pages/companionWidget/companionWidget.jsx","pages/companionWidget/comapnaiondataHelpers.js","hooks/useCompanionWidget.js","hooks/useCompanionDropableArea.js","pages/companionWidget/WidgetLifecycle.jsx","pages/companionWidget/companionIndex.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\n\r\nconst DragAndDropComponent = () => {\r\n  const {  handleDrop } = useDroppableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      // console.log(\"Selected objects:\", selectedObjects);\r\n      // console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"droppable-container mt-4\"\r\n      >\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","import React, {\r\n  useState,\r\n  useMemo,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from \"react\";\r\nimport {\r\n  useReactTable,\r\n  getCoreRowModel,\r\n  flexRender,\r\n} from \"@tanstack/react-table\";\r\nimport \"./Popup.css\";\r\nimport {\r\n  MSG_ADDPRODUCT_NOT_ALLOWED_ERROR,\r\n  MSG_ADDPRODUCT_RELEASED_ERROR,\r\n  MSG_EMPTYADD_ERROR,\r\n} from \"../../utils/toastMessages\";\r\nimport useToast from \"../../hooks/useToast\";\r\n\r\nconst AvailablePlant = forwardRef(\r\n  ({ data, columns, addedItem, CAName, state }, ref) => {\r\n    const { showWarningToast } = useToast();\r\n    const [rowSelection, setRowSelection] = useState({});\r\n\r\n    useEffect(() => {\r\n      setRowSelection({}); // Reset selection when data changes\r\n    }, [data]);\r\n\r\n    const addPlant = () => {\r\n      const selectedRows = table.getSelectedRowModel().rows;\r\n      const selectedItems = selectedRows.map(\r\n        (item) => item.original[\"Available Plant\"]\r\n      );\r\n\r\n      if (selectedItems.length === 0) {\r\n        showWarningToast(MSG_EMPTYADD_ERROR);\r\n        return;\r\n      }\r\n\r\n      addedItem(selectedItems); // Send selected items to parent\r\n      setRowSelection({}); // Reset selection\r\n    };\r\n\r\n    // Expose the addPlant function to parent\r\n    useImperativeHandle(ref, () => ({\r\n      addPlant,\r\n    }));\r\n\r\n    const enhancedColumns = useMemo(() => {\r\n      const selectionColumn = {\r\n        id: \"select\",\r\n        cell: ({ row }) => (\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            checked={row.getIsSelected()}\r\n            onChange={row.getToggleSelectedHandler()}\r\n          />\r\n        ),\r\n      };\r\n      return [selectionColumn, ...columns];\r\n    }, [columns]);\r\n\r\n    const table = useReactTable({\r\n      data,\r\n      columns: enhancedColumns,\r\n      state: { rowSelection },\r\n      enableRowSelection: true,\r\n      onRowSelectionChange: setRowSelection,\r\n      getCoreRowModel: getCoreRowModel(),\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary me-3\"\r\n            onClick={() => {\r\n              table\r\n                .getRowModel()\r\n                .rows.forEach((row) => row.toggleSelected(true));\r\n            }}\r\n          >\r\n            Select All\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-secondary\"\r\n            onClick={() => {\r\n              table\r\n                .getRowModel()\r\n                .rows.forEach((row) => row.toggleSelected(false));\r\n            }}\r\n          >\r\n            Deselect All\r\n          </button>\r\n        </div>\r\n\r\n        {table.getRowModel().rows.length > 0 ? (\r\n          <div className=\"overflow-auto\" style={{ maxHeight: \"60vh\" }}>\r\n            {table.getRowModel().rows.map((row) => (\r\n              <div\r\n                key={row.id}\r\n                className=\"p-3 border-bottom d-flex align-items-center\"\r\n                style={{\r\n                  backgroundColor: row.getIsSelected() ? \"#d5e8f2\" : \"inherit\",\r\n                }}\r\n              >\r\n                <div className=\"me-3\">\r\n                  {flexRender(\r\n                    row.getVisibleCells()[0].column.columnDef.cell,\r\n                    row.getVisibleCells()[0].getContext()\r\n                  )}\r\n                </div>\r\n                <div>{row.original[columns[0].accessorKey]}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-muted p-3\">No data available</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default AvailablePlant;\r\n","import React, { useState } from \"react\";\r\n\r\nconst MassUpdateDropdown = ({\r\n  editableColumns,\r\n  selectedRows,\r\n  onApplyUpdate,\r\n  valueOptions,\r\n  onClose, // New prop to close dropdown\r\n}) => {\r\n  const [selectedColumn, setSelectedColumn] = useState(\"\");\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n\r\n  const handleApplyUpdate = (applyToAll) => {\r\n    if (!selectedColumn || !selectedValue) {\r\n      alert(\"Please select a column and a value.\");\r\n      return;\r\n    }\r\n\r\n    onApplyUpdate(\r\n      selectedColumn,\r\n      selectedValue,\r\n      applyToAll ? \"all\" : \"selected\"\r\n    );\r\n    onClose(); // Close after applying update\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropdown-menu p-3 \"\r\n      style={{ width: \"300px\", display: \"block\" }}\r\n    >\r\n      <label>Select Column:</label>\r\n      <select\r\n        className=\"form-select mb-2\"\r\n        onChange={(e) => setSelectedColumn(e.target.value)}\r\n        value={selectedColumn}\r\n      >\r\n        <option value=\"\">-- Select Column --</option>\r\n        {editableColumns.map((col) => (\r\n          <option key={col} value={col}>\r\n            {col}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <label>Select Value:</label>\r\n      <select\r\n        className=\"form-select mb-2\"\r\n        value={selectedValue}\r\n        onChange={(e) => setSelectedValue(e.target.value)}\r\n        disabled={!selectedColumn}\r\n      >\r\n        <option value=\"\">-- Select Value --</option>\r\n        {valueOptions.map((val) => (\r\n          <option key={val} value={val}>\r\n            {val}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <button\r\n        className=\"btn btn-outline-success me-2 mb-2\"\r\n        onClick={() => handleApplyUpdate(false)}\r\n        disabled={!selectedRows.length}\r\n        style={{ cursor: !selectedRows.length ? \"not-allowed\" : \"pointer\" }}\r\n      >\r\n        Apply to Selected\r\n      </button>\r\n      <button\r\n        className=\"btn btn-outline-primary me-2 mb-2\"\r\n        onClick={() => handleApplyUpdate(true)}\r\n      >\r\n        Apply to All\r\n      </button>\r\n\r\n      {/* Close Button */}\r\n      <button className=\"btn btn-outline-danger me-2 mb-2\" onClick={onClose}>\r\n        Close\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MassUpdateDropdown;\r\n","import { useState } from \"react\";\r\nimport Popup from \"../../components/Popup/Popup\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport { MSG_BOS_SAVE } from \"../../utils/toastMessages\";\r\nimport MassUpdateDropdown from \"./MassUpdateDropdown\";\r\n\r\nconst CompanionToolbarNativeCta = ({\r\n  onSave,\r\n  state,\r\n  selectedRows,\r\n  tableData,\r\n  onMassUpdate,\r\n  type,\r\n  latestRevision,\r\n  droppedRevision,\r\n}) => {\r\n  const { showWarningToast } = useToast();\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const handleSaveClick = () => {\r\n    if (type !== \"Document\" && latestRevision !== droppedRevision) {\r\n      showWarningToast(MSG_BOS_SAVE);\r\n    } else {\r\n      onSave();\r\n    }\r\n    // When save button is clicked, call onSave passed as prop\r\n    // onSave is passed with tableData from parent\r\n  };\r\n  const handleMassUpdate = (column, value, scope) => {\r\n    if (scope === \"selected\") {\r\n      onMassUpdate(selectedRows, column, value);\r\n    } else {\r\n      onMassUpdate(tableData, column, value);\r\n    }\r\n  };\r\n  const editableColumns = [\r\n    \"Print On Purchase Order Required\",\r\n    \"Print On Work Order Required\",\r\n    \"Work Order Document Required\",\r\n    \"Print On report Order Required\",\r\n    \"SAP/JDE\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column cta-absolute\">\r\n      <div className=\"d-flex\">\r\n        <button\r\n          className=\"btn btn-outline-success btn-lg m-2\"\r\n          onClick={handleSaveClick}\r\n        >\r\n          Save\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-primary btn-lg m-2\"\r\n          onClick={() =>\r\n            type !== \"Document\" && latestRevision !== droppedRevision\r\n              ? showWarningToast(MSG_BOS_SAVE)\r\n              : setShowDropdown((prev) => !prev)\r\n          }\r\n        >\r\n          Mass Update\r\n        </button>\r\n      </div>\r\n\r\n      {/* Dropdown appears below */}\r\n      {showDropdown && (\r\n        <div className=\"mt-2\">\r\n          <MassUpdateDropdown\r\n            editableColumns={editableColumns}\r\n            selectedRows={selectedRows}\r\n            onApplyUpdate={handleMassUpdate}\r\n            valueOptions={[\"Yes\", \"No\"]}\r\n            onClose={() => setShowDropdown(false)}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanionToolbarNativeCta;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DragAndDropComponent from \"../../components/DragAndDrop/DragAndDrop\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport \"./companionWidget.css\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ReusableTable from \"../../components/Table/Table\";\r\nimport CardWithDragAndDrop from \"../../components/Card/cardwithdraganddrop\";\r\nimport {\r\n  setDroppedObjectData,\r\n  setIsDropped,\r\n  setPlantObjectData,\r\n} from \"../../store/droppedObjectSlice\";\r\nimport { getCardData, getTableData, tableColumns } from \"./comapnaiondataHelpers\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport { MSG_SAVE_FAILURE, MSG_SAVE_SUCCESS } from \"../../utils/toastMessages\";\r\nimport useBOSDropableArea from \"../../hooks/useBOSDropableArea\";\r\nimport CompanionToolbarNativeCta from \"./companionWidgetToolbarNativeCta\";\r\nimport { fetchData } from \"../../utils/helpers\";\r\n\r\nconst CompanionWidget = () => {\r\n  const { initializeDroppableArea, loading } = useBOSDropableArea();\r\n  const [tableKey, setTableKey] = useState(0);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [isTableLoading, setIsTableLoading] = useState(false);\r\n  const [screenLoader, setScreenLoader] = useState(false);\r\n  const [isCardDataAvailable, setIsCardDataAvailable] = useState(false);\r\n  const [specData, setSpecData] = useState([]);\r\n  const [selectableRows, setSelectableRows] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n\r\n  useEffect(() => {\r\n    if (specData.length) {\r\n      setTableData(specData.map((item) => ({ ...item, changedCells: {} })));\r\n    }\r\n  }, [specData]);\r\n\r\n  const handleSave = async () => {\r\n    console.log(\"Table Data is:\", tableData);\r\n    setScreenLoader(true);\r\n    console.log(\"Type of Parent:\", type);\r\n    let parentData = [];\r\n    let ChildNameKey;\r\n    let ChildRevKey;\r\n    let ChildStateKey;\r\n    let ChildIdKey;\r\n    if (type === \"Document\") {\r\n      parentData = {\r\n        SpecName: droppedObjectData.cardData.Name,\r\n        SpecRevision: droppedObjectData.cardData[\"Dropped Revision\"],\r\n        SpecState: droppedObjectData.cardData[\"Maturity State\"],\r\n        SpecID: droppedObjectData.cardData[\"ID\"], // NEED TO CHECK CARD DATA\r\n        // SpecState need to be added.\r\n      };\r\n      ChildNameKey = \"ItemName\";\r\n      ChildRevKey = \"ItemRevision\";\r\n      ChildStateKey = \"ItemState\";\r\n      ChildIdKey = \"ItemID\";\r\n    } else {\r\n      console.log(\"It's a physical Product\");\r\n      parentData = {\r\n        ItemName: droppedObjectData.cardData.Name,\r\n        ItemRevision: droppedObjectData.cardData[\"Dropped Revision\"],\r\n        ItemState: droppedObjectData.cardData[\"Maturity State\"],\r\n        ItemID: droppedObjectData.cardData[\"ID\"], // NEED TO CHECK THIS\r\n        // need to add Maturity State as Item State and ItemId is Dropped Revision Id.\r\n      };\r\n      ChildNameKey = \"SpecName\";\r\n      ChildRevKey = \"SpecRevision\";\r\n      ChildStateKey = \"SpecState\";\r\n      ChildIdKey = \"SpecID\";\r\n    }\r\n\r\n    const formattedData = tableData.map((item) => {\r\n      // Find matching data in bosSpecDocument\r\n      let matchingData = bosSpecDocument.find(\r\n        (data) =>\r\n          data.childTitle === item.Title && data.childRevision === item.Revision\r\n      );\r\n\r\n      return {\r\n        [ChildNameKey]: matchingData ? matchingData.childName : null, // Use found childName\r\n        [ChildRevKey]: item.Revision, // Dynamic key based on type\r\n        [ChildStateKey]: matchingData ? matchingData.childState : null, // need to check this\r\n        [ChildIdKey]: matchingData ? matchingData.ID : null, //\r\n        // something needs to be done here\r\n        // [ChildStateKey]:\r\n        ...parentData, // Merge Parent Data\r\n        PrintOnPurchaseOrderRequired: item[\"Print On Purchase Order Required\"],\r\n        PrintOnWorkOrderRequired: item[\"Print On Work Order Required\"],\r\n        WorkOrderDocumentRequired: item[\"Work Order Document Required\"],\r\n        PrintOnReportOrderRequired: item[\"Print On report Order Required\"],\r\n        \"SAP/JDE\": item[\"SAP/JDE\"],\r\n      };\r\n    });\r\n\r\n    formattedData.sort((a, b) => {\r\n      if (a.SpecName !== b.SpecName) {\r\n        return a.SpecName.localeCompare(b.SpecName);\r\n      }\r\n      return Number(a.SpecRevision) - Number(b.SpecRevision);\r\n    });\r\n\r\n    console.log(\"Formatted Data:\", formattedData);\r\n    const saveURL =\r\n      \"https://saasimplementationserverdev.azurewebsites.net/bosAttribute/createORupdateDetails\";\r\n    const response = await fetchData(\"POST\", saveURL, formattedData);\r\n\r\n    console.log(\"the response from node API is:\", response);\r\n    if (response.status === 200) {\r\n      showSuccessToast(MSG_SAVE_SUCCESS);\r\n      setSpecData(tableData);\r\n      setScreenLoader(false);\r\n    } else {\r\n      showErrorToast(MSG_SAVE_FAILURE);\r\n      setScreenLoader(false);\r\n    }\r\n  };\r\n\r\n  const handleMassUpdate = async (data, column, value) => {\r\n    console.log(\"Data when the Mass Update is Clicked:\", data);\r\n    console.log(\"Columns to Change:\", column);\r\n    console.log(\"Value after change:\", value);\r\n\r\n    const updatedData = data.map((row) => ({\r\n      ...row,\r\n      [column]: value, // Update the specified column with the new value\r\n    }));\r\n\r\n    console.log(\"Updated Data is:\", updatedData);\r\n    console.log(\"Table Data is:\", tableData);\r\n\r\n    // Merge updatedData into tableData based on matching Title & Revision\r\n    const mergedData = tableData.map((row) => {\r\n      const updatedRow = updatedData.find(\r\n        (updated) =>\r\n          updated.Title === row.Title && updated.Revision === row.Revision\r\n      );\r\n\r\n      return updatedRow ? updatedRow : row; // Use updated row if found, else keep original row\r\n    });\r\n\r\n    console.log(\"Merged Data:\", mergedData);\r\n    updateTableData(mergedData);\r\n  };\r\n\r\n  console.log(\"Table Data after Adding:\", tableData);\r\n  const selectedTableRows = useSelector(\r\n    (state) => state.droppedObject.selectedTableRows\r\n  );\r\n  // Access Redux store\r\n  const droppedObjectData = useSelector(\r\n    (state) => state.droppedObject.droppedObjectData\r\n  );\r\n  console.log(\"droppedObjectData\", droppedObjectData);\r\n\r\n  const loadingParentDetails = useSelector(\r\n    (state) => state.droppedObject.loadingParentDetails\r\n  );\r\n  console.log(\"Parents Loading State:\", loadingParentDetails);\r\n  const proposedChanges = useSelector(\r\n    (state) => state.droppedObject.plantObjectData.proposedChanges\r\n  );\r\n  console.log(\"Proposed Changes are:\", proposedChanges);\r\n\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n  const bosData = useSelector((state) => state.droppedObject.BOSObjectData);\r\n\r\n  console.log(\"Bos data in BOS Widget is:\", bosData);\r\n  const bosSpecDocument = useSelector(\r\n    (state) => state.droppedObject.BOSObjectData.specDocument\r\n  );\r\n  console.log(\"BOSObjectData\", bosSpecDocument);\r\n\r\n  const updateTableData = (updatedData) => {\r\n    const newDataWithChanges = updatedData.map((newItem) => {\r\n      const originalItem = specData.find(\r\n        (oldItem) =>\r\n          oldItem.Title === newItem.Title &&\r\n          oldItem.Revision === newItem.Revision\r\n      );\r\n\r\n      if (!originalItem) return { ...newItem, changedCells: {} };\r\n\r\n      // Track changed cells\r\n      const changedCells = {};\r\n      Object.keys(newItem).forEach((key) => {\r\n        if (newItem[key] !== originalItem[key]) {\r\n          changedCells[key] = true; // Mark this cell as changed\r\n        }\r\n      });\r\n\r\n      return { ...newItem, changedCells };\r\n    });\r\n\r\n    setTableData(newDataWithChanges);\r\n  };\r\n\r\n  console.log(\"Table Data is:\", tableData);\r\n  useEffect(() => {\r\n    if (tableData.length >= 0) {\r\n      setTableKey((prevKey) => prevKey + 1); // Increment the key to trigger a re-render\r\n    }\r\n  }, [tableData]); // Runs whenever tableData changes\r\n  if (droppedObjectData.cardData && droppedObjectData.initialDraggedData) {\r\n    var state = droppedObjectData.cardData[\"Maturity State\"];\r\n    var type = droppedObjectData.initialDraggedData?.data?.items[0].objectType;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isDropped) {\r\n      initializeDroppableArea();\r\n    }\r\n  }, [isDropped, initializeDroppableArea]);\r\n  useEffect(() => {\r\n    setIsTableLoading(loadingParentDetails);\r\n  }, [loadingParentDetails]);\r\n\r\n  const newTableData = useMemo(\r\n    () => getTableData(bosSpecDocument, type),\r\n    [bosSpecDocument, type]\r\n  );\r\n  useEffect(() => {\r\n    setSpecData(newTableData);\r\n  }, [newTableData]);\r\n\r\n  useEffect(() => {\r\n    if (newTableData.length >= 0) {\r\n      console.log(\"New Table Data:\", newTableData);\r\n      setTableData(newTableData);\r\n      setTableKey((prevKey) => prevKey + 1); // Update table key\r\n    }\r\n  }, [newTableData]);\r\n  const cardData = useMemo(\r\n    () => getCardData(droppedObjectData),\r\n    [droppedObjectData]\r\n  );\r\n  console.log(cardData);\r\n  useEffect(() => {\r\n    setIsCardDataAvailable(!!cardData);\r\n  }, [cardData]);\r\n  const columns = useMemo(\r\n    () =>\r\n      tableColumns(\r\n        type,\r\n        droppedObjectData?.cardData[\"Latest Revision\"],\r\n        droppedObjectData?.cardData[\"Dropped Revision\"]\r\n      ),\r\n    [type, droppedObjectData?.cardData]\r\n  );\r\n\r\n  const handleHomeClick = () => {\r\n    initializeDroppableArea(); // Reset the droppable area\r\n    dispatch(setIsDropped(false));\r\n    dispatch(\r\n      setDroppedObjectData({\r\n        cardData: {},\r\n        parentDetails: [],\r\n        versions: [],\r\n        initialDraggedData: [],\r\n      })\r\n    ); // Clear Redux state\r\n    dispatch(\r\n      setPlantObjectData({\r\n        allPlants: [],\r\n        initialAssignedPlants: [],\r\n        uniquePlants: [],\r\n        productChildren: [],\r\n        CAName: false,\r\n        headers: {},\r\n      })\r\n    );\r\n    setTableData([]); // Clear local table data\r\n    setIsCardDataAvailable(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {screenLoader && (\r\n        <div className=\"loading-overlay\">\r\n          <Loader />\r\n          <p>Saving...</p>\r\n        </div>\r\n      )}\r\n      {!isDropped && !loading && !isTableLoading && <DragAndDropComponent />}\r\n      {loading && <Loader />}\r\n      {isDropped && (\r\n\r\n        <>\r\n         {/* Show initial loader when loading is true */}\r\n         {loading && <Loader />}\r\n          <div className=\"content-wrapper py-3 border-bottom\">\r\n            <div className=\"d-flex \">\r\n              <div className=\" p-0 pt-4\">\r\n                <Image\r\n                  src=\"https://thewhitechamaleon.github.io/testrapp/images/home.png\"\r\n                  alt=\"home-icon\"\r\n                  className=\"home-icon\"\r\n                  onClick={handleHomeClick}\r\n                />\r\n              </div>\r\n              {cardData && (\r\n                <CardWithDragAndDrop data={cardData} widgetType=\"bosWidget\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {isTableLoading ? (\r\n            <div className=\"loading-indicator mt-5\">\r\n              <Loader />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"wrapper-cta\">\r\n                <CompanionToolbarNativeCta\r\n                  onSave={handleSave}\r\n                  type={type}\r\n                  latestRevision={\r\n                    droppedObjectData?.cardData[\"Latest Revision\"]\r\n                  }\r\n                  droppedRevision={\r\n                    droppedObjectData?.cardData[\"Dropped Revision\"]\r\n                  }\r\n                  selectedRows={selectedTableRows}\r\n                  state={state}\r\n                  tableData={selectableRows}\r\n                  onMassUpdate={handleMassUpdate}\r\n                />\r\n                <ReusableTable\r\n                  key={tableKey}\r\n                  data={tableData}\r\n                  columns={columns}\r\n                  meta={{ updateTableData }}\r\n                  type={type}\r\n                  latestRevision={\r\n                    droppedObjectData?.cardData[\"Latest Revision\"]\r\n                  }\r\n                  droppedRevision={\r\n                    droppedObjectData?.cardData[\"Dropped Revision\"]\r\n                  }\r\n                  widgetType=\"Bos_Attribute_Widget\"\r\n                  onSelectableRowsChange={setSelectableRows}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CompanionWidget;\r\n","// pages/revisionFloat/dataHelpers.js\r\nimport { FaRegCopy } from \"react-icons/fa\";\r\nconst ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\nexport const getCardData = (droppedObjectData) => {\r\n  if (!droppedObjectData || !droppedObjectData.cardData) {\r\n    return null;\r\n  }\r\n\r\n  const item = droppedObjectData.cardData;\r\n\r\n  let cardData = {\r\n    title: item.Title || \"N/A\",\r\n    type: item.Type || \"N/A\",\r\n    \"Maturity State\": item[\"Maturity State\"] || \"N/A\",\r\n    owner: item.Owner || \"N/A\",\r\n    \"Collaborative Space Title\": item[\"Collaborative Space Title\"] || \"N/A\",\r\n    Description: item.Description || \"N/A\",\r\n    \"Dropped Revision\": item[\"Dropped Revision\"] || \"N/A\",\r\n    \"Latest Released Revision\": item[\"Latest Released Revision\"] || \"N/A\",\r\n    \"CAD Format\": item[\"CAD Format\"] || \"N/A\",\r\n    imageURL:\r\n      item.imageURL ||\r\n      `${ENOVIA_BASE_URL}/snresources/images/icons/large/I_VPMNavProduct108x144.png`, // You might want a placeholder image URL\r\n  };\r\n\r\n  if (item.Type !== \"Document\") {\r\n    cardData.EIN = item.EIN || \"N/A\";\r\n    cardData[\"CAD Format\"] = item[\"CAD Format\"] || \"N/A\";\r\n  }\r\n  return cardData;\r\n};\r\n\r\nexport const getTableData = (bosData, type) => {\r\n  if (!bosData) return [];\r\n\r\n  return bosData.map((data) => {\r\n    let rowData = {\r\n      Title: data?.childTitle || \"N/A\",\r\n      Revision: data?.childRevision || \"1\",\r\n      State: data?.childState || \"N/A\",\r\n      \"Print On Purchase Order Required\":\r\n        data.PrintOnPurchaseOrderRequired || \"No\",\r\n      \"Print On Work Order Required\": data.PrintOnWorkOrderRequired || \"No\",\r\n      \"Work Order Document Required\": data.WorkOrderDocumentRequired || \"No\",\r\n      \"Print On report Order Required\": data.PrintOnReportOrderRequired || \"No\",\r\n      \"SAP/JDE\": data[\"SAP/JDE\"] || \"No\",\r\n    };\r\n\r\n    // Add \"IsLatest\" key only if type === \"Document\"\r\n    if (type === \"Document\") {\r\n      rowData.IsLatest = data?.childLatest || \"FALSE\";\r\n    }\r\n\r\n    return rowData;\r\n  });\r\n};\r\n\r\nexport const tableColumns = (type, latestRevision, droppedRevision) => {\r\n  const baseColumns = [\r\n    { accessorKey: \"Title\", header: \"Title\" },\r\n    { accessorKey: \"Revision\", header: \"Revision\" },\r\n    { accessorKey: \"State\", header: \"State\" },\r\n  ];\r\n\r\n  if (type === \"Document\") {\r\n    baseColumns.push({ accessorKey: \"IsLatest\", header: \"Is Latest\" });\r\n  }\r\n\r\n  const editableColumns = [\r\n    \"Print On Purchase Order Required\",\r\n    \"Print On Work Order Required\",\r\n    \"Work Order Document Required\",\r\n    \"Print On report Order Required\",\r\n    \"SAP/JDE\",\r\n  ].map((columnKey) => ({\r\n    accessorKey: columnKey,\r\n    header: columnKey,\r\n    cell: ({ row, getValue, table }) => {\r\n      // Determine if the cell should be editable\r\n      const isEditable =\r\n        type === \"Document\"\r\n          ? row.original.IsLatest !== \"FALSE\" // Editable only if IsLatest is NOT \"FALSE\"\r\n          : !latestRevision || latestRevision === droppedRevision;\r\n\r\n      const handleDropdownChange = (e) => {\r\n        const updatedValue = e.target.value;\r\n        const updatedData = table\r\n          .getRowModel()\r\n          .rows.map((r) =>\r\n            r.id === row.id\r\n              ? { ...r.original, [columnKey]: updatedValue }\r\n              : r.original\r\n          );\r\n\r\n        table.options.meta?.updateTableData(updatedData);\r\n      };\r\n\r\n      return isEditable ? (\r\n        <select\r\n          value={getValue()}\r\n          onChange={handleDropdownChange}\r\n          className=\"appearance-none bg-transparent border-none cursor-pointer focus:outline-none\"\r\n          style={{\r\n            width: \"70%\",\r\n            padding: \"5px 0\",\r\n            fontSize: \"14px\",\r\n            background: \"none\",\r\n            border: \"none\",\r\n            textAlign: \"left\",\r\n          }}\r\n          onMouseOver={(e) => (e.target.style.border = \"1px solid #ccc\")}\r\n          onMouseOut={(e) => (e.target.style.border = \"none\")}\r\n        >\r\n          <option value=\"Yes\">Yes</option>\r\n          <option value=\"No\">No</option>\r\n        </select>\r\n      ) : (\r\n        <span>{getValue()}</span> // Show non-editable text if conditions fail\r\n      );\r\n    },\r\n  }));\r\n\r\n  return [...baseColumns, ...editableColumns];\r\n};\r\n\r\n// export const tableColumns = (type, latestRevision, droppedRevision) => [\r\n//   { accessorKey: \"Title\", header: \"Title\" },\r\n//   { accessorKey: \"Revision\", header: \"Revision\" },\r\n//   { accessorKey: \"State\", header: \"State\" },\r\n//   ...[\r\n//     \"Print On Purchase Order Required\",\r\n//     \"Print On Work Order Required\",\r\n//     \"Work Order Document Required\",\r\n//     \"Print On report Order Required\",\r\n//     \"SAP/JDE\",\r\n//   ].map((columnKey) => ({\r\n//     accessorKey: columnKey,\r\n//     header: columnKey,\r\n//     cell: ({ row, getValue, table }) => {\r\n//       const handleDropdownChange = (e) => {\r\n//         const updatedValue = e.target.value;\r\n//         const updatedData = table\r\n//           .getRowModel()\r\n//           .rows.map((r) =>\r\n//             r.id === row.id\r\n//               ? { ...r.original, [columnKey]: updatedValue }\r\n//               : r.original\r\n//           );\r\n\r\n//         table.options.meta?.updateTableData(updatedData);\r\n//       };\r\n\r\n//       return (\r\n//         <select\r\n//           value={getValue()}\r\n//           onChange={handleDropdownChange}\r\n//           className=\"appearance-none bg-transparent border-none cursor-pointer focus:outline-none\"\r\n//           style={{\r\n//             width: \"70%\",\r\n//             padding: \"5px\",\r\n//             fontSize: \"14px\",\r\n//             color: \"#333\",\r\n//             background: \"none\",\r\n//             border: \"none\",\r\n//             textAlign: \"left\",\r\n//           }}\r\n//           onMouseOver={(e) => (e.target.style.border = \"1px solid #ccc\")}\r\n//           onMouseOut={(e) => (e.target.style.border = \"none\")}\r\n//         >\r\n//           <option value=\"Yes\">Yes</option>\r\n//           <option value=\"No\">No</option>\r\n//         </select>\r\n//       );\r\n//     },\r\n//   })),\r\n// ];\r\n\r\n// {\r\n//   accessorKey: \"MBom\",\r\n//   header: \"MBom\",\r\n//   cell: ({ row, getValue, table }) => {\r\n//     const handleDropdownChange = (e) => {\r\n//       if (!CAName) return; // Prevent changes when disabled\r\n//       const updatedValue = e.target.value;\r\n\r\n//       // Update the table data state here\r\n//       const updatedData = table\r\n//         .getRowModel()\r\n//         .rows.map((r) =>\r\n//           r.id === row.id ? { ...r.original, MBom: updatedValue } : r.original\r\n//         );\r\n\r\n//       table.options.meta?.updateTableData(updatedData); // Call custom table update function\r\n//     };\r\n\r\n//     return (\r\n//       <select\r\n//         value={getValue()}\r\n//         onChange={handleDropdownChange}\r\n//         disabled={!CAName} // Disable dropdown if CAName is false\r\n//         className={`appearance-none bg-transparent border-none cursor-pointer focus:outline-none`}\r\n//         style={{\r\n//           ...(CAName === false && { appearance: \"none\" }), // Apply appearance: none only if CAName is false\r\n//           width: \"70%\",\r\n//           padding: \"5px\",\r\n//           fontSize: \"14px\",\r\n//           color: \"#333\",\r\n//           background: \"none\",\r\n//           border: \"none\",\r\n//           textAlign: \"left\",\r\n//         }}\r\n//         onMouseOver={(e) => {\r\n//           if (CAName) e.target.style.border = \"1px solid #ccc\";\r\n//         }}\r\n//         onMouseOut={(e) => {\r\n//           if (CAName) e.target.style.border = \"none\";\r\n//         }}\r\n//       >\r\n//         <option value=\"Make\">Make</option>\r\n//         <option value=\"Buy\">Buy</option>\r\n//       </select>\r\n//     );\r\n//   },\r\n// },\r\n","import { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  setParentDetailsLoading,\r\n  setSpecDocument,\r\n} from \"../store/droppedObjectSlice\";\r\nimport { MSG_FETCH_CSRF_HEADERS_FAILED } from \"../utils/toastMessages\";\r\nimport useToast from \"./useToast\";\r\nimport { fetchCsrfToken } from \"../services/api/PlantAssignment/fetchCsrfService\";\r\nimport { initWidget } from \"../lib/widget\";\r\nimport { callEnoviaWebService, loadWAFData, fetchData } from \"../utils/helpers\";\r\n\r\nconst useCompanionWidget = () => {\r\n  const { showErrorToast } = useToast();\r\n  const dispatch = useDispatch();\r\n  const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n  let email = window.widget.getValue(\"email\");\r\n\r\n  console.log(\"Email in useBOSWidget:\", email);\r\n  // console.log(\"Security context using preferences are\", securitycontext);\r\n\r\n  const handleBOSWidget = async (\r\n    collabSpace,\r\n    state,\r\n    objectId,\r\n    type,\r\n    parentName,\r\n    parentRevision\r\n  ) => {\r\n    try {\r\n      console.log(\"Object id is:\", objectId);\r\n      console.log(\"Object type is:\", type);\r\n      dispatch(setParentDetailsLoading(true));\r\n\r\n      const headers = await fetchCsrfToken();\r\n      if (!headers) {\r\n        showErrorToast(MSG_FETCH_CSRF_HEADERS_FAILED);\r\n        return;\r\n      }\r\n\r\n      console.log(\"[useBOSWidget] CSRF Headers:\", headers);\r\n\r\n      // Step 1: Call Enovia Web Service\r\n      let baseURL = `${ENOVIA_BASE_URL}/resources/v1/modeler/documents/parentId/${objectId}?parentRelName=SpecificationDocument`;\r\n\r\n      let parentDirection = type === \"Document\" ? \"to\" : \"from\";\r\n\r\n      let urlObjWAF = `${baseURL}&parentDirection=${parentDirection}`;\r\n      let ChildObject = await callEnoviaWebService(\r\n        \"GET\",\r\n        urlObjWAF,\r\n        \"\",\r\n        headers\r\n      );\r\n      console.log(\"SpecDetails Response:\", ChildObject);\r\n\r\n      if (\r\n        ChildObject &&\r\n        ChildObject.status &&\r\n        ChildObject.output.data.length > 0\r\n      ) {\r\n        let ChildObjectDocument = ChildObject.output.data.map((sSpec) => ({\r\n          id: sSpec.id,\r\n          title:\r\n            sSpec.dataelements.title && sSpec.dataelements.title.trim() !== \"\"\r\n              ? sSpec.dataelements.title\r\n              : sSpec.dataelements.secondaryTitle,\r\n          revision: sSpec.dataelements.revision,\r\n          state: sSpec.dataelements.stateNLS,\r\n          name: sSpec.dataelements.name,\r\n        }));\r\n\r\n        console.log(\r\n          \"[useBOSWidget] Extracted Spec Documents:\",\r\n          ChildObjectDocument\r\n        );\r\n        // if type is Document and then iterate ovet the\r\n        if (type === \"Document\") {\r\n          const revisionBody = {\r\n            data: [],\r\n          };\r\n          ChildObjectDocument.forEach((child) => {\r\n            const body = {\r\n              id: child.id,\r\n              identifier: child.id,\r\n              type: \"VPMReference\",\r\n              source: `${ENOVIA_BASE_URL}`,\r\n              relativePath: `/resources/v1/modeler/dseng/dseng:EngItem/${child.id}`,\r\n            };\r\n            revisionBody.data.push(body);\r\n          });\r\n          const RevisionUrl = `${ENOVIA_BASE_URL}/resources/v1/modeler/dslc/version/getGraph`;\r\n          const response = await callEnoviaWebService(\r\n            \"POST\",\r\n            RevisionUrl,\r\n            revisionBody,\r\n            headers\r\n          );\r\n          console.log(\"response is:\", response);\r\n          response.output.results.forEach((item) => {\r\n            // Find the latest version based on the 'revision' key\r\n            const latestVersion = item.versions.reduce((latest, current) => {\r\n              return convertRevisionToNumber(current.revision) >\r\n                convertRevisionToNumber(latest.revision)\r\n                ? current\r\n                : latest;\r\n            });\r\n\r\n            // Update 'isLatestRevision' for only the matching document\r\n            ChildObjectDocument = ChildObjectDocument.map((doc) => {\r\n              if (item.versions.some((version) => version.id === doc.id)) {\r\n                return {\r\n                  ...doc,\r\n                  isLatestRevision:\r\n                    doc.id === latestVersion.id ? \"TRUE\" : \"FALSE\",\r\n                };\r\n              }\r\n              return doc;\r\n            });\r\n          });\r\n\r\n          // Function to convert revision to a comparable numeric value\r\n          function convertRevisionToNumber(rev) {\r\n            if (/^\\d+$/.test(rev)) return parseInt(rev, 10); // Handle numeric revisions (1,2,3)\r\n\r\n            let number = 0;\r\n            for (let i = 0; i < rev.length; i++) {\r\n              number =\r\n                number * 26 + (rev.charCodeAt(i) - \"A\".charCodeAt(0) + 1);\r\n            }\r\n            return number; // Handles A-Z, AA-ZZ revisions\r\n          }\r\n\r\n          console.log(\"ChildObjectDocument is:\", ChildObjectDocument);\r\n        }\r\n        let requestBody;\r\n        let getUrl;\r\n        if (type === \"Document\") {\r\n          getUrl =\r\n            \"https://saasimplementationserverdev.azurewebsites.net/bosAttribute/getLatestSpecItemDetails\";\r\n          requestBody = {\r\n            SpecName: parentName, // Replace with actual SpecName if dynamic\r\n            SpecRevision: parentRevision, // Replace with actual SpecRevision if dynamic\r\n            Items: ChildObjectDocument.map((obj) => ({\r\n              ItemName: obj.name, // Replace dynamically if needed\r\n              ItemRevision: obj.revision,\r\n            })),\r\n          };\r\n        } else {\r\n          getUrl =\r\n            \"https://saasimplementationserverdev.azurewebsites.net/bosAttribute/getLatestItemSpecDetails\";\r\n          requestBody = {\r\n            ItemName: parentName, // Replace with actual ItemName if dynamic\r\n            ItemRevision: parentRevision, // Replace with actual revision if dynamic\r\n            Specifications: ChildObjectDocument.map((obj) => ({\r\n              SpecName: obj.name,\r\n              SpecRevision: obj.revision,\r\n            })),\r\n          };\r\n        }\r\n\r\n        console.log(\"Requested Body is:\", requestBody);\r\n\r\n        const response = await fetchData(\"POST\", getUrl, requestBody);\r\n\r\n        console.log(\"the response from node API is:\", response);\r\n\r\n        let mergedData = [];\r\n        if (response?.data?.data?.Specifications) {\r\n          // **Case 1: API Response Contains \"Specifications\"**\r\n          response.data.data.Specifications.forEach((spec) => {\r\n            let matchingDoc = ChildObjectDocument.find(\r\n              (obj) =>\r\n                obj.name === spec.SpecName && obj.revision === spec.SpecRevision\r\n            );\r\n\r\n            mergedData.push({\r\n              childState: matchingDoc?.state || \"\",\r\n              childTitle: matchingDoc?.title || \"\",\r\n              childLatest: matchingDoc?.isLatestRevision || \"FALSE\",\r\n              childName: spec.SpecName,\r\n              childRevision: spec.SpecRevision,\r\n              PrintOnPurchaseOrderRequired: spec.PrintOnPurchaseOrderRequired,\r\n              PrintOnWorkOrderRequired: spec.PrintOnWorkOrderRequired,\r\n              WorkOrderDocumentRequired: spec.WorkOrderDocumentRequired,\r\n              PrintOnReportOrderRequired: spec.PrintOnReportOrderRequired,\r\n              \"SAP/JDE\": spec[\"SAP/JDE\"],\r\n            });\r\n          });\r\n        } else if (response?.data?.data?.Items) {\r\n          // get all the id's\r\n\r\n          // **Case 2: API Response Contains \"Items\"**\r\n          response.data.data.Items.forEach((item) => {\r\n            let matchingDoc = ChildObjectDocument.find(\r\n              (doc) =>\r\n                doc.name === item.ItemName && doc.revision === item.ItemRevision\r\n            );\r\n\r\n            mergedData.push({\r\n              childState: matchingDoc?.state || \"\",\r\n              childTitle: matchingDoc?.title || \"\",\r\n              childName: item.ItemName,\r\n              childRevision: item.ItemRevision,\r\n              childLatest: matchingDoc?.isLatestRevision || \"FALSE\",\r\n              PrintOnPurchaseOrderRequired: item.PrintOnPurchaseOrderRequired,\r\n              PrintOnWorkOrderRequired: item.PrintOnWorkOrderRequired,\r\n              WorkOrderDocumentRequired: item.WorkOrderDocumentRequired,\r\n              PrintOnReportOrderRequired: item.PrintOnReportOrderRequired,\r\n              \"SAP/JDE\": item[\"SAP/JDE\"],\r\n            });\r\n          });\r\n        } else {\r\n          console.warn(\"[useBOSWidget] Unexpected API response format.\");\r\n        }\r\n        console.log(\r\n          \"[useBOSWidget] Final Merged Data for Dispatch:\",\r\n          mergedData\r\n        );\r\n\r\n        dispatch(setSpecDocument(mergedData));\r\n        // You can now dispatch or return this data as needed\r\n      } else {\r\n        console.warn(\"[useBOSWidget] No connected childs.\");\r\n        dispatch(setSpecDocument([]));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[useBOSWidget] Error:\", error);\r\n      throw error; // Let the caller handle the error\r\n    } finally {\r\n      dispatch(setParentDetailsLoading(false)); // Ensure loading state is reset\r\n    }\r\n  };\r\n\r\n  return { handleBOSWidget };\r\n};\r\n\r\nexport default useCompanionWidget;\r\n\r\n// response.output.results.forEach((item) => {\r\n//   // Find the latest version based on the 'revision' key\r\n//   const latestVersion = item.versions.reduce((latest, current) => {\r\n//     return convertRevisionToNumber(current.revision) > convertRevisionToNumber(latest.revision)\r\n//       ? current\r\n//       : latest;\r\n//   });\r\n\r\n//   // Update 'isLatestRevision' for each document\r\n//   ChildObjectDocument = ChildObjectDocument.map((doc) => ({\r\n//     ...doc,\r\n//     isLatestRevision: doc.id === latestVersion.id ? \"TRUE\" : \"FALSE\",\r\n//   }));\r\n// });\r\n\r\n// // Function to convert revision to a comparable numeric value\r\n// function convertRevisionToNumber(rev) {\r\n//   if (/^\\d+$/.test(rev)) return parseInt(rev, 10); // Handle numeric revisions (1,2,3)\r\n\r\n//   let number = 0;\r\n//   for (let i = 0; i < rev.length; i++) {\r\n//     number = number * 26 + (rev.charCodeAt(i) - \"A\".charCodeAt(0) + 1);\r\n//   }\r\n//   return number; // Handles A-Z, AA-ZZ revisions\r\n// }\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDroppedObjectData, setLoading } from \"../store/droppedObjectSlice\";\r\nimport { setIsDropped as setIsDroppedAction } from \"../store/droppedObjectSlice\";\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  getDroppedObjectDetails,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\nimport useCompanionWidget from \"./useCompanionWidget\";\r\n\r\nconst useCompanionDropableArea = () => {\r\n  const { showErrorToast } = useToast();\r\n  const { handleCompanionWidget } = useCompanionWidget();\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n\r\n  const loading = useSelector((state) => state.droppedObject.loading);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        // const cardownerResult = await fetchCardOwnerDetailsService({\r\n        //   dataItems,\r\n        //   headers,\r\n        // });\r\n\r\n        if (objectDetailsResult.success) {\r\n          // Merge the data from both services\r\n          // const combineData = {\r\n          //   cardData: objectDetailsResult.data.cardData,\r\n          //   ownerData: cardownerResult.data.ownerData,\r\n          // };\r\n\r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n            })\r\n          );\r\n\r\n          const draggedObjectData = objectDetailsResult.data.cardData;\r\n          console.log(\"[Dragged Items are]\", draggedObjectData);\r\n\r\n          dispatch(setIsDroppedAction(true));\r\n\r\n          // call usePlantAssignment after successfully fetching object details\r\n          if (objectDetailsResult) {\r\n            await handleCompanionWidget(\r\n              draggedObjectData[\"Collaborative Space\"],\r\n              draggedObjectData[\"Maturity State\"],\r\n              dataItems[0]?.objectId,\r\n              dataItems[0]?.objectType,\r\n              draggedObjectData.Name,\r\n              draggedObjectData[\"Dropped Revision\"]\r\n            );\r\n          }\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        dispatch(setLoading(false));\r\n      }\r\n    },\r\n    [dispatch, handleCompanionWidget]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      setLoading(true); // Start loading state\r\n      console.log(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n  // Initialize droppable area\r\n  const initializeDroppableArea = useCallback(() => {\r\n    if (!isDropped) {\r\n      console.log(\r\n        \"[initializeDroppableArea] 🚀 Resetting isDropped to false...\"\r\n      );\r\n      dispatch(setIsDroppedAction(false)); // ✅ Reset only if necessary\r\n    } else {\r\n      console.log(\r\n        \"[initializeDroppableArea] ⏳ isDropped is already true. Skipping reset.\"\r\n      );\r\n    }\r\n    const interval = setInterval(() => {\r\n      const droppableContainer = document.querySelector(\".droppable-container\");\r\n      if (droppableContainer) {\r\n        clearInterval(interval);\r\n        initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n      }\r\n    }, 100); // Check every 100ms\r\n \r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [handleDrop, dispatch]);\r\n\r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n\r\nexport default useCompanionDropableArea;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { refreshWidgetData } from \"../../services/api/refreshService\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport {\r\n  MSG_REFRESH_ERROR,\r\n  MSG_REFRESH_SUCCESS,\r\n} from \"../../utils/toastMessages\";\r\nimport store from \"../../store\"; // ✅ Import Redux store directly\r\nimport Loader from \"../../components/Loader/Loader\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\nimport useCompanionDropableArea from \"../../hooks/useCompanionDropableArea\";\r\n\r\nconst WidgetLifecycle = () => {\r\n  const { handleDrop } = useCompanionDropableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  console.log(\"---[WidgetLifecycle]--- starts\");\r\n\r\n  const isAutoTriggeredRefresh = (trace) => {\r\n    return trace.some(\r\n      (line) =>\r\n        line.includes(\"UWA_Frame_Alone.js\") || line.includes(\"bundle-min.js\")\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.widget) return;\r\n\r\n    // console.log(\"[WidgetLifecycle] 📌 Registering `onRefresh` event...\");\r\n\r\n    const onRefresh = async () => {\r\n      const trace = new Error().stack.split(\"\\n\");\r\n\r\n      // ✅ Check if refresh was manually triggered\r\n      const userClickedRefresh = sessionStorage.getItem(\"userClickedRefresh\");\r\n\r\n      if (isAutoTriggeredRefresh(trace) && !userClickedRefresh) {\r\n        console.warn(\r\n          \"[WidgetLifecycle] ⛔ Auto-refresh detected. Ignoring unwanted `onRefresh`.\"\r\n        );\r\n        return; // ✅ Block auto-triggered refresh\r\n      }\r\n\r\n      // console.log(\"[WidgetLifecycle] 🔄 `onRefresh` triggered!\");\r\n      // ✅ Reset manual refresh flag so next refresh isn't blocked\r\n      sessionStorage.removeItem(\"userClickedRefresh\");\r\n      // console.log(\r\n      //   \"Stored Flag in widgt lifecycle:\",\r\n      //   sessionStorage.getItem(\"userClickedRefresh\")\r\n      // );\r\n\r\n      setLoading(true);\r\n\r\n      const latestState = store.getState();\r\n      const latestDraggedData =\r\n        latestState.droppedObject.droppedObjectData.initialDraggedData;\r\n\r\n      if (!latestDraggedData?.data?.items?.length) {\r\n        console.error(\r\n          \"[WidgetLifecycle] ⚠️ `initialDraggedData` is missing or invalid:\",\r\n          latestDraggedData\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // console.log(\r\n        //   \"[WidgetLifecycle] 🚀 Refreshing widget with latest data...\"\r\n        // );\r\n        await refreshWidgetData(latestDraggedData.data.items, handleDrop);\r\n      } catch (error) {\r\n        console.error(\"[WidgetLifecycle] ❌ Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      } finally {\r\n        setLoading(false); // ✅ Stop Loader when refresh completes\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      }\r\n    };\r\n    console.trace(\"[WidgetLifecycle] 🔄 `onRefresh` was called from:\");\r\n    window.widget.addEvent(\"onRefresh\", onRefresh);\r\n    // console.log(\r\n    //   \"[WidgetLifecycle] ✅ `onRefresh` event registered successfully\"\r\n    // );\r\n  }, []); // ✅ Runs only once\r\n\r\n  return loading ? <Loader /> : null;\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import { io } from \"socket.io-client\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../App.css\";\r\nimport \"../../styles/variables.css\";\r\n// import WidgetLifecycle from \"./WidgetLifecycle\";\r\nimport CompanionWidget from \"./companionWidget.jsx\";\r\nimport WidgetLifecycle from \"./WidgetLifecycle\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <WidgetLifecycle />\r\n      <CompanionWidget />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\n// Function to inject the refresh listener script into the **parent window**\r\nfunction injectRefreshListener() {\r\n  // console.log(\"🌍 [index.js] Injecting refresh listener into parent window...\");\r\n\r\n  const scriptContent = `\r\n    function listenForRefreshClicks() {\r\n      // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\r\n\r\n      document.body.addEventListener(\"click\", function (event) {\r\n        let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\r\n\r\n        if (refreshButton) {\r\n          // console.log(\"✅ [Parent] User clicked Refresh!\");\r\n          sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\r\n          // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\r\n        }\r\n      }, true);\r\n    }\r\n\r\n    // ✅ Ensure event listener is added even if DOM is already loaded\r\n    if (document.readyState === \"loading\") {\r\n      document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\r\n    } else {\r\n      listenForRefreshClicks();\r\n    }\r\n  `;\r\n\r\n  // Inject script **into the parent window**\r\n  if (window.parent && window.parent.document) {\r\n    let injectedScript = window.parent.document.createElement(\"script\");\r\n    injectedScript.textContent = scriptContent;\r\n    window.parent.document.body.appendChild(injectedScript);\r\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\r\n  } else {\r\n    console.warn(\r\n      \"⚠️ [index.js] Unable to inject script—parent window not accessible.\"\r\n    );\r\n  }\r\n}\r\n\r\n// ✅ Inject the script when the React app starts\r\ninjectRefreshListener();\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n"],"names":["DragAndDropComponent","handleDrop","useDroppableArea","performSearch","useInterComSearch","_jsx","_Fragment","children","_jsxs","className","Image","style","width","height","src","alt","SearchInput","onSearch","searchText","title","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","length","id","objectId","objectType","console","warn","forwardRef","_ref","ref","data","columns","addedItem","CAName","state","showWarningToast","useToast","rowSelection","setRowSelection","useState","useEffect","addPlant","selectedItems","table","getSelectedRowModel","rows","map","item","original","MSG_EMPTYADD_ERROR","useImperativeHandle","enhancedColumns","useMemo","cell","_ref2","row","type","checked","getIsSelected","onChange","getToggleSelectedHandler","useReactTable","enableRowSelection","onRowSelectionChange","getCoreRowModel","onClick","getRowModel","forEach","toggleSelected","maxHeight","backgroundColor","flexRender","getVisibleCells","column","columnDef","getContext","accessorKey","editableColumns","selectedRows","onApplyUpdate","valueOptions","onClose","selectedColumn","setSelectedColumn","selectedValue","setSelectedValue","handleApplyUpdate","applyToAll","alert","display","e","target","value","col","disabled","val","cursor","onSave","tableData","onMassUpdate","latestRevision","droppedRevision","showDropdown","setShowDropdown","handleSaveClick","MSG_BOS_SAVE","prev","MassUpdateDropdown","handleMassUpdate","scope","CompanionWidget","initializeDroppableArea","loading","useBOSDropableArea","tableKey","setTableKey","setTableData","isTableLoading","setIsTableLoading","screenLoader","setScreenLoader","isCardDataAvailable","setIsCardDataAvailable","specData","setSpecData","selectableRows","setSelectableRows","dispatch","useDispatch","showSuccessToast","showErrorToast","_objectSpread","changedCells","log","selectedTableRows","useSelector","droppedObject","droppedObjectData","loadingParentDetails","proposedChanges","plantObjectData","isDropped","bosData","BOSObjectData","bosSpecDocument","specDocument","updateTableData","updatedData","newDataWithChanges","newItem","originalItem","find","oldItem","Title","Revision","Object","keys","key","prevKey","cardData","initialDraggedData","_droppedObjectData$in","_droppedObjectData$in2","items","newTableData","getTableData","rowData","childTitle","childRevision","State","childState","PrintOnPurchaseOrderRequired","PrintOnWorkOrderRequired","WorkOrderDocumentRequired","PrintOnReportOrderRequired","IsLatest","childLatest","Type","owner","Owner","Description","imageURL","concat","process","EIN","getCardData","tableColumns","baseColumns","header","push","columnKey","getValue","_table$options$meta","updatedValue","r","options","meta","padding","fontSize","background","border","textAlign","onMouseOver","onMouseOut","Loader","handleHomeClick","setIsDropped","setDroppedObjectData","parentDetails","versions","setPlantObjectData","allPlants","initialAssignedPlants","uniquePlants","productChildren","headers","CardWithDragAndDrop","widgetType","CompanionToolbarNativeCta","async","ChildNameKey","ChildRevKey","ChildStateKey","ChildIdKey","parentData","SpecName","Name","SpecRevision","SpecState","SpecID","ItemName","ItemRevision","ItemState","ItemID","formattedData","matchingData","childName","ID","sort","a","b","localeCompare","Number","response","fetchData","status","MSG_SAVE_SUCCESS","MSG_SAVE_FAILURE","mergedData","updatedRow","updated","ReusableTable","onSelectableRowsChange","useCompanionWidget","ENOVIA_BASE_URL","email","window","widget","handleBOSWidget","collabSpace","parentName","parentRevision","setParentDetailsLoading","fetchCsrfToken","MSG_FETCH_CSRF_HEADERS_FAILED","baseURL","parentDirection","urlObjWAF","ChildObject","callEnoviaWebService","output","_response$data","_response$data$data","_response$data2","_response$data2$data","requestBody","getUrl","ChildObjectDocument","sSpec","dataelements","trim","secondaryTitle","revision","stateNLS","name","revisionBody","child","body","identifier","source","relativePath","RevisionUrl","convertRevisionToNumber","rev","test","parseInt","number","i","charCodeAt","results","latestVersion","reduce","latest","current","doc","some","version","isLatestRevision","Items","obj","Specifications","spec","matchingDoc","setSpecDocument","error","useCompanionDropableArea","handleCompanionWidget","fetchObjectDetails","useCallback","objectDetailsResult","getDroppedObjectDetails","dataItems","success","draggedObjectData","_dataItems$","_dataItems$2","setIsDroppedAction","MSG_FETCH_OBJECT_DETAILS_FAILED","setLoading","MSG_UNEXPECTED_ERROR","interval","setInterval","droppableContainer","document","querySelector","clearInterval","initDroppable","WidgetLifecycle","trace","addEvent","_latestDraggedData$da","_latestDraggedData$da2","Error","stack","split","userClickedRefresh","sessionStorage","getItem","line","includes","isAutoTriggeredRefresh","removeItem","latestDraggedData","store","getState","refreshWidgetData","MSG_REFRESH_ERROR","MSG_REFRESH_SUCCESS","root","hasOnLoadRun","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","getElementById","createElement","appendChild","ReactDOM","render","Provider","ToastContainer","start","parent","injectedScript","textContent","injectRefreshListener"],"sourceRoot":""}