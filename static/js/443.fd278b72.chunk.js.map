{"version":3,"file":"static/js/443.fd278b72.chunk.js","mappings":"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","sources":["../node_modules/@dnd-kit/accessibility/src/components/HiddenText/HiddenText.tsx","../node_modules/@dnd-kit/accessibility/src/components/LiveRegion/LiveRegion.tsx","../node_modules/@dnd-kit/core/src/components/DndMonitor/context.ts","../node_modules/@dnd-kit/core/src/components/Accessibility/defaults.ts","../node_modules/@dnd-kit/core/src/components/Accessibility/Accessibility.tsx","../node_modules/@dnd-kit/accessibility/src/hooks/useAnnouncement.ts","../node_modules/@dnd-kit/core/src/components/DndMonitor/useDndMonitor.ts","../node_modules/@dnd-kit/core/src/store/actions.ts","../node_modules/@dnd-kit/core/src/utilities/other/noop.ts","../node_modules/@dnd-kit/core/src/sensors/useSensor.ts","../node_modules/@dnd-kit/core/src/sensors/useSensors.ts","../node_modules/@dnd-kit/core/src/utilities/coordinates/constants.ts","../node_modules/@dnd-kit/core/src/utilities/coordinates/distanceBetweenPoints.ts","../node_modules/@dnd-kit/core/src/utilities/algorithms/helpers.ts","../node_modules/@dnd-kit/core/src/utilities/algorithms/closestCenter.ts","../node_modules/@dnd-kit/core/src/utilities/algorithms/rectIntersection.ts","../node_modules/@dnd-kit/core/src/utilities/rect/getRectDelta.ts","../node_modules/@dnd-kit/core/src/utilities/rect/rectAdjustment.ts","../node_modules/@dnd-kit/core/src/utilities/transform/parseTransform.ts","../node_modules/@dnd-kit/core/src/utilities/rect/getRect.ts","../node_modules/@dnd-kit/core/src/utilities/transform/inverseTransform.ts","../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollableAncestors.ts","../node_modules/@dnd-kit/core/src/utilities/scroll/isScrollable.ts","../node_modules/@dnd-kit/core/src/utilities/scroll/isFixed.ts","../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollableElement.ts","../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollCoordinates.ts","../node_modules/@dnd-kit/core/src/types/direction.ts","../node_modules/@dnd-kit/core/src/utilities/scroll/documentScrollingElement.ts","../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollPosition.ts","../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollDirectionAndSpeed.ts","../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollElementRect.ts","../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollOffsets.ts","../node_modules/@dnd-kit/core/src/utilities/scroll/scrollIntoViewIfNeeded.ts","../node_modules/@dnd-kit/core/src/utilities/rect/Rect.ts","../node_modules/@dnd-kit/core/src/sensors/utilities/Listeners.ts","../node_modules/@dnd-kit/core/src/sensors/utilities/hasExceededDistance.ts","../node_modules/@dnd-kit/core/src/sensors/events.ts","../node_modules/@dnd-kit/core/src/sensors/keyboard/types.ts","../node_modules/@dnd-kit/core/src/sensors/keyboard/defaults.ts","../node_modules/@dnd-kit/core/src/sensors/keyboard/KeyboardSensor.ts","../node_modules/@dnd-kit/core/src/sensors/pointer/AbstractPointerSensor.ts","../node_modules/@dnd-kit/core/src/sensors/utilities/getEventListenerTarget.ts","../node_modules/@dnd-kit/core/src/sensors/pointer/PointerSensor.ts","../node_modules/@dnd-kit/core/src/sensors/mouse/MouseSensor.ts","../node_modules/@dnd-kit/core/src/sensors/touch/TouchSensor.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useAutoScroller.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useDroppableMeasuring.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useInitialValue.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useResizeObserver.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useRect.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useMutationObserver.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useScrollableAncestors.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useScrollOffsetsDelta.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useWindowRect.ts","../node_modules/@dnd-kit/core/src/utilities/rect/getWindowClientRect.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useRects.ts","../node_modules/@dnd-kit/core/src/utilities/nodes/getMeasurableNode.ts","../node_modules/@dnd-kit/core/src/components/DndContext/defaults.ts","../node_modules/@dnd-kit/core/src/store/constructors.ts","../node_modules/@dnd-kit/core/src/store/context.ts","../node_modules/@dnd-kit/core/src/store/reducer.ts","../node_modules/@dnd-kit/core/src/components/Accessibility/components/RestoreFocus.tsx","../node_modules/@dnd-kit/core/src/modifiers/applyModifiers.ts","../node_modules/@dnd-kit/core/src/components/DndContext/DndContext.tsx","../node_modules/@dnd-kit/core/src/components/DndMonitor/useDndMonitorProvider.tsx","../node_modules/@dnd-kit/core/src/components/DndContext/hooks/useMeasuringConfiguration.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useCachedNode.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useInitialRect.ts","../node_modules/@dnd-kit/core/src/components/DndContext/hooks/useLayoutShiftScrollCompensation.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useDragOverlayMeasuring.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useRectDelta.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useScrollOffsets.ts","../node_modules/@dnd-kit/core/src/utilities/rect/adjustScale.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useCombineActivators.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useSensorSetup.ts","../node_modules/@dnd-kit/core/src/hooks/useDraggable.ts","../node_modules/@dnd-kit/core/src/hooks/utilities/useSyntheticListeners.ts","../node_modules/@dnd-kit/core/src/hooks/useDndContext.ts","../node_modules/@dnd-kit/core/src/hooks/useDroppable.ts","../node_modules/@dnd-kit/modifiers/src/restrictToHorizontalAxis.ts","../node_modules/@dnd-kit/sortable/src/utilities/arrayMove.ts","../node_modules/@dnd-kit/sortable/src/utilities/getSortedRects.ts","../node_modules/@dnd-kit/sortable/src/utilities/isValidIndex.ts","../node_modules/@dnd-kit/sortable/src/strategies/horizontalListSorting.ts","../node_modules/@dnd-kit/sortable/src/strategies/rectSorting.ts","../node_modules/@dnd-kit/sortable/src/components/SortableContext.tsx","../node_modules/@dnd-kit/sortable/src/utilities/itemsEqual.ts","../node_modules/@dnd-kit/sortable/src/utilities/normalizeDisabled.ts","../node_modules/@dnd-kit/sortable/src/hooks/defaults.ts","../node_modules/@dnd-kit/sortable/src/hooks/useSortable.ts","../node_modules/@dnd-kit/sortable/src/hooks/utilities/useDerivedTransform.ts","../node_modules/@dnd-kit/sortable/src/sensors/keyboard/sortableKeyboardCoordinates.ts","../node_modules/@dnd-kit/utilities/src/hooks/useCombinedRefs.ts","../node_modules/@dnd-kit/utilities/src/execution-context/canUseDOM.ts","../node_modules/@dnd-kit/utilities/src/type-guards/isWindow.ts","../node_modules/@dnd-kit/utilities/src/type-guards/isNode.ts","../node_modules/@dnd-kit/utilities/src/execution-context/getWindow.ts","../node_modules/@dnd-kit/utilities/src/type-guards/isDocument.ts","../node_modules/@dnd-kit/utilities/src/type-guards/isHTMLElement.ts","../node_modules/@dnd-kit/utilities/src/type-guards/isSVGElement.ts","../node_modules/@dnd-kit/utilities/src/execution-context/getOwnerDocument.ts","../node_modules/@dnd-kit/utilities/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/@dnd-kit/utilities/src/hooks/useEvent.ts","../node_modules/@dnd-kit/utilities/src/hooks/useInterval.ts","../node_modules/@dnd-kit/utilities/src/hooks/useLatestValue.ts","../node_modules/@dnd-kit/utilities/src/hooks/useLazyMemo.ts","../node_modules/@dnd-kit/utilities/src/hooks/useNodeRef.ts","../node_modules/@dnd-kit/utilities/src/hooks/usePrevious.ts","../node_modules/@dnd-kit/utilities/src/hooks/useUniqueId.ts","../node_modules/@dnd-kit/utilities/src/adjustment.ts","../node_modules/@dnd-kit/utilities/src/event/isKeyboardEvent.ts","../node_modules/@dnd-kit/utilities/src/coordinates/getEventCoordinates.ts","../node_modules/@dnd-kit/utilities/src/event/isTouchEvent.ts","../node_modules/@dnd-kit/utilities/src/event/hasViewportRelativeCoordinates.ts","../node_modules/@dnd-kit/utilities/src/css.ts","../node_modules/@dnd-kit/utilities/src/focus/findFirstFocusableNode.ts","../node_modules/@fortawesome/fontawesome-svg-core/index.mjs","../node_modules/@fortawesome/react-fontawesome/index.es.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/Image.js","../node_modules/@tanstack/react-table/src/index.tsx","../node_modules/@tanstack/table-core/src/utils.ts","../node_modules/@tanstack/table-core/src/core/headers.ts","../node_modules/@tanstack/table-core/src/core/row.ts","../node_modules/@tanstack/table-core/src/core/cell.ts","../node_modules/@tanstack/table-core/src/features/ColumnFaceting.ts","../node_modules/@tanstack/table-core/src/filterFns.ts","../node_modules/@tanstack/table-core/src/features/ColumnFiltering.ts","../node_modules/@tanstack/table-core/src/aggregationFns.ts","../node_modules/@tanstack/table-core/src/features/ColumnGrouping.ts","../node_modules/@tanstack/table-core/src/features/ColumnOrdering.ts","../node_modules/@tanstack/table-core/src/features/ColumnPinning.ts","../node_modules/@tanstack/table-core/src/features/ColumnSizing.ts","../node_modules/@tanstack/table-core/src/features/ColumnVisibility.ts","../node_modules/@tanstack/table-core/src/features/GlobalFaceting.ts","../node_modules/@tanstack/table-core/src/features/RowSelection.ts","../node_modules/@tanstack/table-core/src/sortingFns.ts","../node_modules/@tanstack/table-core/src/core/table.ts","../node_modules/@tanstack/table-core/src/features/GlobalFiltering.ts","../node_modules/@tanstack/table-core/src/features/RowSorting.ts","../node_modules/@tanstack/table-core/src/features/RowExpanding.ts","../node_modules/@tanstack/table-core/src/features/RowPagination.ts","../node_modules/@tanstack/table-core/src/features/RowPinning.ts","../node_modules/@tanstack/table-core/src/core/column.ts","../node_modules/@tanstack/table-core/src/utils/getCoreRowModel.ts","../node_modules/@tanstack/table-core/src/utils/getSortedRowModel.ts"],"sourcesContent":["import React from 'react';\n\ninterface Props {\n  id: string;\n  value: string;\n}\n\nconst hiddenStyles: React.CSSProperties = {\n  display: 'none',\n};\n\nexport function HiddenText({id, value}: Props) {\n  return (\n    <div id={id} style={hiddenStyles}>\n      {value}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport interface Props {\n  id: string;\n  announcement: string;\n  ariaLiveType?: \"polite\" | \"assertive\" | \"off\";\n}\n\nexport function LiveRegion({id, announcement, ariaLiveType = \"assertive\"}: Props) {\n  // Hide element visually but keep it readable by screen readers\n  const visuallyHidden: React.CSSProperties = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(100%)',\n    whiteSpace: 'nowrap',\n  };\n  \n  return (\n    <div\n      id={id}\n      style={visuallyHidden}\n      role=\"status\"\n      aria-live={ariaLiveType}\n      aria-atomic\n    >\n      {announcement}\n    </div>\n  );\n}\n","import {createContext} from 'react';\n\nimport type {RegisterListener} from './types';\n\nexport const DndMonitorContext = createContext<RegisterListener | null>(null);\n","import type {Announcements, ScreenReaderInstructions} from './types';\n\nexport const defaultScreenReaderInstructions: ScreenReaderInstructions = {\n  draggable: `\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  `,\n};\n\nexport const defaultAnnouncements: Announcements = {\n  onDragStart({active}) {\n    return `Picked up draggable item ${active.id}.`;\n  },\n  onDragOver({active, over}) {\n    if (over) {\n      return `Draggable item ${active.id} was moved over droppable area ${over.id}.`;\n    }\n\n    return `Draggable item ${active.id} is no longer over a droppable area.`;\n  },\n  onDragEnd({active, over}) {\n    if (over) {\n      return `Draggable item ${active.id} was dropped over droppable area ${over.id}`;\n    }\n\n    return `Draggable item ${active.id} was dropped.`;\n  },\n  onDragCancel({active}) {\n    return `Dragging was cancelled. Draggable item ${active.id} was dropped.`;\n  },\n};\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {createPortal} from 'react-dom';\nimport {useUniqueId} from '@dnd-kit/utilities';\nimport {HiddenText, LiveRegion, useAnnouncement} from '@dnd-kit/accessibility';\n\nimport {DndMonitorListener, useDndMonitor} from '../DndMonitor';\n\nimport type {Announcements, ScreenReaderInstructions} from './types';\nimport {\n  defaultAnnouncements,\n  defaultScreenReaderInstructions,\n} from './defaults';\n\ninterface Props {\n  announcements?: Announcements;\n  container?: Element;\n  screenReaderInstructions?: ScreenReaderInstructions;\n  hiddenTextDescribedById: string;\n}\n\nexport function Accessibility({\n  announcements = defaultAnnouncements,\n  container,\n  hiddenTextDescribedById,\n  screenReaderInstructions = defaultScreenReaderInstructions,\n}: Props) {\n  const {announce, announcement} = useAnnouncement();\n  const liveRegionId = useUniqueId(`DndLiveRegion`);\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  useDndMonitor(\n    useMemo<DndMonitorListener>(\n      () => ({\n        onDragStart({active}) {\n          announce(announcements.onDragStart({active}));\n        },\n        onDragMove({active, over}) {\n          if (announcements.onDragMove) {\n            announce(announcements.onDragMove({active, over}));\n          }\n        },\n        onDragOver({active, over}) {\n          announce(announcements.onDragOver({active, over}));\n        },\n        onDragEnd({active, over}) {\n          announce(announcements.onDragEnd({active, over}));\n        },\n        onDragCancel({active, over}) {\n          announce(announcements.onDragCancel({active, over}));\n        },\n      }),\n      [announce, announcements]\n    )\n  );\n\n  if (!mounted) {\n    return null;\n  }\n\n  const markup = (\n    <>\n      <HiddenText\n        id={hiddenTextDescribedById}\n        value={screenReaderInstructions.draggable}\n      />\n      <LiveRegion id={liveRegionId} announcement={announcement} />\n    </>\n  );\n\n  return container ? createPortal(markup, container) : markup;\n}\n","import {useCallback, useState} from 'react';\n\nexport function useAnnouncement() {\n  const [announcement, setAnnouncement] = useState('');\n  const announce = useCallback((value: string | undefined) => {\n    if (value != null) {\n      setAnnouncement(value);\n    }\n  }, []);\n\n  return {announce, announcement} as const;\n}\n","import {useContext, useEffect} from 'react';\n\nimport {DndMonitorContext} from './context';\nimport type {DndMonitorListener} from './types';\n\nexport function useDndMonitor(listener: DndMonitorListener) {\n  const registerListener = useContext(DndMonitorContext);\n\n  useEffect(() => {\n    if (!registerListener) {\n      throw new Error(\n        'useDndMonitor must be used within a children of <DndContext>'\n      );\n    }\n\n    const unsubscribe = registerListener(listener);\n\n    return unsubscribe;\n  }, [listener, registerListener]);\n}\n","import type {Coordinates, UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\nexport enum Action {\n  DragStart = 'dragStart',\n  DragMove = 'dragMove',\n  DragEnd = 'dragEnd',\n  DragCancel = 'dragCancel',\n  DragOver = 'dragOver',\n  RegisterDroppable = 'registerDroppable',\n  SetDroppableDisabled = 'setDroppableDisabled',\n  UnregisterDroppable = 'unregisterDroppable',\n}\n\nexport type Actions =\n  | {\n      type: Action.DragStart;\n      active: UniqueIdentifier;\n      initialCoordinates: Coordinates;\n    }\n  | {type: Action.DragMove; coordinates: Coordinates}\n  | {type: Action.DragEnd}\n  | {type: Action.DragCancel}\n  | {\n      type: Action.RegisterDroppable;\n      element: DroppableContainer;\n    }\n  | {\n      type: Action.SetDroppableDisabled;\n      id: UniqueIdentifier;\n      key: UniqueIdentifier;\n      disabled: boolean;\n    }\n  | {\n      type: Action.UnregisterDroppable;\n      id: UniqueIdentifier;\n      key: UniqueIdentifier;\n    };\n","export function noop(..._args: any) {}\n","import {useMemo} from 'react';\n\nimport type {Sensor, SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensor<T extends SensorOptions>(\n  sensor: Sensor<T>,\n  options?: T\n): SensorDescriptor<T> {\n  return useMemo(\n    () => ({\n      sensor,\n      options: options ?? ({} as T),\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [sensor, options]\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensors(\n  ...sensors: (SensorDescriptor<any> | undefined | null)[]\n): SensorDescriptor<SensorOptions>[] {\n  return useMemo(\n    () =>\n      [...sensors].filter(\n        (sensor): sensor is SensorDescriptor<any> => sensor != null\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...sensors]\n  );\n}\n","import type {Coordinates} from '../../types';\n\nexport const defaultCoordinates: Coordinates = Object.freeze({\n  x: 0,\n  y: 0,\n});\n","import type {Coordinates} from '../../types';\n\n/**\n * Returns the distance between two points\n */\nexport function distanceBetween(p1: Coordinates, p2: Coordinates) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n","/* eslint-disable no-redeclare */\nimport type {ClientRect} from '../../types';\n\nimport type {Collision, CollisionDescriptor} from './types';\n\n/**\n * Sort collisions from smallest to greatest value\n */\nexport function sortCollisionsAsc(\n  {data: {value: a}}: CollisionDescriptor,\n  {data: {value: b}}: CollisionDescriptor\n) {\n  return a - b;\n}\n\n/**\n * Sort collisions from greatest to smallest value\n */\nexport function sortCollisionsDesc(\n  {data: {value: a}}: CollisionDescriptor,\n  {data: {value: b}}: CollisionDescriptor\n) {\n  return b - a;\n}\n\n/**\n * Returns the coordinates of the corners of a given rectangle:\n * [TopLeft {x, y}, TopRight {x, y}, BottomLeft {x, y}, BottomRight {x, y}]\n */\nexport function cornersOfRectangle({left, top, height, width}: ClientRect) {\n  return [\n    {\n      x: left,\n      y: top,\n    },\n    {\n      x: left + width,\n      y: top,\n    },\n    {\n      x: left,\n      y: top + height,\n    },\n    {\n      x: left + width,\n      y: top + height,\n    },\n  ];\n}\n\n/**\n * Returns the first collision, or null if there isn't one.\n * If a property is specified, returns the specified property of the first collision.\n */\nexport function getFirstCollision(\n  collisions: Collision[] | null | undefined\n): Collision | null;\nexport function getFirstCollision<T extends keyof Collision>(\n  collisions: Collision[] | null | undefined,\n  property: T\n): Collision[T] | null;\nexport function getFirstCollision(\n  collisions: Collision[] | null | undefined,\n  property?: keyof Collision\n) {\n  if (!collisions || collisions.length === 0) {\n    return null;\n  }\n\n  const [firstCollision] = collisions;\n\n  return property ? firstCollision[property] : firstCollision;\n}\n","import {distanceBetween} from '../coordinates';\nimport type {Coordinates, ClientRect} from '../../types';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {sortCollisionsAsc} from './helpers';\n\n/**\n * Returns the coordinates of the center of a given ClientRect\n */\nfunction centerOfRectangle(\n  rect: ClientRect,\n  left = rect.left,\n  top = rect.top\n): Coordinates {\n  return {\n    x: left + rect.width * 0.5,\n    y: top + rect.height * 0.5,\n  };\n}\n\n/**\n * Returns the closest rectangles from an array of rectangles to the center of a given\n * rectangle.\n */\nexport const closestCenter: CollisionDetection = ({\n  collisionRect,\n  droppableRects,\n  droppableContainers,\n}) => {\n  const centerRect = centerOfRectangle(\n    collisionRect,\n    collisionRect.left,\n    collisionRect.top\n  );\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {id} = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect) {\n      const distBetween = distanceBetween(centerOfRectangle(rect), centerRect);\n\n      collisions.push({id, data: {droppableContainer, value: distBetween}});\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n","import type {ClientRect} from '../../types';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {sortCollisionsDesc} from './helpers';\n\n/**\n * Returns the intersecting rectangle area between two rectangles\n */\nexport function getIntersectionRatio(\n  entry: ClientRect,\n  target: ClientRect\n): number {\n  const top = Math.max(target.top, entry.top);\n  const left = Math.max(target.left, entry.left);\n  const right = Math.min(target.left + target.width, entry.left + entry.width);\n  const bottom = Math.min(target.top + target.height, entry.top + entry.height);\n  const width = right - left;\n  const height = bottom - top;\n\n  if (left < right && top < bottom) {\n    const targetArea = target.width * target.height;\n    const entryArea = entry.width * entry.height;\n    const intersectionArea = width * height;\n    const intersectionRatio =\n      intersectionArea / (targetArea + entryArea - intersectionArea);\n\n    return Number(intersectionRatio.toFixed(4));\n  }\n\n  // Rectangles do not overlap, or overlap has an area of zero (edge/corner overlap)\n  return 0;\n}\n\n/**\n * Returns the rectangles that has the greatest intersection area with a given\n * rectangle in an array of rectangles.\n */\nexport const rectIntersection: CollisionDetection = ({\n  collisionRect,\n  droppableRects,\n  droppableContainers,\n}) => {\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {id} = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect) {\n      const intersectionRatio = getIntersectionRatio(rect, collisionRect);\n\n      if (intersectionRatio > 0) {\n        collisions.push({\n          id,\n          data: {droppableContainer, value: intersectionRatio},\n        });\n      }\n    }\n  }\n\n  return collisions.sort(sortCollisionsDesc);\n};\n","import type {Coordinates, ClientRect} from '../../types';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getRectDelta(\n  rect1: ClientRect | null,\n  rect2: ClientRect | null\n): Coordinates {\n  return rect1 && rect2\n    ? {\n        x: rect1.left - rect2.left,\n        y: rect1.top - rect2.top,\n      }\n    : defaultCoordinates;\n}\n","import type {Coordinates, ClientRect} from '../../types';\n\nexport function createRectAdjustmentFn(modifier: number) {\n  return function adjustClientRect(\n    rect: ClientRect,\n    ...adjustments: Coordinates[]\n  ): ClientRect {\n    return adjustments.reduce<ClientRect>(\n      (acc, adjustment) => ({\n        ...acc,\n        top: acc.top + modifier * adjustment.y,\n        bottom: acc.bottom + modifier * adjustment.y,\n        left: acc.left + modifier * adjustment.x,\n        right: acc.right + modifier * adjustment.x,\n      }),\n      {...rect}\n    );\n  };\n}\n\nexport const getAdjustedRect = createRectAdjustmentFn(1);\n","import type {Transform} from '@dnd-kit/utilities';\n\nexport function parseTransform(transform: string): Transform | null {\n  if (transform.startsWith('matrix3d(')) {\n    const transformArray = transform.slice(9, -1).split(/, /);\n\n    return {\n      x: +transformArray[12],\n      y: +transformArray[13],\n      scaleX: +transformArray[0],\n      scaleY: +transformArray[5],\n    };\n  } else if (transform.startsWith('matrix(')) {\n    const transformArray = transform.slice(7, -1).split(/, /);\n\n    return {\n      x: +transformArray[4],\n      y: +transformArray[5],\n      scaleX: +transformArray[0],\n      scaleY: +transformArray[3],\n    };\n  }\n\n  return null;\n}\n","import {getWindow} from '@dnd-kit/utilities';\n\nimport type {ClientRect} from '../../types';\nimport {inverseTransform} from '../transform';\n\ninterface Options {\n  ignoreTransform?: boolean;\n}\n\nconst defaultOptions: Options = {ignoreTransform: false};\n\n/**\n * Returns the bounding client rect of an element relative to the viewport.\n */\nexport function getClientRect(\n  element: Element,\n  options: Options = defaultOptions\n) {\n  let rect: ClientRect = element.getBoundingClientRect();\n\n  if (options.ignoreTransform) {\n    const {transform, transformOrigin} =\n      getWindow(element).getComputedStyle(element);\n\n    if (transform) {\n      rect = inverseTransform(rect, transform, transformOrigin);\n    }\n  }\n\n  const {top, left, width, height, bottom, right} = rect;\n\n  return {\n    top,\n    left,\n    width,\n    height,\n    bottom,\n    right,\n  };\n}\n\n/**\n * Returns the bounding client rect of an element relative to the viewport.\n *\n * @remarks\n * The ClientRect returned by this method does not take into account transforms\n * applied to the element it measures.\n *\n */\nexport function getTransformAgnosticClientRect(element: Element): ClientRect {\n  return getClientRect(element, {ignoreTransform: true});\n}\n","import type {ClientRect} from '../../types';\n\nimport {parseTransform} from './parseTransform';\n\nexport function inverseTransform(\n  rect: ClientRect,\n  transform: string,\n  transformOrigin: string\n): ClientRect {\n  const parsedTransform = parseTransform(transform);\n\n  if (!parsedTransform) {\n    return rect;\n  }\n\n  const {scaleX, scaleY, x: translateX, y: translateY} = parsedTransform;\n\n  const x = rect.left - translateX - (1 - scaleX) * parseFloat(transformOrigin);\n  const y =\n    rect.top -\n    translateY -\n    (1 - scaleY) *\n      parseFloat(transformOrigin.slice(transformOrigin.indexOf(' ') + 1));\n  const w = scaleX ? rect.width / scaleX : rect.width;\n  const h = scaleY ? rect.height / scaleY : rect.height;\n\n  return {\n    width: w,\n    height: h,\n    top: y,\n    right: x + w,\n    bottom: y + h,\n    left: x,\n  };\n}\n","import {\n  getWindow,\n  isDocument,\n  isHTMLElement,\n  isSVGElement,\n} from '@dnd-kit/utilities';\n\nimport {isFixed} from './isFixed';\nimport {isScrollable} from './isScrollable';\n\nexport function getScrollableAncestors(\n  element: Node | null,\n  limit?: number\n): Element[] {\n  const scrollParents: Element[] = [];\n\n  function findScrollableAncestors(node: Node | null): Element[] {\n    if (limit != null && scrollParents.length >= limit) {\n      return scrollParents;\n    }\n\n    if (!node) {\n      return scrollParents;\n    }\n\n    if (\n      isDocument(node) &&\n      node.scrollingElement != null &&\n      !scrollParents.includes(node.scrollingElement)\n    ) {\n      scrollParents.push(node.scrollingElement);\n\n      return scrollParents;\n    }\n\n    if (!isHTMLElement(node) || isSVGElement(node)) {\n      return scrollParents;\n    }\n\n    if (scrollParents.includes(node)) {\n      return scrollParents;\n    }\n\n    const computedStyle = getWindow(element).getComputedStyle(node);\n\n    if (node !== element) {\n      if (isScrollable(node, computedStyle)) {\n        scrollParents.push(node);\n      }\n    }\n\n    if (isFixed(node, computedStyle)) {\n      return scrollParents;\n    }\n\n    return findScrollableAncestors(node.parentNode);\n  }\n\n  if (!element) {\n    return scrollParents;\n  }\n\n  return findScrollableAncestors(element);\n}\n\nexport function getFirstScrollableAncestor(node: Node | null): Element | null {\n  const [firstScrollableAncestor] = getScrollableAncestors(node, 1);\n\n  return firstScrollableAncestor ?? null;\n}\n","import {getWindow} from '@dnd-kit/utilities';\n\nexport function isScrollable(\n  element: HTMLElement,\n  computedStyle: CSSStyleDeclaration = getWindow(element).getComputedStyle(\n    element\n  )\n): boolean {\n  const overflowRegex = /(auto|scroll|overlay)/;\n  const properties = ['overflow', 'overflowX', 'overflowY'];\n\n  return properties.some((property) => {\n    const value = computedStyle[property as keyof CSSStyleDeclaration];\n\n    return typeof value === 'string' ? overflowRegex.test(value) : false;\n  });\n}\n","import {getWindow} from '@dnd-kit/utilities';\n\nexport function isFixed(\n  node: HTMLElement,\n  computedStyle: CSSStyleDeclaration = getWindow(node).getComputedStyle(node)\n): boolean {\n  return computedStyle.position === 'fixed';\n}\n","import {\n  canUseDOM,\n  isHTMLElement,\n  isDocument,\n  getOwnerDocument,\n  isNode,\n  isWindow,\n} from '@dnd-kit/utilities';\n\nexport function getScrollableElement(element: EventTarget | null) {\n  if (!canUseDOM || !element) {\n    return null;\n  }\n\n  if (isWindow(element)) {\n    return element;\n  }\n\n  if (!isNode(element)) {\n    return null;\n  }\n\n  if (\n    isDocument(element) ||\n    element === getOwnerDocument(element).scrollingElement\n  ) {\n    return window;\n  }\n\n  if (isHTMLElement(element)) {\n    return element;\n  }\n\n  return null;\n}\n","import {isWindow} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\n\nexport function getScrollXCoordinate(element: Element | typeof window): number {\n  if (isWindow(element)) {\n    return element.scrollX;\n  }\n\n  return element.scrollLeft;\n}\n\nexport function getScrollYCoordinate(element: Element | typeof window): number {\n  if (isWindow(element)) {\n    return element.scrollY;\n  }\n\n  return element.scrollTop;\n}\n\nexport function getScrollCoordinates(\n  element: Element | typeof window\n): Coordinates {\n  return {\n    x: getScrollXCoordinate(element),\n    y: getScrollYCoordinate(element),\n  };\n}\n","export enum Direction {\n  Forward = 1,\n  Backward = -1,\n}\n","import {canUseDOM} from '@dnd-kit/utilities';\n\nexport function isDocumentScrollingElement(element: Element | null) {\n  if (!canUseDOM || !element) {\n    return false;\n  }\n\n  return element === document.scrollingElement;\n}\n","import {isDocumentScrollingElement} from './documentScrollingElement';\n\nexport function getScrollPosition(scrollingContainer: Element) {\n  const minScroll = {\n    x: 0,\n    y: 0,\n  };\n  const dimensions = isDocumentScrollingElement(scrollingContainer)\n    ? {\n        height: window.innerHeight,\n        width: window.innerWidth,\n      }\n    : {\n        height: scrollingContainer.clientHeight,\n        width: scrollingContainer.clientWidth,\n      };\n  const maxScroll = {\n    x: scrollingContainer.scrollWidth - dimensions.width,\n    y: scrollingContainer.scrollHeight - dimensions.height,\n  };\n\n  const isTop = scrollingContainer.scrollTop <= minScroll.y;\n  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;\n  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;\n  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;\n\n  return {\n    isTop,\n    isLeft,\n    isBottom,\n    isRight,\n    maxScroll,\n    minScroll,\n  };\n}\n","import {Direction, ClientRect} from '../../types';\nimport {getScrollPosition} from './getScrollPosition';\n\ninterface PositionalCoordinates\n  extends Pick<ClientRect, 'top' | 'left' | 'right' | 'bottom'> {}\n\nconst defaultThreshold = {\n  x: 0.2,\n  y: 0.2,\n};\n\nexport function getScrollDirectionAndSpeed(\n  scrollContainer: Element,\n  scrollContainerRect: ClientRect,\n  {top, left, right, bottom}: PositionalCoordinates,\n  acceleration = 10,\n  thresholdPercentage = defaultThreshold\n) {\n  const {isTop, isBottom, isLeft, isRight} = getScrollPosition(scrollContainer);\n\n  const direction = {\n    x: 0,\n    y: 0,\n  };\n  const speed = {\n    x: 0,\n    y: 0,\n  };\n  const threshold = {\n    height: scrollContainerRect.height * thresholdPercentage.y,\n    width: scrollContainerRect.width * thresholdPercentage.x,\n  };\n\n  if (!isTop && top <= scrollContainerRect.top + threshold.height) {\n    // Scroll Up\n    direction.y = Direction.Backward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.top + threshold.height - top) / threshold.height\n      );\n  } else if (\n    !isBottom &&\n    bottom >= scrollContainerRect.bottom - threshold.height\n  ) {\n    // Scroll Down\n    direction.y = Direction.Forward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.bottom - threshold.height - bottom) /\n          threshold.height\n      );\n  }\n\n  if (!isRight && right >= scrollContainerRect.right - threshold.width) {\n    // Scroll Right\n    direction.x = Direction.Forward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.right - threshold.width - right) / threshold.width\n      );\n  } else if (!isLeft && left <= scrollContainerRect.left + threshold.width) {\n    // Scroll Left\n    direction.x = Direction.Backward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.left + threshold.width - left) / threshold.width\n      );\n  }\n\n  return {\n    direction,\n    speed,\n  };\n}\n","export function getScrollElementRect(element: Element) {\n  if (element === document.scrollingElement) {\n    const {innerWidth, innerHeight} = window;\n\n    return {\n      top: 0,\n      left: 0,\n      right: innerWidth,\n      bottom: innerHeight,\n      width: innerWidth,\n      height: innerHeight,\n    };\n  }\n\n  const {top, left, right, bottom} = element.getBoundingClientRect();\n\n  return {\n    top,\n    left,\n    right,\n    bottom,\n    width: element.clientWidth,\n    height: element.clientHeight,\n  };\n}\n","import {add} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {\n  getScrollCoordinates,\n  getScrollXCoordinate,\n  getScrollYCoordinate,\n} from './getScrollCoordinates';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getScrollOffsets(scrollableAncestors: Element[]): Coordinates {\n  return scrollableAncestors.reduce<Coordinates>((acc, node) => {\n    return add(acc, getScrollCoordinates(node));\n  }, defaultCoordinates);\n}\n\nexport function getScrollXOffset(scrollableAncestors: Element[]): number {\n  return scrollableAncestors.reduce<number>((acc, node) => {\n    return acc + getScrollXCoordinate(node);\n  }, 0);\n}\n\nexport function getScrollYOffset(scrollableAncestors: Element[]): number {\n  return scrollableAncestors.reduce<number>((acc, node) => {\n    return acc + getScrollYCoordinate(node);\n  }, 0);\n}\n","import type {ClientRect} from '../../types';\nimport {getClientRect} from '../rect/getRect';\nimport {getFirstScrollableAncestor} from './getScrollableAncestors';\n\nexport function scrollIntoViewIfNeeded(\n  element: HTMLElement | null | undefined,\n  measure: (node: HTMLElement) => ClientRect = getClientRect\n) {\n  if (!element) {\n    return;\n  }\n\n  const {top, left, bottom, right} = measure(element);\n  const firstScrollableAncestor = getFirstScrollableAncestor(element);\n\n  if (!firstScrollableAncestor) {\n    return;\n  }\n\n  if (\n    bottom <= 0 ||\n    right <= 0 ||\n    top >= window.innerHeight ||\n    left >= window.innerWidth\n  ) {\n    element.scrollIntoView({\n      block: 'center',\n      inline: 'center',\n    });\n  }\n}\n","import type {ClientRect} from '../../types/rect';\nimport {\n  getScrollableAncestors,\n  getScrollOffsets,\n  getScrollXOffset,\n  getScrollYOffset,\n} from '../scroll';\n\nconst properties = [\n  ['x', ['left', 'right'], getScrollXOffset],\n  ['y', ['top', 'bottom'], getScrollYOffset],\n] as const;\n\nexport class Rect {\n  constructor(rect: ClientRect, element: Element) {\n    const scrollableAncestors = getScrollableAncestors(element);\n    const scrollOffsets = getScrollOffsets(scrollableAncestors);\n\n    this.rect = {...rect};\n    this.width = rect.width;\n    this.height = rect.height;\n\n    for (const [axis, keys, getScrollOffset] of properties) {\n      for (const key of keys) {\n        Object.defineProperty(this, key, {\n          get: () => {\n            const currentOffsets = getScrollOffset(scrollableAncestors);\n            const scrollOffsetsDeltla = scrollOffsets[axis] - currentOffsets;\n\n            return this.rect[key] + scrollOffsetsDeltla;\n          },\n          enumerable: true,\n        });\n      }\n    }\n\n    Object.defineProperty(this, 'rect', {enumerable: false});\n  }\n\n  private rect: ClientRect;\n\n  public width: number;\n\n  public height: number;\n\n  // The below properties are set by the `Object.defineProperty` calls in the constructor\n  // @ts-ignore\n  public top: number;\n  // @ts-ignore\n  public bottom: number;\n  // @ts-ignore\n  public right: number;\n  // @ts-ignore\n  public left: number;\n}\n","export class Listeners {\n  private listeners: [\n    string,\n    EventListenerOrEventListenerObject,\n    AddEventListenerOptions | boolean | undefined\n  ][] = [];\n\n  constructor(private target: EventTarget | null) {}\n\n  public add<T extends Event>(\n    eventName: string,\n    handler: (event: T) => void,\n    options?: AddEventListenerOptions | boolean\n  ) {\n    this.target?.addEventListener(eventName, handler as EventListener, options);\n    this.listeners.push([eventName, handler as EventListener, options]);\n  }\n\n  public removeAll = () => {\n    this.listeners.forEach((listener) =>\n      this.target?.removeEventListener(...listener)\n    );\n  };\n}\n","import type {Coordinates, DistanceMeasurement} from '../../types';\n\nexport function hasExceededDistance(\n  delta: Coordinates,\n  measurement: DistanceMeasurement\n): boolean {\n  const dx = Math.abs(delta.x);\n  const dy = Math.abs(delta.y);\n\n  if (typeof measurement === 'number') {\n    return Math.sqrt(dx ** 2 + dy ** 2) > measurement;\n  }\n\n  if ('x' in measurement && 'y' in measurement) {\n    return dx > measurement.x && dy > measurement.y;\n  }\n\n  if ('x' in measurement) {\n    return dx > measurement.x;\n  }\n\n  if ('y' in measurement) {\n    return dy > measurement.y;\n  }\n\n  return false;\n}\n","export enum EventName {\n  Click = 'click',\n  DragStart = 'dragstart',\n  Keydown = 'keydown',\n  ContextMenu = 'contextmenu',\n  Resize = 'resize',\n  SelectionChange = 'selectionchange',\n  VisibilityChange = 'visibilitychange',\n}\n\nexport function preventDefault(event: Event) {\n  event.preventDefault();\n}\n\nexport function stopPropagation(event: Event) {\n  event.stopPropagation();\n}\n","import type {Coordinates, UniqueIdentifier} from '../../types';\nimport type {SensorContext} from '../types';\n\nexport enum KeyboardCode {\n  Space = 'Space',\n  Down = 'ArrowDown',\n  Right = 'ArrowRight',\n  Left = 'ArrowLeft',\n  Up = 'ArrowUp',\n  Esc = 'Escape',\n  Enter = 'Enter',\n  Tab = 'Tab',\n}\n\nexport type KeyboardCodes = {\n  start: KeyboardEvent['code'][];\n  cancel: KeyboardEvent['code'][];\n  end: KeyboardEvent['code'][];\n};\n\nexport type KeyboardCoordinateGetter = (\n  event: KeyboardEvent,\n  args: {\n    active: UniqueIdentifier;\n    currentCoordinates: Coordinates;\n    context: SensorContext;\n  }\n) => Coordinates | void;\n","import {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\n\nexport const defaultKeyboardCodes: KeyboardCodes = {\n  start: [KeyboardCode.Space, KeyboardCode.Enter],\n  cancel: [KeyboardCode.Esc],\n  end: [KeyboardCode.Space, KeyboardCode.Enter, KeyboardCode.Tab],\n};\n\nexport const defaultKeyboardCoordinateGetter: KeyboardCoordinateGetter = (\n  event,\n  {currentCoordinates}\n) => {\n  switch (event.code) {\n    case KeyboardCode.Right:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x + 25,\n      };\n    case KeyboardCode.Left:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x - 25,\n      };\n    case KeyboardCode.Down:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y + 25,\n      };\n    case KeyboardCode.Up:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y - 25,\n      };\n  }\n\n  return undefined;\n};\n","import {\n  add as getAdjustedCoordinates,\n  subtract as getCoordinatesDelta,\n  getOwnerDocument,\n  getWindow,\n  isKeyboardEvent,\n} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {\n  defaultCoordinates,\n  getScrollPosition,\n  getScrollElementRect,\n} from '../../utilities';\nimport {scrollIntoViewIfNeeded} from '../../utilities/scroll';\nimport {EventName} from '../events';\nimport {Listeners} from '../utilities';\nimport type {\n  Activators,\n  SensorInstance,\n  SensorProps,\n  SensorOptions,\n} from '../types';\n\nimport {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\nimport {\n  defaultKeyboardCodes,\n  defaultKeyboardCoordinateGetter,\n} from './defaults';\n\nexport interface KeyboardSensorOptions extends SensorOptions {\n  keyboardCodes?: KeyboardCodes;\n  coordinateGetter?: KeyboardCoordinateGetter;\n  scrollBehavior?: ScrollBehavior;\n  onActivation?({event}: {event: KeyboardEvent}): void;\n}\n\nexport type KeyboardSensorProps = SensorProps<KeyboardSensorOptions>;\n\nexport class KeyboardSensor implements SensorInstance {\n  public autoScrollEnabled = false;\n  private referenceCoordinates: Coordinates | undefined;\n  private listeners: Listeners;\n  private windowListeners: Listeners;\n\n  constructor(private props: KeyboardSensorProps) {\n    const {\n      event: {target},\n    } = props;\n\n    this.props = props;\n    this.listeners = new Listeners(getOwnerDocument(target));\n    this.windowListeners = new Listeners(getWindow(target));\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    this.handleStart();\n\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n\n    setTimeout(() => this.listeners.add(EventName.Keydown, this.handleKeyDown));\n  }\n\n  private handleStart() {\n    const {activeNode, onStart} = this.props;\n    const node = activeNode.node.current;\n\n    if (node) {\n      scrollIntoViewIfNeeded(node);\n    }\n\n    onStart(defaultCoordinates);\n  }\n\n  private handleKeyDown(event: Event) {\n    if (isKeyboardEvent(event)) {\n      const {active, context, options} = this.props;\n      const {\n        keyboardCodes = defaultKeyboardCodes,\n        coordinateGetter = defaultKeyboardCoordinateGetter,\n        scrollBehavior = 'smooth',\n      } = options;\n      const {code} = event;\n\n      if (keyboardCodes.end.includes(code)) {\n        this.handleEnd(event);\n        return;\n      }\n\n      if (keyboardCodes.cancel.includes(code)) {\n        this.handleCancel(event);\n        return;\n      }\n\n      const {collisionRect} = context.current;\n      const currentCoordinates = collisionRect\n        ? {x: collisionRect.left, y: collisionRect.top}\n        : defaultCoordinates;\n\n      if (!this.referenceCoordinates) {\n        this.referenceCoordinates = currentCoordinates;\n      }\n\n      const newCoordinates = coordinateGetter(event, {\n        active,\n        context: context.current,\n        currentCoordinates,\n      });\n\n      if (newCoordinates) {\n        const coordinatesDelta = getCoordinatesDelta(\n          newCoordinates,\n          currentCoordinates\n        );\n        const scrollDelta = {\n          x: 0,\n          y: 0,\n        };\n        const {scrollableAncestors} = context.current;\n\n        for (const scrollContainer of scrollableAncestors) {\n          const direction = event.code;\n          const {isTop, isRight, isLeft, isBottom, maxScroll, minScroll} =\n            getScrollPosition(scrollContainer);\n          const scrollElementRect = getScrollElementRect(scrollContainer);\n\n          const clampedCoordinates = {\n            x: Math.min(\n              direction === KeyboardCode.Right\n                ? scrollElementRect.right - scrollElementRect.width / 2\n                : scrollElementRect.right,\n              Math.max(\n                direction === KeyboardCode.Right\n                  ? scrollElementRect.left\n                  : scrollElementRect.left + scrollElementRect.width / 2,\n                newCoordinates.x\n              )\n            ),\n            y: Math.min(\n              direction === KeyboardCode.Down\n                ? scrollElementRect.bottom - scrollElementRect.height / 2\n                : scrollElementRect.bottom,\n              Math.max(\n                direction === KeyboardCode.Down\n                  ? scrollElementRect.top\n                  : scrollElementRect.top + scrollElementRect.height / 2,\n                newCoordinates.y\n              )\n            ),\n          };\n\n          const canScrollX =\n            (direction === KeyboardCode.Right && !isRight) ||\n            (direction === KeyboardCode.Left && !isLeft);\n          const canScrollY =\n            (direction === KeyboardCode.Down && !isBottom) ||\n            (direction === KeyboardCode.Up && !isTop);\n\n          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {\n            const newScrollCoordinates =\n              scrollContainer.scrollLeft + coordinatesDelta.x;\n            const canScrollToNewCoordinates =\n              (direction === KeyboardCode.Right &&\n                newScrollCoordinates <= maxScroll.x) ||\n              (direction === KeyboardCode.Left &&\n                newScrollCoordinates >= minScroll.x);\n\n            if (canScrollToNewCoordinates && !coordinatesDelta.y) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollTo({\n                left: newScrollCoordinates,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            if (canScrollToNewCoordinates) {\n              scrollDelta.x = scrollContainer.scrollLeft - newScrollCoordinates;\n            } else {\n              scrollDelta.x =\n                direction === KeyboardCode.Right\n                  ? scrollContainer.scrollLeft - maxScroll.x\n                  : scrollContainer.scrollLeft - minScroll.x;\n            }\n\n            if (scrollDelta.x) {\n              scrollContainer.scrollBy({\n                left: -scrollDelta.x,\n                behavior: scrollBehavior,\n              });\n            }\n            break;\n          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {\n            const newScrollCoordinates =\n              scrollContainer.scrollTop + coordinatesDelta.y;\n            const canScrollToNewCoordinates =\n              (direction === KeyboardCode.Down &&\n                newScrollCoordinates <= maxScroll.y) ||\n              (direction === KeyboardCode.Up &&\n                newScrollCoordinates >= minScroll.y);\n\n            if (canScrollToNewCoordinates && !coordinatesDelta.x) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollTo({\n                top: newScrollCoordinates,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            if (canScrollToNewCoordinates) {\n              scrollDelta.y = scrollContainer.scrollTop - newScrollCoordinates;\n            } else {\n              scrollDelta.y =\n                direction === KeyboardCode.Down\n                  ? scrollContainer.scrollTop - maxScroll.y\n                  : scrollContainer.scrollTop - minScroll.y;\n            }\n\n            if (scrollDelta.y) {\n              scrollContainer.scrollBy({\n                top: -scrollDelta.y,\n                behavior: scrollBehavior,\n              });\n            }\n\n            break;\n          }\n        }\n\n        this.handleMove(\n          event,\n          getAdjustedCoordinates(\n            getCoordinatesDelta(newCoordinates, this.referenceCoordinates),\n            scrollDelta\n          )\n        );\n      }\n    }\n  }\n\n  private handleMove(event: Event, coordinates: Coordinates) {\n    const {onMove} = this.props;\n\n    event.preventDefault();\n    onMove(coordinates);\n  }\n\n  private handleEnd(event: Event) {\n    const {onEnd} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel(event: Event) {\n    const {onCancel} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onCancel();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n  }\n\n  static activators: Activators<KeyboardSensorOptions> = [\n    {\n      eventName: 'onKeyDown' as const,\n      handler: (\n        event: React.KeyboardEvent,\n        {keyboardCodes = defaultKeyboardCodes, onActivation},\n        {active}\n      ) => {\n        const {code} = event.nativeEvent;\n\n        if (keyboardCodes.start.includes(code)) {\n          const activator = active.activatorNode.current;\n\n          if (activator && event.target !== activator) {\n            return false;\n          }\n\n          event.preventDefault();\n\n          onActivation?.({event: event.nativeEvent});\n\n          return true;\n        }\n\n        return false;\n      },\n    },\n  ];\n}\n","import {\n  subtract as getCoordinatesDelta,\n  getEventCoordinates,\n  getOwnerDocument,\n  getWindow,\n} from '@dnd-kit/utilities';\n\nimport {defaultCoordinates} from '../../utilities';\nimport {\n  getEventListenerTarget,\n  hasExceededDistance,\n  Listeners,\n} from '../utilities';\nimport {EventName, preventDefault, stopPropagation} from '../events';\nimport {KeyboardCode} from '../keyboard';\nimport type {SensorInstance, SensorProps, SensorOptions} from '../types';\nimport type {Coordinates, DistanceMeasurement} from '../../types';\n\ninterface DistanceConstraint {\n  distance: DistanceMeasurement;\n  tolerance?: DistanceMeasurement;\n}\n\ninterface DelayConstraint {\n  delay: number;\n  tolerance: DistanceMeasurement;\n}\n\ninterface EventDescriptor {\n  name: keyof DocumentEventMap;\n  passive?: boolean;\n}\n\nexport interface PointerEventHandlers {\n  cancel?: EventDescriptor;\n  move: EventDescriptor;\n  end: EventDescriptor;\n}\n\nexport type PointerActivationConstraint =\n  | DelayConstraint\n  | DistanceConstraint\n  | (DelayConstraint & DistanceConstraint);\n\nfunction isDistanceConstraint(\n  constraint: PointerActivationConstraint\n): constraint is PointerActivationConstraint & DistanceConstraint {\n  return Boolean(constraint && 'distance' in constraint);\n}\n\nfunction isDelayConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DelayConstraint {\n  return Boolean(constraint && 'delay' in constraint);\n}\n\nexport interface AbstractPointerSensorOptions extends SensorOptions {\n  activationConstraint?: PointerActivationConstraint;\n  bypassActivationConstraint?(\n    props: Pick<AbstractPointerSensorProps, 'activeNode' | 'event' | 'options'>\n  ): boolean;\n  onActivation?({event}: {event: Event}): void;\n}\n\nexport type AbstractPointerSensorProps =\n  SensorProps<AbstractPointerSensorOptions>;\n\nexport class AbstractPointerSensor implements SensorInstance {\n  public autoScrollEnabled = true;\n  private document: Document;\n  private activated: boolean = false;\n  private initialCoordinates: Coordinates;\n  private timeoutId: NodeJS.Timeout | null = null;\n  private listeners: Listeners;\n  private documentListeners: Listeners;\n  private windowListeners: Listeners;\n\n  constructor(\n    private props: AbstractPointerSensorProps,\n    private events: PointerEventHandlers,\n    listenerTarget = getEventListenerTarget(props.event.target)\n  ) {\n    const {event} = props;\n    const {target} = event;\n\n    this.props = props;\n    this.events = events;\n    this.document = getOwnerDocument(target);\n    this.documentListeners = new Listeners(this.document);\n    this.listeners = new Listeners(listenerTarget);\n    this.windowListeners = new Listeners(getWindow(target));\n    this.initialCoordinates = getEventCoordinates(event) ?? defaultCoordinates;\n    this.handleStart = this.handleStart.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.removeTextSelection = this.removeTextSelection.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    const {\n      events,\n      props: {\n        options: {activationConstraint, bypassActivationConstraint},\n      },\n    } = this;\n\n    this.listeners.add(events.move.name, this.handleMove, {passive: false});\n    this.listeners.add(events.end.name, this.handleEnd);\n\n    if (events.cancel) {\n      this.listeners.add(events.cancel.name, this.handleCancel);\n    }\n\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.DragStart, preventDefault);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n    this.windowListeners.add(EventName.ContextMenu, preventDefault);\n    this.documentListeners.add(EventName.Keydown, this.handleKeydown);\n\n    if (activationConstraint) {\n      if (\n        bypassActivationConstraint?.({\n          event: this.props.event,\n          activeNode: this.props.activeNode,\n          options: this.props.options,\n        })\n      ) {\n        return this.handleStart();\n      }\n\n      if (isDelayConstraint(activationConstraint)) {\n        this.timeoutId = setTimeout(\n          this.handleStart,\n          activationConstraint.delay\n        );\n        this.handlePending(activationConstraint);\n        return;\n      }\n\n      if (isDistanceConstraint(activationConstraint)) {\n        this.handlePending(activationConstraint);\n        return;\n      }\n    }\n\n    this.handleStart();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n\n    // Wait until the next event loop before removing document listeners\n    // This is necessary because we listen for `click` and `selection` events on the document\n    setTimeout(this.documentListeners.removeAll, 50);\n\n    if (this.timeoutId !== null) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  private handlePending(\n    constraint: PointerActivationConstraint,\n    offset?: Coordinates | undefined\n  ): void {\n    const {active, onPending} = this.props;\n    onPending(active, constraint, this.initialCoordinates, offset);\n  }\n\n  private handleStart() {\n    const {initialCoordinates} = this;\n    const {onStart} = this.props;\n\n    if (initialCoordinates) {\n      this.activated = true;\n\n      // Stop propagation of click events once activation constraints are met\n      this.documentListeners.add(EventName.Click, stopPropagation, {\n        capture: true,\n      });\n\n      // Remove any text selection from the document\n      this.removeTextSelection();\n\n      // Prevent further text selection while dragging\n      this.documentListeners.add(\n        EventName.SelectionChange,\n        this.removeTextSelection\n      );\n\n      onStart(initialCoordinates);\n    }\n  }\n\n  private handleMove(event: Event) {\n    const {activated, initialCoordinates, props} = this;\n    const {\n      onMove,\n      options: {activationConstraint},\n    } = props;\n\n    if (!initialCoordinates) {\n      return;\n    }\n\n    const coordinates = getEventCoordinates(event) ?? defaultCoordinates;\n    const delta = getCoordinatesDelta(initialCoordinates, coordinates);\n\n    // Constraint validation\n    if (!activated && activationConstraint) {\n      if (isDistanceConstraint(activationConstraint)) {\n        if (\n          activationConstraint.tolerance != null &&\n          hasExceededDistance(delta, activationConstraint.tolerance)\n        ) {\n          return this.handleCancel();\n        }\n\n        if (hasExceededDistance(delta, activationConstraint.distance)) {\n          return this.handleStart();\n        }\n      }\n\n      if (isDelayConstraint(activationConstraint)) {\n        if (hasExceededDistance(delta, activationConstraint.tolerance)) {\n          return this.handleCancel();\n        }\n      }\n\n      this.handlePending(activationConstraint, delta);\n      return;\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    onMove(coordinates);\n  }\n\n  private handleEnd() {\n    const {onAbort, onEnd} = this.props;\n\n    this.detach();\n    if (!this.activated) {\n      onAbort(this.props.active);\n    }\n    onEnd();\n  }\n\n  private handleCancel() {\n    const {onAbort, onCancel} = this.props;\n\n    this.detach();\n    if (!this.activated) {\n      onAbort(this.props.active);\n    }\n    onCancel();\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (event.code === KeyboardCode.Esc) {\n      this.handleCancel();\n    }\n  }\n\n  private removeTextSelection() {\n    this.document.getSelection()?.removeAllRanges();\n  }\n}\n","import {getOwnerDocument, getWindow} from '@dnd-kit/utilities';\n\nexport function getEventListenerTarget(\n  target: EventTarget | null\n): EventTarget | Document {\n  // If the `event.target` element is removed from the document events will still be targeted\n  // at it, and hence won't always bubble up to the window or document anymore.\n  // If there is any risk of an element being removed while it is being dragged,\n  // the best practice is to attach the event listeners directly to the target.\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n\n  const {EventTarget} = getWindow(target);\n\n  return target instanceof EventTarget ? target : getOwnerDocument(target);\n}\n","import type {PointerEvent} from 'react';\nimport {getOwnerDocument} from '@dnd-kit/utilities';\n\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  AbstractPointerSensorOptions,\n  PointerEventHandlers,\n} from './AbstractPointerSensor';\n\nconst events: PointerEventHandlers = {\n  cancel: {name: 'pointercancel'},\n  move: {name: 'pointermove'},\n  end: {name: 'pointerup'},\n};\n\nexport interface PointerSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type PointerSensorProps = SensorProps<PointerSensorOptions>;\n\nexport class PointerSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    const {event} = props;\n    // Pointer events stop firing if the target is unmounted while dragging\n    // Therefore we attach listeners to the owner document instead\n    const listenerTarget = getOwnerDocument(event.target);\n\n    super(props, events, listenerTarget);\n  }\n\n  static activators = [\n    {\n      eventName: 'onPointerDown' as const,\n      handler: (\n        {nativeEvent: event}: PointerEvent,\n        {onActivation}: PointerSensorOptions\n      ) => {\n        if (!event.isPrimary || event.button !== 0) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {MouseEvent} from 'react';\nimport {getOwnerDocument} from '@dnd-kit/utilities';\n\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  PointerEventHandlers,\n  AbstractPointerSensorOptions,\n} from '../pointer';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'mousemove'},\n  end: {name: 'mouseup'},\n};\n\nenum MouseButton {\n  RightClick = 2,\n}\n\nexport interface MouseSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type MouseSensorProps = SensorProps<MouseSensorOptions>;\n\nexport class MouseSensor extends AbstractPointerSensor {\n  constructor(props: MouseSensorProps) {\n    super(props, events, getOwnerDocument(props.event.target));\n  }\n\n  static activators = [\n    {\n      eventName: 'onMouseDown' as const,\n      handler: (\n        {nativeEvent: event}: MouseEvent,\n        {onActivation}: MouseSensorOptions\n      ) => {\n        if (event.button === MouseButton.RightClick) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {TouchEvent} from 'react';\n\nimport {\n  AbstractPointerSensor,\n  PointerSensorProps,\n  PointerEventHandlers,\n  PointerSensorOptions,\n} from '../pointer';\nimport type {SensorProps} from '../types';\n\nconst events: PointerEventHandlers = {\n  cancel: {name: 'touchcancel'},\n  move: {name: 'touchmove'},\n  end: {name: 'touchend'},\n};\n\nexport interface TouchSensorOptions extends PointerSensorOptions {}\n\nexport type TouchSensorProps = SensorProps<TouchSensorOptions>;\n\nexport class TouchSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    super(props, events);\n  }\n\n  static activators = [\n    {\n      eventName: 'onTouchStart' as const,\n      handler: (\n        {nativeEvent: event}: TouchEvent,\n        {onActivation}: TouchSensorOptions\n      ) => {\n        const {touches} = event;\n\n        if (touches.length > 1) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n\n  static setup() {\n    // Adding a non-capture and non-passive `touchmove` listener in order\n    // to force `event.preventDefault()` calls to work in dynamically added\n    // touchmove event handlers. This is required for iOS Safari.\n    window.addEventListener(events.move.name, noop, {\n      capture: false,\n      passive: false,\n    });\n\n    return function teardown() {\n      window.removeEventListener(events.move.name, noop);\n    };\n\n    // We create a new handler because the teardown function of another sensor\n    // could remove our event listener if we use a referentially equal listener.\n    function noop() {}\n  }\n}\n","import {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useInterval, useLazyMemo, usePrevious} from '@dnd-kit/utilities';\n\nimport {getScrollDirectionAndSpeed} from '../../utilities';\nimport {Direction} from '../../types';\nimport type {Coordinates, ClientRect} from '../../types';\n\nexport type ScrollAncestorSortingFn = (ancestors: Element[]) => Element[];\n\nexport enum AutoScrollActivator {\n  Pointer,\n  DraggableRect,\n}\n\nexport interface Options {\n  acceleration?: number;\n  activator?: AutoScrollActivator;\n  canScroll?: CanScroll;\n  enabled?: boolean;\n  interval?: number;\n  layoutShiftCompensation?:\n    | boolean\n    | {\n        x: boolean;\n        y: boolean;\n      };\n  order?: TraversalOrder;\n  threshold?: {\n    x: number;\n    y: number;\n  };\n}\n\ninterface Arguments extends Options {\n  draggingRect: ClientRect | null;\n  enabled: boolean;\n  pointerCoordinates: Coordinates | null;\n  scrollableAncestors: Element[];\n  scrollableAncestorRects: ClientRect[];\n  delta: Coordinates;\n}\n\nexport type CanScroll = (element: Element) => boolean;\n\nexport enum TraversalOrder {\n  TreeOrder,\n  ReversedTreeOrder,\n}\n\ninterface ScrollDirection {\n  x: 0 | Direction;\n  y: 0 | Direction;\n}\n\nexport function useAutoScroller({\n  acceleration,\n  activator = AutoScrollActivator.Pointer,\n  canScroll,\n  draggingRect,\n  enabled,\n  interval = 5,\n  order = TraversalOrder.TreeOrder,\n  pointerCoordinates,\n  scrollableAncestors,\n  scrollableAncestorRects,\n  delta,\n  threshold,\n}: Arguments) {\n  const scrollIntent = useScrollIntent({delta, disabled: !enabled});\n  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();\n  const scrollSpeed = useRef<Coordinates>({x: 0, y: 0});\n  const scrollDirection = useRef<ScrollDirection>({x: 0, y: 0});\n  const rect = useMemo(() => {\n    switch (activator) {\n      case AutoScrollActivator.Pointer:\n        return pointerCoordinates\n          ? {\n              top: pointerCoordinates.y,\n              bottom: pointerCoordinates.y,\n              left: pointerCoordinates.x,\n              right: pointerCoordinates.x,\n            }\n          : null;\n      case AutoScrollActivator.DraggableRect:\n        return draggingRect;\n    }\n  }, [activator, draggingRect, pointerCoordinates]);\n  const scrollContainerRef = useRef<Element | null>(null);\n  const autoScroll = useCallback(() => {\n    const scrollContainer = scrollContainerRef.current;\n\n    if (!scrollContainer) {\n      return;\n    }\n\n    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;\n    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;\n\n    scrollContainer.scrollBy(scrollLeft, scrollTop);\n  }, []);\n  const sortedScrollableAncestors = useMemo(\n    () =>\n      order === TraversalOrder.TreeOrder\n        ? [...scrollableAncestors].reverse()\n        : scrollableAncestors,\n    [order, scrollableAncestors]\n  );\n\n  useEffect(\n    () => {\n      if (!enabled || !scrollableAncestors.length || !rect) {\n        clearAutoScrollInterval();\n        return;\n      }\n\n      for (const scrollContainer of sortedScrollableAncestors) {\n        if (canScroll?.(scrollContainer) === false) {\n          continue;\n        }\n\n        const index = scrollableAncestors.indexOf(scrollContainer);\n        const scrollContainerRect = scrollableAncestorRects[index];\n\n        if (!scrollContainerRect) {\n          continue;\n        }\n\n        const {direction, speed} = getScrollDirectionAndSpeed(\n          scrollContainer,\n          scrollContainerRect,\n          rect,\n          acceleration,\n          threshold\n        );\n\n        for (const axis of ['x', 'y'] as const) {\n          if (!scrollIntent[axis][direction[axis] as Direction]) {\n            speed[axis] = 0;\n            direction[axis] = 0;\n          }\n        }\n\n        if (speed.x > 0 || speed.y > 0) {\n          clearAutoScrollInterval();\n\n          scrollContainerRef.current = scrollContainer;\n          setAutoScrollInterval(autoScroll, interval);\n\n          scrollSpeed.current = speed;\n          scrollDirection.current = direction;\n\n          return;\n        }\n      }\n\n      scrollSpeed.current = {x: 0, y: 0};\n      scrollDirection.current = {x: 0, y: 0};\n      clearAutoScrollInterval();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      acceleration,\n      autoScroll,\n      canScroll,\n      clearAutoScrollInterval,\n      enabled,\n      interval,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(rect),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(scrollIntent),\n      setAutoScrollInterval,\n      scrollableAncestors,\n      sortedScrollableAncestors,\n      scrollableAncestorRects,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(threshold),\n    ]\n  );\n}\n\ninterface ScrollIntent {\n  x: Record<Direction, boolean>;\n  y: Record<Direction, boolean>;\n}\n\nconst defaultScrollIntent: ScrollIntent = {\n  x: {[Direction.Backward]: false, [Direction.Forward]: false},\n  y: {[Direction.Backward]: false, [Direction.Forward]: false},\n};\n\nfunction useScrollIntent({\n  delta,\n  disabled,\n}: {\n  delta: Coordinates;\n  disabled: boolean;\n}): ScrollIntent {\n  const previousDelta = usePrevious(delta);\n\n  return useLazyMemo<ScrollIntent>(\n    (previousIntent) => {\n      if (disabled || !previousDelta || !previousIntent) {\n        // Reset scroll intent tracking when auto-scrolling is disabled\n        return defaultScrollIntent;\n      }\n\n      const direction = {\n        x: Math.sign(delta.x - previousDelta.x),\n        y: Math.sign(delta.y - previousDelta.y),\n      };\n\n      // Keep track of the user intent to scroll in each direction for both axis\n      return {\n        x: {\n          [Direction.Backward]:\n            previousIntent.x[Direction.Backward] || direction.x === -1,\n          [Direction.Forward]:\n            previousIntent.x[Direction.Forward] || direction.x === 1,\n        },\n        y: {\n          [Direction.Backward]:\n            previousIntent.y[Direction.Backward] || direction.y === -1,\n          [Direction.Forward]:\n            previousIntent.y[Direction.Forward] || direction.y === 1,\n        },\n      };\n    },\n    [disabled, delta, previousDelta]\n  );\n}\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport {useLatestValue, useLazyMemo} from '@dnd-kit/utilities';\n\nimport {Rect} from '../../utilities/rect';\nimport type {DroppableContainer, RectMap} from '../../store/types';\nimport type {ClientRect, UniqueIdentifier} from '../../types';\n\ninterface Arguments {\n  dragging: boolean;\n  dependencies: any[];\n  config: DroppableMeasuring;\n}\n\nexport enum MeasuringStrategy {\n  Always,\n  BeforeDragging,\n  WhileDragging,\n}\n\nexport enum MeasuringFrequency {\n  Optimized = 'optimized',\n}\n\ntype MeasuringFunction = (element: HTMLElement) => ClientRect;\n\nexport interface DroppableMeasuring {\n  measure: MeasuringFunction;\n  strategy: MeasuringStrategy;\n  frequency: MeasuringFrequency | number;\n}\n\nconst defaultValue: RectMap = new Map();\n\nexport function useDroppableMeasuring(\n  containers: DroppableContainer[],\n  {dragging, dependencies, config}: Arguments\n) {\n  const [queue, setQueue] = useState<UniqueIdentifier[] | null>(null);\n  const {frequency, measure, strategy} = config;\n  const containersRef = useRef(containers);\n  const disabled = isDisabled();\n  const disabledRef = useLatestValue(disabled);\n  const measureDroppableContainers = useCallback(\n    (ids: UniqueIdentifier[] = []) => {\n      if (disabledRef.current) {\n        return;\n      }\n\n      setQueue((value) => {\n        if (value === null) {\n          return ids;\n        }\n\n        return value.concat(ids.filter((id) => !value.includes(id)));\n      });\n    },\n    [disabledRef]\n  );\n  const timeoutId = useRef<NodeJS.Timeout | null>(null);\n  const droppableRects = useLazyMemo<RectMap>(\n    (previousValue) => {\n      if (disabled && !dragging) {\n        return defaultValue;\n      }\n\n      if (\n        !previousValue ||\n        previousValue === defaultValue ||\n        containersRef.current !== containers ||\n        queue != null\n      ) {\n        const map: RectMap = new Map();\n\n        for (let container of containers) {\n          if (!container) {\n            continue;\n          }\n\n          if (\n            queue &&\n            queue.length > 0 &&\n            !queue.includes(container.id) &&\n            container.rect.current\n          ) {\n            // This container does not need to be re-measured\n            map.set(container.id, container.rect.current);\n            continue;\n          }\n\n          const node = container.node.current;\n          const rect = node ? new Rect(measure(node), node) : null;\n\n          container.rect.current = rect;\n\n          if (rect) {\n            map.set(container.id, rect);\n          }\n        }\n\n        return map;\n      }\n\n      return previousValue;\n    },\n    [containers, queue, dragging, disabled, measure]\n  );\n\n  useEffect(() => {\n    containersRef.current = containers;\n  }, [containers]);\n\n  useEffect(\n    () => {\n      if (disabled) {\n        return;\n      }\n\n      measureDroppableContainers();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dragging, disabled]\n  );\n\n  useEffect(\n    () => {\n      if (queue && queue.length > 0) {\n        setQueue(null);\n      }\n    },\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify(queue)]\n  );\n\n  useEffect(\n    () => {\n      if (\n        disabled ||\n        typeof frequency !== 'number' ||\n        timeoutId.current !== null\n      ) {\n        return;\n      }\n\n      timeoutId.current = setTimeout(() => {\n        measureDroppableContainers();\n        timeoutId.current = null;\n      }, frequency);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [frequency, disabled, measureDroppableContainers, ...dependencies]\n  );\n\n  return {\n    droppableRects,\n    measureDroppableContainers,\n    measuringScheduled: queue != null,\n  };\n\n  function isDisabled() {\n    switch (strategy) {\n      case MeasuringStrategy.Always:\n        return false;\n      case MeasuringStrategy.BeforeDragging:\n        return dragging;\n      default:\n        return !dragging;\n    }\n  }\n}\n","import {useLazyMemo} from '@dnd-kit/utilities';\n\ntype AnyFunction = (...args: any) => any;\n\nexport function useInitialValue<\n  T,\n  U extends AnyFunction | undefined = undefined\n>(\n  value: T | null,\n  computeFn?: U\n): U extends AnyFunction ? ReturnType<U> | null : T | null {\n  return useLazyMemo(\n    (previousValue) => {\n      if (!value) {\n        return null;\n      }\n\n      if (previousValue) {\n        return previousValue;\n      }\n\n      return typeof computeFn === 'function' ? computeFn(value) : value;\n    },\n    [computeFn, value]\n  );\n}\n","import {useEffect, useMemo} from 'react';\nimport {useEvent} from '@dnd-kit/utilities';\n\ninterface Arguments {\n  callback: ResizeObserverCallback;\n  disabled?: boolean;\n}\n\n/**\n * Returns a new ResizeObserver instance bound to the `onResize` callback.\n * If `ResizeObserver` is undefined in the execution environment, returns `undefined`.\n */\nexport function useResizeObserver({callback, disabled}: Arguments) {\n  const handleResize = useEvent(callback);\n  const resizeObserver = useMemo(\n    () => {\n      if (\n        disabled ||\n        typeof window === 'undefined' ||\n        typeof window.ResizeObserver === 'undefined'\n      ) {\n        return undefined;\n      }\n\n      const {ResizeObserver} = window;\n\n      return new ResizeObserver(handleResize);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [disabled]\n  );\n\n  useEffect(() => {\n    return () => resizeObserver?.disconnect();\n  }, [resizeObserver]);\n\n  return resizeObserver;\n}\n","import {useState} from 'react';\nimport {useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport type {ClientRect} from '../../types';\nimport {getClientRect, Rect} from '../../utilities';\n\nimport {useMutationObserver} from './useMutationObserver';\nimport {useResizeObserver} from './useResizeObserver';\n\nfunction defaultMeasure(element: HTMLElement) {\n  return new Rect(getClientRect(element), element);\n}\n\nexport function useRect(\n  element: HTMLElement | null,\n  measure: (element: HTMLElement) => ClientRect = defaultMeasure,\n  fallbackRect?: ClientRect | null\n) {\n  const [rect, setRect] = useState<ClientRect | null>(null);\n\n  function measureRect() {\n    setRect((currentRect): ClientRect | null => {\n      if (!element) {\n        return null;\n      }\n  \n      if (element.isConnected === false) {\n        // Fall back to last rect we measured if the element is\n        // no longer connected to the DOM.\n        return currentRect ?? fallbackRect ?? null;\n      }\n  \n      const newRect = measure(element);\n  \n      if (JSON.stringify(currentRect) === JSON.stringify(newRect)) {\n        return currentRect;\n      }\n  \n      return newRect;\n    });\n  }\n  \n  const mutationObserver = useMutationObserver({\n    callback(records) {\n      if (!element) {\n        return;\n      }\n\n      for (const record of records) {\n        const {type, target} = record;\n\n        if (\n          type === 'childList' &&\n          target instanceof HTMLElement &&\n          target.contains(element)\n        ) {\n          measureRect();\n          break;\n        }\n      }\n    },\n  });\n  const resizeObserver = useResizeObserver({callback: measureRect});\n\n  useIsomorphicLayoutEffect(() => {\n    measureRect();\n\n    if (element) {\n      resizeObserver?.observe(element);\n      mutationObserver?.observe(document.body, {\n        childList: true,\n        subtree: true,\n      });\n    } else {\n      resizeObserver?.disconnect();\n      mutationObserver?.disconnect();\n    }\n  }, [element]);\n\n  return rect;\n}\n","import {useEffect, useMemo} from 'react';\nimport {useEvent} from '@dnd-kit/utilities';\n\ninterface Arguments {\n  callback: MutationCallback;\n  disabled?: boolean;\n}\n\n/**\n * Returns a new MutationObserver instance.\n * If `MutationObserver` is undefined in the execution environment, returns `undefined`.\n */\nexport function useMutationObserver({callback, disabled}: Arguments) {\n  const handleMutations = useEvent(callback);\n  const mutationObserver = useMemo(() => {\n    if (\n      disabled ||\n      typeof window === 'undefined' ||\n      typeof window.MutationObserver === 'undefined'\n    ) {\n      return undefined;\n    }\n\n    const {MutationObserver} = window;\n\n    return new MutationObserver(handleMutations);\n  }, [handleMutations, disabled]);\n\n  useEffect(() => {\n    return () => mutationObserver?.disconnect();\n  }, [mutationObserver]);\n\n  return mutationObserver;\n}\n","import {useEffect, useRef} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getScrollableAncestors} from '../../utilities';\n\nconst defaultValue: Element[] = [];\n\nexport function useScrollableAncestors(node: HTMLElement | null) {\n  const previousNode = useRef(node);\n\n  const ancestors = useLazyMemo<Element[]>(\n    (previousValue) => {\n      if (!node) {\n        return defaultValue;\n      }\n\n      if (\n        previousValue &&\n        previousValue !== defaultValue &&\n        node &&\n        previousNode.current &&\n        node.parentNode === previousNode.current.parentNode\n      ) {\n        return previousValue;\n      }\n\n      return getScrollableAncestors(node);\n    },\n    [node]\n  );\n\n  useEffect(() => {\n    previousNode.current = node;\n  }, [node]);\n\n  return ancestors;\n}\n","import {useEffect, useRef} from 'react';\nimport {Coordinates, subtract} from '@dnd-kit/utilities';\n\nimport {defaultCoordinates} from '../../utilities';\n\nexport function useScrollOffsetsDelta(\n  scrollOffsets: Coordinates,\n  dependencies: any[] = []\n) {\n  const initialScrollOffsets = useRef<Coordinates | null>(null);\n\n  useEffect(\n    () => {\n      initialScrollOffsets.current = null;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    dependencies\n  );\n\n  useEffect(() => {\n    const hasScrollOffsets = scrollOffsets !== defaultCoordinates;\n\n    if (hasScrollOffsets && !initialScrollOffsets.current) {\n      initialScrollOffsets.current = scrollOffsets;\n    }\n\n    if (!hasScrollOffsets && initialScrollOffsets.current) {\n      initialScrollOffsets.current = null;\n    }\n  }, [scrollOffsets]);\n\n  return initialScrollOffsets.current\n    ? subtract(scrollOffsets, initialScrollOffsets.current)\n    : defaultCoordinates;\n}\n","import {useMemo} from 'react';\n\nimport {getWindowClientRect} from '../../utilities/rect';\n\nexport function useWindowRect(element: typeof window | null) {\n  return useMemo(() => (element ? getWindowClientRect(element) : null), [\n    element,\n  ]);\n}\n","import type {ClientRect} from '../../types';\n\nexport function getWindowClientRect(element: typeof window): ClientRect {\n  const width = element.innerWidth;\n  const height = element.innerHeight;\n\n  return {\n    top: 0,\n    left: 0,\n    right: width,\n    bottom: height,\n    width,\n    height,\n  };\n}\n","import {useState} from 'react';\nimport {getWindow, useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport type {ClientRect} from '../../types';\nimport {Rect, getClientRect} from '../../utilities/rect';\nimport {isDocumentScrollingElement} from '../../utilities';\n\nimport {useResizeObserver} from './useResizeObserver';\nimport {useWindowRect} from './useWindowRect';\n\nconst defaultValue: Rect[] = [];\n\nexport function useRects(\n  elements: Element[],\n  measure: (element: Element) => ClientRect = getClientRect\n): ClientRect[] {\n  const [firstElement] = elements;\n  const windowRect = useWindowRect(\n    firstElement ? getWindow(firstElement) : null\n  );\n  const [rects, setRects] = useState<ClientRect[]>(defaultValue);\n\n  function measureRects() {\n    setRects(() => {\n      if (!elements.length) {\n        return defaultValue;\n      }\n\n      return elements.map((element) =>\n        isDocumentScrollingElement(element)\n          ? (windowRect as ClientRect)\n          : new Rect(measure(element), element)\n      );\n    });\n  }\n\n  const resizeObserver = useResizeObserver({callback: measureRects});\n\n  useIsomorphicLayoutEffect(() => {\n    resizeObserver?.disconnect();\n    measureRects();\n    elements.forEach((element) => resizeObserver?.observe(element));\n  }, [elements]);\n\n  return rects;\n}\n","import {isHTMLElement} from '@dnd-kit/utilities';\n\nexport function getMeasurableNode(\n  node: HTMLElement | undefined | null\n): HTMLElement | null {\n  if (!node) {\n    return null;\n  }\n\n  if (node.children.length > 1) {\n    return node;\n  }\n  const firstChild = node.children[0];\n\n  return isHTMLElement(firstChild) ? firstChild : node;\n}\n","import type {DeepRequired} from '@dnd-kit/utilities';\n\nimport type {DataRef} from '../../store/types';\nimport {KeyboardSensor, PointerSensor} from '../../sensors';\nimport {MeasuringStrategy, MeasuringFrequency} from '../../hooks/utilities';\nimport {\n  getClientRect,\n  getTransformAgnosticClientRect,\n} from '../../utilities/rect';\n\nimport type {MeasuringConfiguration} from './types';\n\nexport const defaultSensors = [\n  {sensor: PointerSensor, options: {}},\n  {sensor: KeyboardSensor, options: {}},\n];\n\nexport const defaultData: DataRef = {current: {}};\n\nexport const defaultMeasuringConfiguration: DeepRequired<MeasuringConfiguration> = {\n  draggable: {\n    measure: getTransformAgnosticClientRect,\n  },\n  droppable: {\n    measure: getTransformAgnosticClientRect,\n    strategy: MeasuringStrategy.WhileDragging,\n    frequency: MeasuringFrequency.Optimized,\n  },\n  dragOverlay: {\n    measure: getClientRect,\n  },\n};\n","import type {UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\ntype Identifier = UniqueIdentifier | null | undefined;\n\nexport class DroppableContainersMap extends Map<\n  UniqueIdentifier,\n  DroppableContainer\n> {\n  get(id: Identifier) {\n    return id != null ? super.get(id) ?? undefined : undefined;\n  }\n\n  toArray(): DroppableContainer[] {\n    return Array.from(this.values());\n  }\n\n  getEnabled(): DroppableContainer[] {\n    return this.toArray().filter(({disabled}) => !disabled);\n  }\n\n  getNodeFor(id: Identifier) {\n    return this.get(id)?.node.current ?? undefined;\n  }\n}\n","import {createContext} from 'react';\n\nimport {noop} from '../utilities/other';\nimport {defaultMeasuringConfiguration} from '../components/DndContext/defaults';\nimport {DroppableContainersMap} from './constructors';\nimport type {InternalContextDescriptor, PublicContextDescriptor} from './types';\n\nexport const defaultPublicContext: PublicContextDescriptor = {\n  activatorEvent: null,\n  active: null,\n  activeNode: null,\n  activeNodeRect: null,\n  collisions: null,\n  containerNodeRect: null,\n  draggableNodes: new Map(),\n  droppableRects: new Map(),\n  droppableContainers: new DroppableContainersMap(),\n  over: null,\n  dragOverlay: {\n    nodeRef: {\n      current: null,\n    },\n    rect: null,\n    setRef: noop,\n  },\n  scrollableAncestors: [],\n  scrollableAncestorRects: [],\n  measuringConfiguration: defaultMeasuringConfiguration,\n  measureDroppableContainers: noop,\n  windowRect: null,\n  measuringScheduled: false,\n};\n\nexport const defaultInternalContext: InternalContextDescriptor = {\n  activatorEvent: null,\n  activators: [],\n  active: null,\n  activeNodeRect: null,\n  ariaDescribedById: {\n    draggable: '',\n  },\n  dispatch: noop,\n  draggableNodes: new Map(),\n  over: null,\n  measureDroppableContainers: noop,\n};\n\nexport const InternalContext = createContext<InternalContextDescriptor>(\n  defaultInternalContext\n);\n\nexport const PublicContext = createContext<PublicContextDescriptor>(\n  defaultPublicContext\n);\n","import {Action, Actions} from './actions';\nimport {DroppableContainersMap} from './constructors';\nimport type {State} from './types';\n\nexport function getInitialState(): State {\n  return {\n    draggable: {\n      active: null,\n      initialCoordinates: {x: 0, y: 0},\n      nodes: new Map(),\n      translate: {x: 0, y: 0},\n    },\n    droppable: {\n      containers: new DroppableContainersMap(),\n    },\n  };\n}\n\nexport function reducer(state: State, action: Actions): State {\n  switch (action.type) {\n    case Action.DragStart:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          initialCoordinates: action.initialCoordinates,\n          active: action.active,\n        },\n      };\n    case Action.DragMove:\n      if (state.draggable.active == null) {\n        return state;\n      }\n\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          translate: {\n            x: action.coordinates.x - state.draggable.initialCoordinates.x,\n            y: action.coordinates.y - state.draggable.initialCoordinates.y,\n          },\n        },\n      };\n    case Action.DragEnd:\n    case Action.DragCancel:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          active: null,\n          initialCoordinates: {x: 0, y: 0},\n          translate: {x: 0, y: 0},\n        },\n      };\n\n    case Action.RegisterDroppable: {\n      const {element} = action;\n      const {id} = element;\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.set(id, element);\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    case Action.SetDroppableDisabled: {\n      const {id, key, disabled} = action;\n      const element = state.droppable.containers.get(id);\n\n      if (!element || key !== element.key) {\n        return state;\n      }\n\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.set(id, {\n        ...element,\n        disabled,\n      });\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    case Action.UnregisterDroppable: {\n      const {id, key} = action;\n      const element = state.droppable.containers.get(id);\n\n      if (!element || key !== element.key) {\n        return state;\n      }\n\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.delete(id);\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import {useContext, useEffect} from 'react';\nimport {\n  findFirstFocusableNode,\n  isKeyboardEvent,\n  usePrevious,\n} from '@dnd-kit/utilities';\n\nimport {InternalContext} from '../../../store';\n\ninterface Props {\n  disabled: boolean;\n}\n\nexport function RestoreFocus({disabled}: Props) {\n  const {active, activatorEvent, draggableNodes} = useContext(InternalContext);\n  const previousActivatorEvent = usePrevious(activatorEvent);\n  const previousActiveId = usePrevious(active?.id);\n\n  // Restore keyboard focus on the activator node\n  useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    if (!activatorEvent && previousActivatorEvent && previousActiveId != null) {\n      if (!isKeyboardEvent(previousActivatorEvent)) {\n        return;\n      }\n\n      if (document.activeElement === previousActivatorEvent.target) {\n        // No need to restore focus\n        return;\n      }\n\n      const draggableNode = draggableNodes.get(previousActiveId);\n\n      if (!draggableNode) {\n        return;\n      }\n\n      const {activatorNode, node} = draggableNode;\n\n      if (!activatorNode.current && !node.current) {\n        return;\n      }\n\n      requestAnimationFrame(() => {\n        for (const element of [activatorNode.current, node.current]) {\n          if (!element) {\n            continue;\n          }\n\n          const focusableNode = findFirstFocusableNode(element);\n\n          if (focusableNode) {\n            focusableNode.focus();\n            break;\n          }\n        }\n      });\n    }\n  }, [\n    activatorEvent,\n    disabled,\n    draggableNodes,\n    previousActiveId,\n    previousActivatorEvent,\n  ]);\n\n  return null;\n}\n","import type {FirstArgument, Transform} from '@dnd-kit/utilities';\n\nimport type {Modifiers, Modifier} from './types';\n\nexport function applyModifiers(\n  modifiers: Modifiers | undefined,\n  {transform, ...args}: FirstArgument<Modifier>\n): Transform {\n  return modifiers?.length\n    ? modifiers.reduce<Transform>((accumulator, modifier) => {\n        return modifier({\n          transform: accumulator,\n          ...args,\n        });\n      }, transform)\n    : transform;\n}\n","import React, {\n  memo,\n  createContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport {unstable_batchedUpdates} from 'react-dom';\nimport {\n  add,\n  getEventCoordinates,\n  getWindow,\n  useLatestValue,\n  useIsomorphicLayoutEffect,\n  useUniqueId,\n} from '@dnd-kit/utilities';\nimport type {Transform} from '@dnd-kit/utilities';\n\nimport {\n  Action,\n  PublicContext,\n  InternalContext,\n  PublicContextDescriptor,\n  InternalContextDescriptor,\n  getInitialState,\n  reducer,\n} from '../../store';\nimport {DndMonitorContext, useDndMonitorProvider} from '../DndMonitor';\nimport {\n  useAutoScroller,\n  useCachedNode,\n  useCombineActivators,\n  useDragOverlayMeasuring,\n  useDroppableMeasuring,\n  useInitialRect,\n  useRect,\n  useRectDelta,\n  useRects,\n  useScrollableAncestors,\n  useScrollOffsets,\n  useScrollOffsetsDelta,\n  useSensorSetup,\n  useWindowRect,\n} from '../../hooks/utilities';\nimport type {AutoScrollOptions, SyntheticListener} from '../../hooks/utilities';\nimport type {\n  Sensor,\n  SensorContext,\n  SensorDescriptor,\n  SensorActivatorFunction,\n  SensorInstance,\n} from '../../sensors';\nimport {\n  adjustScale,\n  CollisionDetection,\n  defaultCoordinates,\n  getAdjustedRect,\n  getFirstCollision,\n  rectIntersection,\n} from '../../utilities';\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport type {Active, Over} from '../../store/types';\nimport type {\n  DragStartEvent,\n  DragCancelEvent,\n  DragEndEvent,\n  DragMoveEvent,\n  DragOverEvent,\n  UniqueIdentifier,\n  DragPendingEvent,\n  DragAbortEvent,\n} from '../../types';\nimport {\n  Accessibility,\n  Announcements,\n  RestoreFocus,\n  ScreenReaderInstructions,\n} from '../Accessibility';\n\nimport {defaultData, defaultSensors} from './defaults';\nimport {\n  useLayoutShiftScrollCompensation,\n  useMeasuringConfiguration,\n} from './hooks';\nimport type {MeasuringConfiguration} from './types';\n\nexport interface Props {\n  id?: string;\n  accessibility?: {\n    announcements?: Announcements;\n    container?: Element;\n    restoreFocus?: boolean;\n    screenReaderInstructions?: ScreenReaderInstructions;\n  };\n  autoScroll?: boolean | AutoScrollOptions;\n  cancelDrop?: CancelDrop;\n  children?: React.ReactNode;\n  collisionDetection?: CollisionDetection;\n  measuring?: MeasuringConfiguration;\n  modifiers?: Modifiers;\n  sensors?: SensorDescriptor<any>[];\n  onDragAbort?(event: DragAbortEvent): void;\n  onDragPending?(event: DragPendingEvent): void;\n  onDragStart?(event: DragStartEvent): void;\n  onDragMove?(event: DragMoveEvent): void;\n  onDragOver?(event: DragOverEvent): void;\n  onDragEnd?(event: DragEndEvent): void;\n  onDragCancel?(event: DragCancelEvent): void;\n}\n\nexport interface CancelDropArguments extends DragEndEvent {}\n\nexport type CancelDrop = (\n  args: CancelDropArguments\n) => boolean | Promise<boolean>;\n\ninterface DndEvent extends Event {\n  dndKit?: {\n    capturedBy: Sensor<any>;\n  };\n}\n\nexport const ActiveDraggableContext = createContext<Transform>({\n  ...defaultCoordinates,\n  scaleX: 1,\n  scaleY: 1,\n});\n\nenum Status {\n  Uninitialized,\n  Initializing,\n  Initialized,\n}\n\nexport const DndContext = memo(function DndContext({\n  id,\n  accessibility,\n  autoScroll = true,\n  children,\n  sensors = defaultSensors,\n  collisionDetection = rectIntersection,\n  measuring,\n  modifiers,\n  ...props\n}: Props) {\n  const store = useReducer(reducer, undefined, getInitialState);\n  const [state, dispatch] = store;\n  const [dispatchMonitorEvent, registerMonitorListener] =\n    useDndMonitorProvider();\n  const [status, setStatus] = useState<Status>(Status.Uninitialized);\n  const isInitialized = status === Status.Initialized;\n  const {\n    draggable: {active: activeId, nodes: draggableNodes, translate},\n    droppable: {containers: droppableContainers},\n  } = state;\n  const node = activeId != null ? draggableNodes.get(activeId) : null;\n  const activeRects = useRef<Active['rect']['current']>({\n    initial: null,\n    translated: null,\n  });\n  const active = useMemo<Active | null>(\n    () =>\n      activeId != null\n        ? {\n            id: activeId,\n            // It's possible for the active node to unmount while dragging\n            data: node?.data ?? defaultData,\n            rect: activeRects,\n          }\n        : null,\n    [activeId, node]\n  );\n  const activeRef = useRef<UniqueIdentifier | null>(null);\n  const [activeSensor, setActiveSensor] = useState<SensorInstance | null>(null);\n  const [activatorEvent, setActivatorEvent] = useState<Event | null>(null);\n  const latestProps = useLatestValue(props, Object.values(props));\n  const draggableDescribedById = useUniqueId(`DndDescribedBy`, id);\n  const enabledDroppableContainers = useMemo(\n    () => droppableContainers.getEnabled(),\n    [droppableContainers]\n  );\n  const measuringConfiguration = useMeasuringConfiguration(measuring);\n  const {droppableRects, measureDroppableContainers, measuringScheduled} =\n    useDroppableMeasuring(enabledDroppableContainers, {\n      dragging: isInitialized,\n      dependencies: [translate.x, translate.y],\n      config: measuringConfiguration.droppable,\n    });\n  const activeNode = useCachedNode(draggableNodes, activeId);\n  const activationCoordinates = useMemo(\n    () => (activatorEvent ? getEventCoordinates(activatorEvent) : null),\n    [activatorEvent]\n  );\n  const autoScrollOptions = getAutoScrollerOptions();\n  const initialActiveNodeRect = useInitialRect(\n    activeNode,\n    measuringConfiguration.draggable.measure\n  );\n\n  useLayoutShiftScrollCompensation({\n    activeNode: activeId != null ? draggableNodes.get(activeId) : null,\n    config: autoScrollOptions.layoutShiftCompensation,\n    initialRect: initialActiveNodeRect,\n    measure: measuringConfiguration.draggable.measure,\n  });\n\n  const activeNodeRect = useRect(\n    activeNode,\n    measuringConfiguration.draggable.measure,\n    initialActiveNodeRect\n  );\n  const containerNodeRect = useRect(\n    activeNode ? activeNode.parentElement : null\n  );\n  const sensorContext = useRef<SensorContext>({\n    activatorEvent: null,\n    active: null,\n    activeNode,\n    collisionRect: null,\n    collisions: null,\n    droppableRects,\n    draggableNodes,\n    draggingNode: null,\n    draggingNodeRect: null,\n    droppableContainers,\n    over: null,\n    scrollableAncestors: [],\n    scrollAdjustedTranslate: null,\n  });\n  const overNode = droppableContainers.getNodeFor(\n    sensorContext.current.over?.id\n  );\n  const dragOverlay = useDragOverlayMeasuring({\n    measure: measuringConfiguration.dragOverlay.measure,\n  });\n\n  // Use the rect of the drag overlay if it is mounted\n  const draggingNode = dragOverlay.nodeRef.current ?? activeNode;\n  const draggingNodeRect = isInitialized\n    ? dragOverlay.rect ?? activeNodeRect\n    : null;\n  const usesDragOverlay = Boolean(\n    dragOverlay.nodeRef.current && dragOverlay.rect\n  );\n  // The delta between the previous and new position of the draggable node\n  // is only relevant when there is no drag overlay\n  const nodeRectDelta = useRectDelta(usesDragOverlay ? null : activeNodeRect);\n\n  // Get the window rect of the dragging node\n  const windowRect = useWindowRect(\n    draggingNode ? getWindow(draggingNode) : null\n  );\n\n  // Get scrollable ancestors of the dragging node\n  const scrollableAncestors = useScrollableAncestors(\n    isInitialized ? overNode ?? activeNode : null\n  );\n  const scrollableAncestorRects = useRects(scrollableAncestors);\n\n  // Apply modifiers\n  const modifiedTranslate = applyModifiers(modifiers, {\n    transform: {\n      x: translate.x - nodeRectDelta.x,\n      y: translate.y - nodeRectDelta.y,\n      scaleX: 1,\n      scaleY: 1,\n    },\n    activatorEvent,\n    active,\n    activeNodeRect,\n    containerNodeRect,\n    draggingNodeRect,\n    over: sensorContext.current.over,\n    overlayNodeRect: dragOverlay.rect,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    windowRect,\n  });\n\n  const pointerCoordinates = activationCoordinates\n    ? add(activationCoordinates, translate)\n    : null;\n\n  const scrollOffsets = useScrollOffsets(scrollableAncestors);\n  // Represents the scroll delta since dragging was initiated\n  const scrollAdjustment = useScrollOffsetsDelta(scrollOffsets);\n  // Represents the scroll delta since the last time the active node rect was measured\n  const activeNodeScrollDelta = useScrollOffsetsDelta(scrollOffsets, [\n    activeNodeRect,\n  ]);\n\n  const scrollAdjustedTranslate = add(modifiedTranslate, scrollAdjustment);\n\n  const collisionRect = draggingNodeRect\n    ? getAdjustedRect(draggingNodeRect, modifiedTranslate)\n    : null;\n\n  const collisions =\n    active && collisionRect\n      ? collisionDetection({\n          active,\n          collisionRect,\n          droppableRects,\n          droppableContainers: enabledDroppableContainers,\n          pointerCoordinates,\n        })\n      : null;\n  const overId = getFirstCollision(collisions, 'id');\n  const [over, setOver] = useState<Over | null>(null);\n\n  // When there is no drag overlay used, we need to account for the\n  // window scroll delta\n  const appliedTranslate = usesDragOverlay\n    ? modifiedTranslate\n    : add(modifiedTranslate, activeNodeScrollDelta);\n\n  const transform = adjustScale(\n    appliedTranslate,\n    over?.rect ?? null,\n    activeNodeRect\n  );\n\n  const activeSensorRef = useRef<SensorInstance | null>(null);\n  const instantiateSensor = useCallback(\n    (\n      event: React.SyntheticEvent,\n      {sensor: Sensor, options}: SensorDescriptor<any>\n    ) => {\n      if (activeRef.current == null) {\n        return;\n      }\n\n      const activeNode = draggableNodes.get(activeRef.current);\n\n      if (!activeNode) {\n        return;\n      }\n\n      const activatorEvent = event.nativeEvent;\n\n      const sensorInstance = new Sensor({\n        active: activeRef.current,\n        activeNode,\n        event: activatorEvent,\n        options,\n        // Sensors need to be instantiated with refs for arguments that change over time\n        // otherwise they are frozen in time with the stale arguments\n        context: sensorContext,\n        onAbort(id) {\n          const draggableNode = draggableNodes.get(id);\n\n          if (!draggableNode) {\n            return;\n          }\n\n          const {onDragAbort} = latestProps.current;\n          const event: DragAbortEvent = {id};\n          onDragAbort?.(event);\n          dispatchMonitorEvent({type: 'onDragAbort', event});\n        },\n        onPending(id, constraint, initialCoordinates, offset) {\n          const draggableNode = draggableNodes.get(id);\n\n          if (!draggableNode) {\n            return;\n          }\n\n          const {onDragPending} = latestProps.current;\n          const event: DragPendingEvent = {\n            id,\n            constraint,\n            initialCoordinates,\n            offset,\n          };\n\n          onDragPending?.(event);\n          dispatchMonitorEvent({type: 'onDragPending', event});\n        },\n        onStart(initialCoordinates) {\n          const id = activeRef.current;\n\n          if (id == null) {\n            return;\n          }\n\n          const draggableNode = draggableNodes.get(id);\n\n          if (!draggableNode) {\n            return;\n          }\n\n          const {onDragStart} = latestProps.current;\n          const event: DragStartEvent = {\n            activatorEvent,\n            active: {id, data: draggableNode.data, rect: activeRects},\n          };\n\n          unstable_batchedUpdates(() => {\n            onDragStart?.(event);\n            setStatus(Status.Initializing);\n            dispatch({\n              type: Action.DragStart,\n              initialCoordinates,\n              active: id,\n            });\n            dispatchMonitorEvent({type: 'onDragStart', event});\n            setActiveSensor(activeSensorRef.current);\n            setActivatorEvent(activatorEvent);\n          });\n        },\n        onMove(coordinates) {\n          dispatch({\n            type: Action.DragMove,\n            coordinates,\n          });\n        },\n        onEnd: createHandler(Action.DragEnd),\n        onCancel: createHandler(Action.DragCancel),\n      });\n\n      activeSensorRef.current = sensorInstance;\n\n      function createHandler(type: Action.DragEnd | Action.DragCancel) {\n        return async function handler() {\n          const {active, collisions, over, scrollAdjustedTranslate} =\n            sensorContext.current;\n          let event: DragEndEvent | null = null;\n\n          if (active && scrollAdjustedTranslate) {\n            const {cancelDrop} = latestProps.current;\n\n            event = {\n              activatorEvent,\n              active: active,\n              collisions,\n              delta: scrollAdjustedTranslate,\n              over,\n            };\n\n            if (type === Action.DragEnd && typeof cancelDrop === 'function') {\n              const shouldCancel = await Promise.resolve(cancelDrop(event));\n\n              if (shouldCancel) {\n                type = Action.DragCancel;\n              }\n            }\n          }\n\n          activeRef.current = null;\n\n          unstable_batchedUpdates(() => {\n            dispatch({type});\n            setStatus(Status.Uninitialized);\n            setOver(null);\n            setActiveSensor(null);\n            setActivatorEvent(null);\n            activeSensorRef.current = null;\n\n            const eventName =\n              type === Action.DragEnd ? 'onDragEnd' : 'onDragCancel';\n\n            if (event) {\n              const handler = latestProps.current[eventName];\n\n              handler?.(event);\n              dispatchMonitorEvent({type: eventName, event});\n            }\n          });\n        };\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [draggableNodes]\n  );\n\n  const bindActivatorToSensorInstantiator = useCallback(\n    (\n      handler: SensorActivatorFunction<any>,\n      sensor: SensorDescriptor<any>\n    ): SyntheticListener['handler'] => {\n      return (event, active) => {\n        const nativeEvent = event.nativeEvent as DndEvent;\n        const activeDraggableNode = draggableNodes.get(active);\n\n        if (\n          // Another sensor is already instantiating\n          activeRef.current !== null ||\n          // No active draggable\n          !activeDraggableNode ||\n          // Event has already been captured\n          nativeEvent.dndKit ||\n          nativeEvent.defaultPrevented\n        ) {\n          return;\n        }\n\n        const activationContext = {\n          active: activeDraggableNode,\n        };\n        const shouldActivate = handler(\n          event,\n          sensor.options,\n          activationContext\n        );\n\n        if (shouldActivate === true) {\n          nativeEvent.dndKit = {\n            capturedBy: sensor.sensor,\n          };\n\n          activeRef.current = active;\n          instantiateSensor(event, sensor);\n        }\n      };\n    },\n    [draggableNodes, instantiateSensor]\n  );\n\n  const activators = useCombineActivators(\n    sensors,\n    bindActivatorToSensorInstantiator\n  );\n\n  useSensorSetup(sensors);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activeNodeRect && status === Status.Initializing) {\n      setStatus(Status.Initialized);\n    }\n  }, [activeNodeRect, status]);\n\n  useEffect(\n    () => {\n      const {onDragMove} = latestProps.current;\n      const {active, activatorEvent, collisions, over} = sensorContext.current;\n\n      if (!active || !activatorEvent) {\n        return;\n      }\n\n      const event: DragMoveEvent = {\n        active,\n        activatorEvent,\n        collisions,\n        delta: {\n          x: scrollAdjustedTranslate.x,\n          y: scrollAdjustedTranslate.y,\n        },\n        over,\n      };\n\n      unstable_batchedUpdates(() => {\n        onDragMove?.(event);\n        dispatchMonitorEvent({type: 'onDragMove', event});\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [scrollAdjustedTranslate.x, scrollAdjustedTranslate.y]\n  );\n\n  useEffect(\n    () => {\n      const {\n        active,\n        activatorEvent,\n        collisions,\n        droppableContainers,\n        scrollAdjustedTranslate,\n      } = sensorContext.current;\n\n      if (\n        !active ||\n        activeRef.current == null ||\n        !activatorEvent ||\n        !scrollAdjustedTranslate\n      ) {\n        return;\n      }\n\n      const {onDragOver} = latestProps.current;\n      const overContainer = droppableContainers.get(overId);\n      const over =\n        overContainer && overContainer.rect.current\n          ? {\n              id: overContainer.id,\n              rect: overContainer.rect.current,\n              data: overContainer.data,\n              disabled: overContainer.disabled,\n            }\n          : null;\n      const event: DragOverEvent = {\n        active,\n        activatorEvent,\n        collisions,\n        delta: {\n          x: scrollAdjustedTranslate.x,\n          y: scrollAdjustedTranslate.y,\n        },\n        over,\n      };\n\n      unstable_batchedUpdates(() => {\n        setOver(over);\n        onDragOver?.(event);\n        dispatchMonitorEvent({type: 'onDragOver', event});\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [overId]\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    sensorContext.current = {\n      activatorEvent,\n      active,\n      activeNode,\n      collisionRect,\n      collisions,\n      droppableRects,\n      draggableNodes,\n      draggingNode,\n      draggingNodeRect,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n      scrollAdjustedTranslate,\n    };\n\n    activeRects.current = {\n      initial: draggingNodeRect,\n      translated: collisionRect,\n    };\n  }, [\n    active,\n    activeNode,\n    collisions,\n    collisionRect,\n    draggableNodes,\n    draggingNode,\n    draggingNodeRect,\n    droppableRects,\n    droppableContainers,\n    over,\n    scrollableAncestors,\n    scrollAdjustedTranslate,\n  ]);\n\n  useAutoScroller({\n    ...autoScrollOptions,\n    delta: translate,\n    draggingRect: collisionRect,\n    pointerCoordinates,\n    scrollableAncestors,\n    scrollableAncestorRects,\n  });\n\n  const publicContext = useMemo(() => {\n    const context: PublicContextDescriptor = {\n      active,\n      activeNode,\n      activeNodeRect,\n      activatorEvent,\n      collisions,\n      containerNodeRect,\n      dragOverlay,\n      draggableNodes,\n      droppableContainers,\n      droppableRects,\n      over,\n      measureDroppableContainers,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      measuringConfiguration,\n      measuringScheduled,\n      windowRect,\n    };\n\n    return context;\n  }, [\n    active,\n    activeNode,\n    activeNodeRect,\n    activatorEvent,\n    collisions,\n    containerNodeRect,\n    dragOverlay,\n    draggableNodes,\n    droppableContainers,\n    droppableRects,\n    over,\n    measureDroppableContainers,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    measuringConfiguration,\n    measuringScheduled,\n    windowRect,\n  ]);\n\n  const internalContext = useMemo(() => {\n    const context: InternalContextDescriptor = {\n      activatorEvent,\n      activators,\n      active,\n      activeNodeRect,\n      ariaDescribedById: {\n        draggable: draggableDescribedById,\n      },\n      dispatch,\n      draggableNodes,\n      over,\n      measureDroppableContainers,\n    };\n\n    return context;\n  }, [\n    activatorEvent,\n    activators,\n    active,\n    activeNodeRect,\n    dispatch,\n    draggableDescribedById,\n    draggableNodes,\n    over,\n    measureDroppableContainers,\n  ]);\n\n  return (\n    <DndMonitorContext.Provider value={registerMonitorListener}>\n      <InternalContext.Provider value={internalContext}>\n        <PublicContext.Provider value={publicContext}>\n          <ActiveDraggableContext.Provider value={transform}>\n            {children}\n          </ActiveDraggableContext.Provider>\n        </PublicContext.Provider>\n        <RestoreFocus disabled={accessibility?.restoreFocus === false} />\n      </InternalContext.Provider>\n      <Accessibility\n        {...accessibility}\n        hiddenTextDescribedById={draggableDescribedById}\n      />\n    </DndMonitorContext.Provider>\n  );\n\n  function getAutoScrollerOptions() {\n    const activeSensorDisablesAutoscroll =\n      activeSensor?.autoScrollEnabled === false;\n    const autoScrollGloballyDisabled =\n      typeof autoScroll === 'object'\n        ? autoScroll.enabled === false\n        : autoScroll === false;\n    const enabled =\n      isInitialized &&\n      !activeSensorDisablesAutoscroll &&\n      !autoScrollGloballyDisabled;\n\n    if (typeof autoScroll === 'object') {\n      return {\n        ...autoScroll,\n        enabled,\n      };\n    }\n\n    return {enabled};\n  }\n});\n","import {useCallback, useState} from 'react';\n\nimport type {DndMonitorListener, DndMonitorEvent} from './types';\n\nexport function useDndMonitorProvider() {\n  const [listeners] = useState(() => new Set<DndMonitorListener>());\n\n  const registerListener = useCallback(\n    (listener) => {\n      listeners.add(listener);\n      return () => listeners.delete(listener);\n    },\n    [listeners]\n  );\n\n  const dispatch = useCallback(\n    ({type, event}: DndMonitorEvent) => {\n      listeners.forEach((listener) => listener[type]?.(event as any));\n    },\n    [listeners]\n  );\n\n  return [dispatch, registerListener] as const;\n}\n","import {useMemo} from 'react';\nimport type {DeepRequired} from '@dnd-kit/utilities';\n\nimport {defaultMeasuringConfiguration} from '../defaults';\nimport type {MeasuringConfiguration} from '../types';\n\nexport function useMeasuringConfiguration(\n  config: MeasuringConfiguration | undefined\n): DeepRequired<MeasuringConfiguration> {\n  return useMemo(\n    () => ({\n      draggable: {\n        ...defaultMeasuringConfiguration.draggable,\n        ...config?.draggable,\n      },\n      droppable: {\n        ...defaultMeasuringConfiguration.droppable,\n        ...config?.droppable,\n      },\n      dragOverlay: {\n        ...defaultMeasuringConfiguration.dragOverlay,\n        ...config?.dragOverlay,\n      },\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [config?.draggable, config?.droppable, config?.dragOverlay]\n  );\n}\n","import {useLazyMemo} from '@dnd-kit/utilities';\n\nimport type {DraggableNode, DraggableNodes} from '../../store';\nimport type {UniqueIdentifier} from '../../types';\n\nexport function useCachedNode(\n  draggableNodes: DraggableNodes,\n  id: UniqueIdentifier | null\n): DraggableNode['node']['current'] {\n  const draggableNode = id != null ? draggableNodes.get(id) : undefined;\n  const node = draggableNode ? draggableNode.node.current : null;\n\n  return useLazyMemo(\n    (cachedNode) => {\n      if (id == null) {\n        return null;\n      }\n\n      // In some cases, the draggable node can unmount while dragging\n      // This is the case for virtualized lists. In those situations,\n      // we fall back to the last known value for that node.\n      return node ?? cachedNode ?? null;\n    },\n    [node, id]\n  );\n}\n","import type {ClientRect} from '../../types';\nimport {useInitialValue} from './useInitialValue';\n\nexport function useInitialRect(\n  node: HTMLElement | null,\n  measure: (node: HTMLElement) => ClientRect\n) {\n  return useInitialValue(node, measure);\n}\n","import {useRef} from 'react';\nimport {useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport {getRectDelta} from '../../../utilities/rect';\nimport {getFirstScrollableAncestor} from '../../../utilities/scroll';\nimport type {ClientRect} from '../../../types';\nimport type {DraggableNode} from '../../../store';\nimport type {MeasuringFunction} from '../types';\n\ninterface Options {\n  activeNode: DraggableNode | null | undefined;\n  config: boolean | {x: boolean; y: boolean} | undefined;\n  initialRect: ClientRect | null;\n  measure: MeasuringFunction;\n}\n\nexport function useLayoutShiftScrollCompensation({\n  activeNode,\n  measure,\n  initialRect,\n  config = true,\n}: Options) {\n  const initialized = useRef(false);\n  const {x, y} = typeof config === 'boolean' ? {x: config, y: config} : config;\n\n  useIsomorphicLayoutEffect(() => {\n    const disabled = !x && !y;\n\n    if (disabled || !activeNode) {\n      initialized.current = false;\n      return;\n    }\n\n    if (initialized.current || !initialRect) {\n      // Return early if layout shift scroll compensation was already attempted\n      // or if there is no initialRect to compare to.\n      return;\n    }\n\n    // Get the most up to date node ref for the active draggable\n    const node = activeNode?.node.current;\n\n    if (!node || node.isConnected === false) {\n      // Return early if there is no attached node ref or if the node is\n      // disconnected from the document.\n      return;\n    }\n\n    const rect = measure(node);\n    const rectDelta = getRectDelta(rect, initialRect);\n\n    if (!x) {\n      rectDelta.x = 0;\n    }\n\n    if (!y) {\n      rectDelta.y = 0;\n    }\n\n    // Only perform layout shift scroll compensation once\n    initialized.current = true;\n\n    if (Math.abs(rectDelta.x) > 0 || Math.abs(rectDelta.y) > 0) {\n      const firstScrollableAncestor = getFirstScrollableAncestor(node);\n\n      if (firstScrollableAncestor) {\n        firstScrollableAncestor.scrollBy({\n          top: rectDelta.y,\n          left: rectDelta.x,\n        });\n      }\n    }\n  }, [activeNode, x, y, initialRect, measure]);\n}\n","import {useMemo, useCallback, useState} from 'react';\nimport {isHTMLElement, useNodeRef} from '@dnd-kit/utilities';\n\nimport {useResizeObserver} from './useResizeObserver';\nimport {getMeasurableNode} from '../../utilities/nodes';\nimport type {PublicContextDescriptor} from '../../store';\nimport type {ClientRect} from '../../types';\n\ninterface Arguments {\n  measure(element: HTMLElement): ClientRect;\n}\n\nexport function useDragOverlayMeasuring({\n  measure,\n}: Arguments): PublicContextDescriptor['dragOverlay'] {\n  const [rect, setRect] = useState<ClientRect | null>(null);\n  const handleResize = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      for (const {target} of entries) {\n        if (isHTMLElement(target)) {\n          setRect((rect) => {\n            const newRect = measure(target);\n\n            return rect\n              ? {...rect, width: newRect.width, height: newRect.height}\n              : newRect;\n          });\n          break;\n        }\n      }\n    },\n    [measure]\n  );\n  const resizeObserver = useResizeObserver({callback: handleResize});\n  const handleNodeChange = useCallback(\n    (element) => {\n      const node = getMeasurableNode(element);\n\n      resizeObserver?.disconnect();\n\n      if (node) {\n        resizeObserver?.observe(node);\n      }\n\n      setRect(node ? measure(node) : null);\n    },\n    [measure, resizeObserver]\n  );\n  const [nodeRef, setRef] = useNodeRef(handleNodeChange);\n\n  return useMemo(\n    () => ({\n      nodeRef,\n      rect,\n      setRef,\n    }),\n    [rect, nodeRef, setRef]\n  );\n}\n","import type {ClientRect} from '../../types';\nimport {getRectDelta} from '../../utilities';\n\nimport {useInitialValue} from './useInitialValue';\n\nexport function useRectDelta(rect: ClientRect | null) {\n  const initialRect = useInitialValue(rect);\n\n  return getRectDelta(rect, initialRect);\n}\n","import {useState, useCallback, useMemo, useRef, useEffect} from 'react';\nimport {add} from '@dnd-kit/utilities';\n\nimport {\n  defaultCoordinates,\n  getScrollableElement,\n  getScrollCoordinates,\n  getScrollOffsets,\n} from '../../utilities';\nimport type {Coordinates} from '../../types';\n\ntype ScrollCoordinates = Map<HTMLElement | Window, Coordinates>;\n\nexport function useScrollOffsets(elements: Element[]): Coordinates {\n  const [\n    scrollCoordinates,\n    setScrollCoordinates,\n  ] = useState<ScrollCoordinates | null>(null);\n  const prevElements = useRef(elements);\n\n  // To-do: Throttle the handleScroll callback\n  const handleScroll = useCallback((event: Event) => {\n    const scrollingElement = getScrollableElement(event.target);\n\n    if (!scrollingElement) {\n      return;\n    }\n\n    setScrollCoordinates((scrollCoordinates) => {\n      if (!scrollCoordinates) {\n        return null;\n      }\n\n      scrollCoordinates.set(\n        scrollingElement,\n        getScrollCoordinates(scrollingElement)\n      );\n\n      return new Map(scrollCoordinates);\n    });\n  }, []);\n\n  useEffect(() => {\n    const previousElements = prevElements.current;\n\n    if (elements !== previousElements) {\n      cleanup(previousElements);\n\n      const entries = elements\n        .map((element) => {\n          const scrollableElement = getScrollableElement(element);\n\n          if (scrollableElement) {\n            scrollableElement.addEventListener('scroll', handleScroll, {\n              passive: true,\n            });\n\n            return [\n              scrollableElement,\n              getScrollCoordinates(scrollableElement),\n            ] as const;\n          }\n\n          return null;\n        })\n        .filter(\n          (\n            entry\n          ): entry is [\n            HTMLElement | (Window & typeof globalThis),\n            Coordinates\n          ] => entry != null\n        );\n\n      setScrollCoordinates(entries.length ? new Map(entries) : null);\n\n      prevElements.current = elements;\n    }\n\n    return () => {\n      cleanup(elements);\n      cleanup(previousElements);\n    };\n\n    function cleanup(elements: Element[]) {\n      elements.forEach((element) => {\n        const scrollableElement = getScrollableElement(element);\n\n        scrollableElement?.removeEventListener('scroll', handleScroll);\n      });\n    }\n  }, [handleScroll, elements]);\n\n  return useMemo(() => {\n    if (elements.length) {\n      return scrollCoordinates\n        ? Array.from(scrollCoordinates.values()).reduce(\n            (acc, coordinates) => add(acc, coordinates),\n            defaultCoordinates\n          )\n        : getScrollOffsets(elements);\n    }\n\n    return defaultCoordinates;\n  }, [elements, scrollCoordinates]);\n}\n","import type {Transform} from '@dnd-kit/utilities';\nimport type {ClientRect} from '../../types';\n\nexport function adjustScale(\n  transform: Transform,\n  rect1: ClientRect | null,\n  rect2: ClientRect | null\n): Transform {\n  return {\n    ...transform,\n    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,\n    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1,\n  };\n}\n","import {useMemo} from 'react';\n\nimport type {SensorActivatorFunction, SensorDescriptor} from '../../sensors';\nimport type {\n  SyntheticListener,\n  SyntheticListeners,\n} from './useSyntheticListeners';\n\nexport function useCombineActivators(\n  sensors: SensorDescriptor<any>[],\n  getSyntheticHandler: (\n    handler: SensorActivatorFunction<any>,\n    sensor: SensorDescriptor<any>\n  ) => SyntheticListener['handler']\n): SyntheticListeners {\n  return useMemo(\n    () =>\n      sensors.reduce<SyntheticListeners>((accumulator, sensor) => {\n        const {sensor: Sensor} = sensor;\n\n        const sensorActivators = Sensor.activators.map((activator) => ({\n          eventName: activator.eventName,\n          handler: getSyntheticHandler(activator.handler, sensor),\n        }));\n\n        return [...accumulator, ...sensorActivators];\n      }, []),\n    [sensors, getSyntheticHandler]\n  );\n}\n","import {useEffect} from 'react';\nimport {canUseDOM} from '@dnd-kit/utilities';\n\nimport type {SensorDescriptor} from '../../sensors';\n\nexport function useSensorSetup(sensors: SensorDescriptor<any>[]) {\n  useEffect(\n    () => {\n      if (!canUseDOM) {\n        return;\n      }\n\n      const teardownFns = sensors.map(({sensor}) => sensor.setup?.());\n\n      return () => {\n        for (const teardown of teardownFns) {\n          teardown?.();\n        }\n      };\n    },\n    // TO-DO: Sensors length could theoretically change which would not be a valid dependency\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    sensors.map(({sensor}) => sensor)\n  );\n}\n","import {createContext, useContext, useMemo} from 'react';\nimport {\n  Transform,\n  useNodeRef,\n  useIsomorphicLayoutEffect,\n  useLatestValue,\n  useUniqueId,\n} from '@dnd-kit/utilities';\n\nimport {InternalContext, Data} from '../store';\nimport type {UniqueIdentifier} from '../types';\nimport {ActiveDraggableContext} from '../components/DndContext';\nimport {useSyntheticListeners, SyntheticListenerMap} from './utilities';\n\nexport interface UseDraggableArguments {\n  id: UniqueIdentifier;\n  data?: Data;\n  disabled?: boolean;\n  attributes?: {\n    role?: string;\n    roleDescription?: string;\n    tabIndex?: number;\n  };\n}\n\nexport interface DraggableAttributes {\n  role: string;\n  tabIndex: number;\n  'aria-disabled': boolean;\n  'aria-pressed': boolean | undefined;\n  'aria-roledescription': string;\n  'aria-describedby': string;\n}\n\nexport type DraggableSyntheticListeners = SyntheticListenerMap | undefined;\n\nconst NullContext = createContext<any>(null);\n\nconst defaultRole = 'button';\n\nconst ID_PREFIX = 'Draggable';\n\nexport function useDraggable({\n  id,\n  data,\n  disabled = false,\n  attributes,\n}: UseDraggableArguments) {\n  const key = useUniqueId(ID_PREFIX);\n  const {\n    activators,\n    activatorEvent,\n    active,\n    activeNodeRect,\n    ariaDescribedById,\n    draggableNodes,\n    over,\n  } = useContext(InternalContext);\n  const {\n    role = defaultRole,\n    roleDescription = 'draggable',\n    tabIndex = 0,\n  } = attributes ?? {};\n  const isDragging = active?.id === id;\n  const transform: Transform | null = useContext(\n    isDragging ? ActiveDraggableContext : NullContext\n  );\n  const [node, setNodeRef] = useNodeRef();\n  const [activatorNode, setActivatorNodeRef] = useNodeRef();\n  const listeners = useSyntheticListeners(activators, id);\n  const dataRef = useLatestValue(data);\n\n  useIsomorphicLayoutEffect(\n    () => {\n      draggableNodes.set(id, {id, key, node, activatorNode, data: dataRef});\n\n      return () => {\n        const node = draggableNodes.get(id);\n\n        if (node && node.key === key) {\n          draggableNodes.delete(id);\n        }\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [draggableNodes, id]\n  );\n\n  const memoizedAttributes: DraggableAttributes = useMemo(\n    () => ({\n      role,\n      tabIndex,\n      'aria-disabled': disabled,\n      'aria-pressed': isDragging && role === defaultRole ? true : undefined,\n      'aria-roledescription': roleDescription,\n      'aria-describedby': ariaDescribedById.draggable,\n    }),\n    [\n      disabled,\n      role,\n      tabIndex,\n      isDragging,\n      roleDescription,\n      ariaDescribedById.draggable,\n    ]\n  );\n\n  return {\n    active,\n    activatorEvent,\n    activeNodeRect,\n    attributes: memoizedAttributes,\n    isDragging,\n    listeners: disabled ? undefined : listeners,\n    node,\n    over,\n    setNodeRef,\n    setActivatorNodeRef,\n    transform,\n  };\n}\n","import {useMemo} from 'react';\n\nimport type {SyntheticEventName, UniqueIdentifier} from '../../types';\n\nexport type SyntheticListener = {\n  eventName: SyntheticEventName;\n  handler: (event: React.SyntheticEvent, id: UniqueIdentifier) => void;\n};\n\nexport type SyntheticListeners = SyntheticListener[];\n\nexport type SyntheticListenerMap = Record<string, Function>;\n\nexport function useSyntheticListeners(\n  listeners: SyntheticListeners,\n  id: UniqueIdentifier\n): SyntheticListenerMap {\n  return useMemo(() => {\n    return listeners.reduce<SyntheticListenerMap>(\n      (acc, {eventName, handler}) => {\n        acc[eventName] = (event: React.SyntheticEvent) => {\n          handler(event, id);\n        };\n\n        return acc;\n      },\n      {} as SyntheticListenerMap\n    );\n  }, [listeners, id]);\n}\n","import {ContextType, useContext} from 'react';\nimport {PublicContext} from '../store';\n\nexport function useDndContext() {\n  return useContext(PublicContext);\n}\n\nexport type UseDndContextReturnValue = ContextType<typeof PublicContext>;\n","import {useCallback, useContext, useEffect, useRef} from 'react';\nimport {useLatestValue, useNodeRef, useUniqueId} from '@dnd-kit/utilities';\n\nimport {InternalContext, Action, Data} from '../store';\nimport type {ClientRect, UniqueIdentifier} from '../types';\n\nimport {useResizeObserver} from './utilities';\n\ninterface ResizeObserverConfig {\n  /** Whether the ResizeObserver should be disabled entirely */\n  disabled?: boolean;\n  /** Resize events may affect the layout and position of other droppable containers.\n   * Specify an array of `UniqueIdentifier` of droppable containers that should also be re-measured\n   * when this droppable container resizes. Specifying an empty array re-measures all droppable containers.\n   */\n  updateMeasurementsFor?: UniqueIdentifier[];\n  /** Represents the debounce timeout between when resize events are observed and when elements are re-measured */\n  timeout?: number;\n}\n\nexport interface UseDroppableArguments {\n  id: UniqueIdentifier;\n  disabled?: boolean;\n  data?: Data;\n  resizeObserverConfig?: ResizeObserverConfig;\n}\n\nconst ID_PREFIX = 'Droppable';\n\nconst defaultResizeObserverConfig = {\n  timeout: 25,\n};\n\nexport function useDroppable({\n  data,\n  disabled = false,\n  id,\n  resizeObserverConfig,\n}: UseDroppableArguments) {\n  const key = useUniqueId(ID_PREFIX);\n  const {active, dispatch, over, measureDroppableContainers} =\n    useContext(InternalContext);\n  const previous = useRef({disabled});\n  const resizeObserverConnected = useRef(false);\n  const rect = useRef<ClientRect | null>(null);\n  const callbackId = useRef<NodeJS.Timeout | null>(null);\n  const {\n    disabled: resizeObserverDisabled,\n    updateMeasurementsFor,\n    timeout: resizeObserverTimeout,\n  } = {\n    ...defaultResizeObserverConfig,\n    ...resizeObserverConfig,\n  };\n  const ids = useLatestValue(updateMeasurementsFor ?? id);\n  const handleResize = useCallback(\n    () => {\n      if (!resizeObserverConnected.current) {\n        // ResizeObserver invokes the `handleResize` callback as soon as `observe` is called,\n        // assuming the element is rendered and displayed.\n        resizeObserverConnected.current = true;\n        return;\n      }\n\n      if (callbackId.current != null) {\n        clearTimeout(callbackId.current);\n      }\n\n      callbackId.current = setTimeout(() => {\n        measureDroppableContainers(\n          Array.isArray(ids.current) ? ids.current : [ids.current]\n        );\n        callbackId.current = null;\n      }, resizeObserverTimeout);\n    },\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [resizeObserverTimeout]\n  );\n  const resizeObserver = useResizeObserver({\n    callback: handleResize,\n    disabled: resizeObserverDisabled || !active,\n  });\n  const handleNodeChange = useCallback(\n    (newElement: HTMLElement | null, previousElement: HTMLElement | null) => {\n      if (!resizeObserver) {\n        return;\n      }\n\n      if (previousElement) {\n        resizeObserver.unobserve(previousElement);\n        resizeObserverConnected.current = false;\n      }\n\n      if (newElement) {\n        resizeObserver.observe(newElement);\n      }\n    },\n    [resizeObserver]\n  );\n  const [nodeRef, setNodeRef] = useNodeRef(handleNodeChange);\n  const dataRef = useLatestValue(data);\n\n  useEffect(() => {\n    if (!resizeObserver || !nodeRef.current) {\n      return;\n    }\n\n    resizeObserver.disconnect();\n    resizeObserverConnected.current = false;\n    resizeObserver.observe(nodeRef.current);\n  }, [nodeRef, resizeObserver]);\n\n  useEffect(\n    () => {\n      dispatch({\n        type: Action.RegisterDroppable,\n        element: {\n          id,\n          key,\n          disabled,\n          node: nodeRef,\n          rect,\n          data: dataRef,\n        },\n      });\n\n      return () =>\n        dispatch({\n          type: Action.UnregisterDroppable,\n          key,\n          id,\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [id]\n  );\n\n  useEffect(() => {\n    if (disabled !== previous.current.disabled) {\n      dispatch({\n        type: Action.SetDroppableDisabled,\n        id,\n        key,\n        disabled,\n      });\n\n      previous.current.disabled = disabled;\n    }\n  }, [id, key, disabled, dispatch]);\n\n  return {\n    active,\n    rect,\n    isOver: over?.id === id,\n    node: nodeRef,\n    over,\n    setNodeRef,\n  };\n}\n","import type {Modifier} from '@dnd-kit/core';\n\nexport const restrictToHorizontalAxis: Modifier = ({transform}) => {\n  return {\n    ...transform,\n    y: 0,\n  };\n};\n","/**\n * Move an array item to a different position. Returns a new array with the item moved to the new position.\n */\nexport function arrayMove<T>(array: T[], from: number, to: number): T[] {\n  const newArray = array.slice();\n  newArray.splice(\n    to < 0 ? newArray.length + to : to,\n    0,\n    newArray.splice(from, 1)[0]\n  );\n\n  return newArray;\n}\n","import type {\n  ClientRect,\n  UniqueIdentifier,\n  UseDndContextReturnValue,\n} from '@dnd-kit/core';\n\nexport function getSortedRects(\n  items: UniqueIdentifier[],\n  rects: UseDndContextReturnValue['droppableRects']\n) {\n  return items.reduce<ClientRect[]>((accumulator, id, index) => {\n    const rect = rects.get(id);\n\n    if (rect) {\n      accumulator[index] = rect;\n    }\n\n    return accumulator;\n  }, Array(items.length));\n}\n","export function isValidIndex(index: number | null): index is number {\n  return index !== null && index >= 0;\n}\n","import type {ClientRect} from '@dnd-kit/core';\nimport type {SortingStrategy} from '../types';\n\n// To-do: We should be calculating scale transformation\nconst defaultScale = {\n  scaleX: 1,\n  scaleY: 1,\n};\n\nexport const horizontalListSortingStrategy: SortingStrategy = ({\n  rects,\n  activeNodeRect: fallbackActiveRect,\n  activeIndex,\n  overIndex,\n  index,\n}) => {\n  const activeNodeRect = rects[activeIndex] ?? fallbackActiveRect;\n\n  if (!activeNodeRect) {\n    return null;\n  }\n\n  const itemGap = getItemGap(rects, index, activeIndex);\n\n  if (index === activeIndex) {\n    const newIndexRect = rects[overIndex];\n\n    if (!newIndexRect) {\n      return null;\n    }\n\n    return {\n      x:\n        activeIndex < overIndex\n          ? newIndexRect.left +\n            newIndexRect.width -\n            (activeNodeRect.left + activeNodeRect.width)\n          : newIndexRect.left - activeNodeRect.left,\n      y: 0,\n      ...defaultScale,\n    };\n  }\n\n  if (index > activeIndex && index <= overIndex) {\n    return {\n      x: -activeNodeRect.width - itemGap,\n      y: 0,\n      ...defaultScale,\n    };\n  }\n\n  if (index < activeIndex && index >= overIndex) {\n    return {\n      x: activeNodeRect.width + itemGap,\n      y: 0,\n      ...defaultScale,\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0,\n    ...defaultScale,\n  };\n};\n\nfunction getItemGap(rects: ClientRect[], index: number, activeIndex: number) {\n  const currentRect: ClientRect | undefined = rects[index];\n  const previousRect: ClientRect | undefined = rects[index - 1];\n  const nextRect: ClientRect | undefined = rects[index + 1];\n\n  if (!currentRect || (!previousRect && !nextRect)) {\n    return 0;\n  }\n\n  if (activeIndex < index) {\n    return previousRect\n      ? currentRect.left - (previousRect.left + previousRect.width)\n      : nextRect.left - (currentRect.left + currentRect.width);\n  }\n\n  return nextRect\n    ? nextRect.left - (currentRect.left + currentRect.width)\n    : currentRect.left - (previousRect.left + previousRect.width);\n}\n","import {arrayMove} from '../utilities';\nimport type {SortingStrategy} from '../types';\n\nexport const rectSortingStrategy: SortingStrategy = ({\n  rects,\n  activeIndex,\n  overIndex,\n  index,\n}) => {\n  const newRects = arrayMove(rects, overIndex, activeIndex);\n\n  const oldRect = rects[index];\n  const newRect = newRects[index];\n\n  if (!newRect || !oldRect) {\n    return null;\n  }\n\n  return {\n    x: newRect.left - oldRect.left,\n    y: newRect.top - oldRect.top,\n    scaleX: newRect.width / oldRect.width,\n    scaleY: newRect.height / oldRect.height,\n  };\n};\n","import React, {useEffect, useMemo, useRef} from 'react';\nimport {useDndContext, ClientRect, UniqueIdentifier} from '@dnd-kit/core';\nimport {useIsomorphicLayoutEffect, useUniqueId} from '@dnd-kit/utilities';\n\nimport type {Disabled, SortingStrategy} from '../types';\nimport {getSortedRects, itemsEqual, normalizeDisabled} from '../utilities';\nimport {rectSortingStrategy} from '../strategies';\n\nexport interface Props {\n  children: React.ReactNode;\n  items: (UniqueIdentifier | {id: UniqueIdentifier})[];\n  strategy?: SortingStrategy;\n  id?: string;\n  disabled?: boolean | Disabled;\n}\n\nconst ID_PREFIX = 'Sortable';\n\ninterface ContextDescriptor {\n  activeIndex: number;\n  containerId: string;\n  disabled: Disabled;\n  disableTransforms: boolean;\n  items: UniqueIdentifier[];\n  overIndex: number;\n  useDragOverlay: boolean;\n  sortedRects: ClientRect[];\n  strategy: SortingStrategy;\n}\n\nexport const Context = React.createContext<ContextDescriptor>({\n  activeIndex: -1,\n  containerId: ID_PREFIX,\n  disableTransforms: false,\n  items: [],\n  overIndex: -1,\n  useDragOverlay: false,\n  sortedRects: [],\n  strategy: rectSortingStrategy,\n  disabled: {\n    draggable: false,\n    droppable: false,\n  },\n});\n\nexport function SortableContext({\n  children,\n  id,\n  items: userDefinedItems,\n  strategy = rectSortingStrategy,\n  disabled: disabledProp = false,\n}: Props) {\n  const {\n    active,\n    dragOverlay,\n    droppableRects,\n    over,\n    measureDroppableContainers,\n  } = useDndContext();\n  const containerId = useUniqueId(ID_PREFIX, id);\n  const useDragOverlay = Boolean(dragOverlay.rect !== null);\n  const items = useMemo<UniqueIdentifier[]>(\n    () =>\n      userDefinedItems.map((item) =>\n        typeof item === 'object' && 'id' in item ? item.id : item\n      ),\n    [userDefinedItems]\n  );\n  const isDragging = active != null;\n  const activeIndex = active ? items.indexOf(active.id) : -1;\n  const overIndex = over ? items.indexOf(over.id) : -1;\n  const previousItemsRef = useRef(items);\n  const itemsHaveChanged = !itemsEqual(items, previousItemsRef.current);\n  const disableTransforms =\n    (overIndex !== -1 && activeIndex === -1) || itemsHaveChanged;\n  const disabled = normalizeDisabled(disabledProp);\n\n  useIsomorphicLayoutEffect(() => {\n    if (itemsHaveChanged && isDragging) {\n      measureDroppableContainers(items);\n    }\n  }, [itemsHaveChanged, items, isDragging, measureDroppableContainers]);\n\n  useEffect(() => {\n    previousItemsRef.current = items;\n  }, [items]);\n\n  const contextValue = useMemo(\n    (): ContextDescriptor => ({\n      activeIndex,\n      containerId,\n      disabled,\n      disableTransforms,\n      items,\n      overIndex,\n      useDragOverlay,\n      sortedRects: getSortedRects(items, droppableRects),\n      strategy,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      activeIndex,\n      containerId,\n      disabled.draggable,\n      disabled.droppable,\n      disableTransforms,\n      items,\n      overIndex,\n      droppableRects,\n      useDragOverlay,\n      strategy,\n    ]\n  );\n\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>;\n}\n","import type {UniqueIdentifier} from '@dnd-kit/core';\n\nexport function itemsEqual(a: UniqueIdentifier[], b: UniqueIdentifier[]) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import type {Disabled} from '../types';\n\nexport function normalizeDisabled(disabled: boolean | Disabled): Disabled {\n  if (typeof disabled === 'boolean') {\n    return {\n      draggable: disabled,\n      droppable: disabled,\n    };\n  }\n\n  return disabled;\n}\n","import {CSS} from '@dnd-kit/utilities';\n\nimport {arrayMove} from '../utilities';\n\nimport type {\n  AnimateLayoutChanges,\n  NewIndexGetter,\n  SortableTransition,\n} from './types';\n\nexport const defaultNewIndexGetter: NewIndexGetter = ({\n  id,\n  items,\n  activeIndex,\n  overIndex,\n}) => arrayMove(items, activeIndex, overIndex).indexOf(id);\n\nexport const defaultAnimateLayoutChanges: AnimateLayoutChanges = ({\n  containerId,\n  isSorting,\n  wasDragging,\n  index,\n  items,\n  newIndex,\n  previousItems,\n  previousContainerId,\n  transition,\n}) => {\n  if (!transition || !wasDragging) {\n    return false;\n  }\n\n  if (previousItems !== items && index === newIndex) {\n    return false;\n  }\n\n  if (isSorting) {\n    return true;\n  }\n\n  return newIndex !== index && containerId === previousContainerId;\n};\n\nexport const defaultTransition: SortableTransition = {\n  duration: 200,\n  easing: 'ease',\n};\n\nexport const transitionProperty = 'transform';\n\nexport const disabledTransition = CSS.Transition.toString({\n  property: transitionProperty,\n  duration: 0,\n  easing: 'linear',\n});\n\nexport const defaultAttributes = {\n  roleDescription: 'sortable',\n};\n","import {useContext, useEffect, useMemo, useRef} from 'react';\nimport {\n  useDraggable,\n  useDroppable,\n  UseDraggableArguments,\n  UseDroppableArguments,\n} from '@dnd-kit/core';\nimport type {Data} from '@dnd-kit/core';\nimport {CSS, isKeyboardEvent, useCombinedRefs} from '@dnd-kit/utilities';\n\nimport {Context} from '../components';\nimport type {Disabled, SortableData, SortingStrategy} from '../types';\nimport {isValidIndex} from '../utilities';\nimport {\n  defaultAnimateLayoutChanges,\n  defaultAttributes,\n  defaultNewIndexGetter,\n  defaultTransition,\n  disabledTransition,\n  transitionProperty,\n} from './defaults';\nimport type {\n  AnimateLayoutChanges,\n  NewIndexGetter,\n  SortableTransition,\n} from './types';\nimport {useDerivedTransform} from './utilities';\n\nexport interface Arguments\n  extends Omit<UseDraggableArguments, 'disabled'>,\n    Pick<UseDroppableArguments, 'resizeObserverConfig'> {\n  animateLayoutChanges?: AnimateLayoutChanges;\n  disabled?: boolean | Disabled;\n  getNewIndex?: NewIndexGetter;\n  strategy?: SortingStrategy;\n  transition?: SortableTransition | null;\n}\n\nexport function useSortable({\n  animateLayoutChanges = defaultAnimateLayoutChanges,\n  attributes: userDefinedAttributes,\n  disabled: localDisabled,\n  data: customData,\n  getNewIndex = defaultNewIndexGetter,\n  id,\n  strategy: localStrategy,\n  resizeObserverConfig,\n  transition = defaultTransition,\n}: Arguments) {\n  const {\n    items,\n    containerId,\n    activeIndex,\n    disabled: globalDisabled,\n    disableTransforms,\n    sortedRects,\n    overIndex,\n    useDragOverlay,\n    strategy: globalStrategy,\n  } = useContext(Context);\n  const disabled: Disabled = normalizeLocalDisabled(\n    localDisabled,\n    globalDisabled\n  );\n  const index = items.indexOf(id);\n  const data = useMemo<SortableData & Data>(\n    () => ({sortable: {containerId, index, items}, ...customData}),\n    [containerId, customData, index, items]\n  );\n  const itemsAfterCurrentSortable = useMemo(\n    () => items.slice(items.indexOf(id)),\n    [items, id]\n  );\n  const {\n    rect,\n    node,\n    isOver,\n    setNodeRef: setDroppableNodeRef,\n  } = useDroppable({\n    id,\n    data,\n    disabled: disabled.droppable,\n    resizeObserverConfig: {\n      updateMeasurementsFor: itemsAfterCurrentSortable,\n      ...resizeObserverConfig,\n    },\n  });\n  const {\n    active,\n    activatorEvent,\n    activeNodeRect,\n    attributes,\n    setNodeRef: setDraggableNodeRef,\n    listeners,\n    isDragging,\n    over,\n    setActivatorNodeRef,\n    transform,\n  } = useDraggable({\n    id,\n    data,\n    attributes: {\n      ...defaultAttributes,\n      ...userDefinedAttributes,\n    },\n    disabled: disabled.draggable,\n  });\n  const setNodeRef = useCombinedRefs(setDroppableNodeRef, setDraggableNodeRef);\n  const isSorting = Boolean(active);\n  const displaceItem =\n    isSorting &&\n    !disableTransforms &&\n    isValidIndex(activeIndex) &&\n    isValidIndex(overIndex);\n  const shouldDisplaceDragSource = !useDragOverlay && isDragging;\n  const dragSourceDisplacement =\n    shouldDisplaceDragSource && displaceItem ? transform : null;\n  const strategy = localStrategy ?? globalStrategy;\n  const finalTransform = displaceItem\n    ? dragSourceDisplacement ??\n      strategy({\n        rects: sortedRects,\n        activeNodeRect,\n        activeIndex,\n        overIndex,\n        index,\n      })\n    : null;\n  const newIndex =\n    isValidIndex(activeIndex) && isValidIndex(overIndex)\n      ? getNewIndex({id, items, activeIndex, overIndex})\n      : index;\n  const activeId = active?.id;\n  const previous = useRef({\n    activeId,\n    items,\n    newIndex,\n    containerId,\n  });\n  const itemsHaveChanged = items !== previous.current.items;\n  const shouldAnimateLayoutChanges = animateLayoutChanges({\n    active,\n    containerId,\n    isDragging,\n    isSorting,\n    id,\n    index,\n    items,\n    newIndex: previous.current.newIndex,\n    previousItems: previous.current.items,\n    previousContainerId: previous.current.containerId,\n    transition,\n    wasDragging: previous.current.activeId != null,\n  });\n\n  const derivedTransform = useDerivedTransform({\n    disabled: !shouldAnimateLayoutChanges,\n    index,\n    node,\n    rect,\n  });\n\n  useEffect(() => {\n    if (isSorting && previous.current.newIndex !== newIndex) {\n      previous.current.newIndex = newIndex;\n    }\n\n    if (containerId !== previous.current.containerId) {\n      previous.current.containerId = containerId;\n    }\n\n    if (items !== previous.current.items) {\n      previous.current.items = items;\n    }\n  }, [isSorting, newIndex, containerId, items]);\n\n  useEffect(() => {\n    if (activeId === previous.current.activeId) {\n      return;\n    }\n\n    if (activeId != null && previous.current.activeId == null) {\n      previous.current.activeId = activeId;\n      return;\n    }\n\n    const timeoutId = setTimeout(() => {\n      previous.current.activeId = activeId;\n    }, 50);\n\n    return () => clearTimeout(timeoutId);\n  }, [activeId]);\n\n  return {\n    active,\n    activeIndex,\n    attributes,\n    data,\n    rect,\n    index,\n    newIndex,\n    items,\n    isOver,\n    isSorting,\n    isDragging,\n    listeners,\n    node,\n    overIndex,\n    over,\n    setNodeRef,\n    setActivatorNodeRef,\n    setDroppableNodeRef,\n    setDraggableNodeRef,\n    transform: derivedTransform ?? finalTransform,\n    transition: getTransition(),\n  };\n\n  function getTransition() {\n    if (\n      // Temporarily disable transitions for a single frame to set up derived transforms\n      derivedTransform ||\n      // Or to prevent items jumping to back to their \"new\" position when items change\n      (itemsHaveChanged && previous.current.newIndex === index)\n    ) {\n      return disabledTransition;\n    }\n\n    if (\n      (shouldDisplaceDragSource && !isKeyboardEvent(activatorEvent)) ||\n      !transition\n    ) {\n      return undefined;\n    }\n\n    if (isSorting || shouldAnimateLayoutChanges) {\n      return CSS.Transition.toString({\n        ...transition,\n        property: transitionProperty,\n      });\n    }\n\n    return undefined;\n  }\n}\n\nfunction normalizeLocalDisabled(\n  localDisabled: Arguments['disabled'],\n  globalDisabled: Disabled\n) {\n  if (typeof localDisabled === 'boolean') {\n    return {\n      draggable: localDisabled,\n      // Backwards compatibility\n      droppable: false,\n    };\n  }\n\n  return {\n    draggable: localDisabled?.draggable ?? globalDisabled.draggable,\n    droppable: localDisabled?.droppable ?? globalDisabled.droppable,\n  };\n}\n","import {useEffect, useRef, useState} from 'react';\nimport {getClientRect, ClientRect} from '@dnd-kit/core';\nimport {Transform, useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\ninterface Arguments {\n  rect: React.MutableRefObject<ClientRect | null>;\n  disabled: boolean;\n  index: number;\n  node: React.MutableRefObject<HTMLElement | null>;\n}\n\n/*\n * When the index of an item changes while sorting,\n * we need to temporarily disable the transforms\n */\nexport function useDerivedTransform({disabled, index, node, rect}: Arguments) {\n  const [derivedTransform, setDerivedtransform] = useState<Transform | null>(\n    null\n  );\n  const previousIndex = useRef(index);\n\n  useIsomorphicLayoutEffect(() => {\n    if (!disabled && index !== previousIndex.current && node.current) {\n      const initial = rect.current;\n\n      if (initial) {\n        const current = getClientRect(node.current, {\n          ignoreTransform: true,\n        });\n\n        const delta = {\n          x: initial.left - current.left,\n          y: initial.top - current.top,\n          scaleX: initial.width / current.width,\n          scaleY: initial.height / current.height,\n        };\n\n        if (delta.x || delta.y) {\n          setDerivedtransform(delta);\n        }\n      }\n    }\n\n    if (index !== previousIndex.current) {\n      previousIndex.current = index;\n    }\n  }, [disabled, index, node, rect]);\n\n  useEffect(() => {\n    if (derivedTransform) {\n      setDerivedtransform(null);\n    }\n  }, [derivedTransform]);\n\n  return derivedTransform;\n}\n","import {\n  closestCorners,\n  getScrollableAncestors,\n  getFirstCollision,\n  KeyboardCode,\n  DroppableContainer,\n  KeyboardCoordinateGetter,\n} from '@dnd-kit/core';\nimport {subtract} from '@dnd-kit/utilities';\n\nimport {hasSortableData} from '../../types';\n\nconst directions: string[] = [\n  KeyboardCode.Down,\n  KeyboardCode.Right,\n  KeyboardCode.Up,\n  KeyboardCode.Left,\n];\n\nexport const sortableKeyboardCoordinates: KeyboardCoordinateGetter = (\n  event,\n  {\n    context: {\n      active,\n      collisionRect,\n      droppableRects,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n    },\n  }\n) => {\n  if (directions.includes(event.code)) {\n    event.preventDefault();\n\n    if (!active || !collisionRect) {\n      return;\n    }\n\n    const filteredContainers: DroppableContainer[] = [];\n\n    droppableContainers.getEnabled().forEach((entry) => {\n      if (!entry || entry?.disabled) {\n        return;\n      }\n\n      const rect = droppableRects.get(entry.id);\n\n      if (!rect) {\n        return;\n      }\n\n      switch (event.code) {\n        case KeyboardCode.Down:\n          if (collisionRect.top < rect.top) {\n            filteredContainers.push(entry);\n          }\n          break;\n        case KeyboardCode.Up:\n          if (collisionRect.top > rect.top) {\n            filteredContainers.push(entry);\n          }\n          break;\n        case KeyboardCode.Left:\n          if (collisionRect.left > rect.left) {\n            filteredContainers.push(entry);\n          }\n          break;\n        case KeyboardCode.Right:\n          if (collisionRect.left < rect.left) {\n            filteredContainers.push(entry);\n          }\n          break;\n      }\n    });\n\n    const collisions = closestCorners({\n      active,\n      collisionRect: collisionRect,\n      droppableRects,\n      droppableContainers: filteredContainers,\n      pointerCoordinates: null,\n    });\n    let closestId = getFirstCollision(collisions, 'id');\n\n    if (closestId === over?.id && collisions.length > 1) {\n      closestId = collisions[1].id;\n    }\n\n    if (closestId != null) {\n      const activeDroppable = droppableContainers.get(active.id);\n      const newDroppable = droppableContainers.get(closestId);\n      const newRect = newDroppable ? droppableRects.get(newDroppable.id) : null;\n      const newNode = newDroppable?.node.current;\n\n      if (newNode && newRect && activeDroppable && newDroppable) {\n        const newScrollAncestors = getScrollableAncestors(newNode);\n        const hasDifferentScrollAncestors = newScrollAncestors.some(\n          (element, index) => scrollableAncestors[index] !== element\n        );\n        const hasSameContainer = isSameContainer(activeDroppable, newDroppable);\n        const isAfterActive = isAfter(activeDroppable, newDroppable);\n        const offset =\n          hasDifferentScrollAncestors || !hasSameContainer\n            ? {\n                x: 0,\n                y: 0,\n              }\n            : {\n                x: isAfterActive ? collisionRect.width - newRect.width : 0,\n                y: isAfterActive ? collisionRect.height - newRect.height : 0,\n              };\n        const rectCoordinates = {\n          x: newRect.left,\n          y: newRect.top,\n        };\n\n        const newCoordinates =\n          offset.x && offset.y\n            ? rectCoordinates\n            : subtract(rectCoordinates, offset);\n\n        return newCoordinates;\n      }\n    }\n  }\n\n  return undefined;\n};\n\nfunction isSameContainer(a: DroppableContainer, b: DroppableContainer) {\n  if (!hasSortableData(a) || !hasSortableData(b)) {\n    return false;\n  }\n\n  return (\n    a.data.current.sortable.containerId === b.data.current.sortable.containerId\n  );\n}\n\nfunction isAfter(a: DroppableContainer, b: DroppableContainer) {\n  if (!hasSortableData(a) || !hasSortableData(b)) {\n    return false;\n  }\n\n  if (!isSameContainer(a, b)) {\n    return false;\n  }\n\n  return a.data.current.sortable.index < b.data.current.sortable.index;\n}\n","import {useMemo} from 'react';\n\nexport function useCombinedRefs<T>(\n  ...refs: ((node: T) => void)[]\n): (node: T) => void {\n  return useMemo(\n    () => (node: T) => {\n      refs.forEach((ref) => ref(node));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    refs\n  );\n}\n","// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const canUseDOM =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined';\n","export function isWindow(element: Object): element is typeof window {\n  const elementString = Object.prototype.toString.call(element);\n  return (\n    elementString === '[object Window]' ||\n    // In Electron context the Window object serializes to [object global]\n    elementString === '[object global]'\n  );\n}\n","export function isNode(node: Object): node is Node {\n  return 'nodeType' in node;\n}\n","import {isWindow} from '../type-guards/isWindow';\nimport {isNode} from '../type-guards/isNode';\n\nexport function getWindow(target: Event['target']): typeof window {\n  if (!target) {\n    return window;\n  }\n\n  if (isWindow(target)) {\n    return target;\n  }\n\n  if (!isNode(target)) {\n    return window;\n  }\n\n  return target.ownerDocument?.defaultView ?? window;\n}\n","import {getWindow} from '../execution-context/getWindow';\n\nexport function isDocument(node: Node): node is Document {\n  const {Document} = getWindow(node);\n\n  return node instanceof Document;\n}\n","import {getWindow} from '../execution-context/getWindow';\n\nimport {isWindow} from './isWindow';\n\nexport function isHTMLElement(node: Node | Window): node is HTMLElement {\n  if (isWindow(node)) {\n    return false;\n  }\n\n  return node instanceof getWindow(node).HTMLElement;\n}\n","import {getWindow} from '../execution-context/getWindow';\n\nexport function isSVGElement(node: Node): node is SVGElement {\n  return node instanceof getWindow(node).SVGElement;\n}\n","import {\n  isWindow,\n  isHTMLElement,\n  isDocument,\n  isNode,\n  isSVGElement,\n} from '../type-guards';\n\nexport function getOwnerDocument(target: Event['target']): Document {\n  if (!target) {\n    return document;\n  }\n\n  if (isWindow(target)) {\n    return target.document;\n  }\n\n  if (!isNode(target)) {\n    return document;\n  }\n\n  if (isDocument(target)) {\n    return target;\n  }\n\n  if (isHTMLElement(target) || isSVGElement(target)) {\n    return target.ownerDocument;\n  }\n\n  return document;\n}\n","import {useEffect, useLayoutEffect} from 'react';\n\nimport {canUseDOM} from '../execution-context';\n\n/**\n * A hook that resolves to useEffect on the server and useLayoutEffect on the client\n * @param callback {function} Callback function that is invoked when the dependencies of the hook change\n */\nexport const useIsomorphicLayoutEffect = canUseDOM\n  ? useLayoutEffect\n  : useEffect;\n","import {useCallback, useRef} from 'react';\n\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect';\n\nexport function useEvent<T extends Function>(handler: T | undefined) {\n  const handlerRef = useRef<T | undefined>(handler);\n\n  useIsomorphicLayoutEffect(() => {\n    handlerRef.current = handler;\n  });\n\n  return useCallback(function (...args: any) {\n    return handlerRef.current?.(...args);\n  }, []);\n}\n","import {useCallback, useRef} from 'react';\n\nexport function useInterval() {\n  const intervalRef = useRef<number | null>(null);\n\n  const set = useCallback((listener: Function, duration: number) => {\n    intervalRef.current = setInterval(listener, duration);\n  }, []);\n\n  const clear = useCallback(() => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n\n  return [set, clear] as const;\n}\n","import {useRef} from 'react';\nimport type {DependencyList} from 'react';\n\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect';\n\nexport function useLatestValue<T extends any>(\n  value: T,\n  dependencies: DependencyList = [value]\n) {\n  const valueRef = useRef<T>(value);\n\n  useIsomorphicLayoutEffect(() => {\n    if (valueRef.current !== value) {\n      valueRef.current = value;\n    }\n  }, dependencies);\n\n  return valueRef;\n}\n","import {useMemo, useRef} from 'react';\n\nexport function useLazyMemo<T>(\n  callback: (prevValue: T | undefined) => T,\n  dependencies: any[]\n) {\n  const valueRef = useRef<T>();\n\n  return useMemo(\n    () => {\n      const newValue = callback(valueRef.current);\n      valueRef.current = newValue;\n\n      return newValue;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...dependencies]\n  );\n}\n","import {useRef, useCallback} from 'react';\n\nimport {useEvent} from './useEvent';\n\nexport function useNodeRef(\n  onChange?: (\n    newElement: HTMLElement | null,\n    previousElement: HTMLElement | null\n  ) => void\n) {\n  const onChangeHandler = useEvent(onChange);\n  const node = useRef<HTMLElement | null>(null);\n  const setNodeRef = useCallback(\n    (element: HTMLElement | null) => {\n      if (element !== node.current) {\n        onChangeHandler?.(element, node.current);\n      }\n\n      node.current = element;\n    },\n    //eslint-disable-next-line\n    []\n  );\n\n  return [node, setNodeRef] as const;\n}\n","import {useRef, useEffect} from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import {useMemo} from 'react';\n\nlet ids: Record<string, number> = {};\n\nexport function useUniqueId(prefix: string, value?: string) {\n  return useMemo(() => {\n    if (value) {\n      return value;\n    }\n\n    const id = ids[prefix] == null ? 0 : ids[prefix] + 1;\n    ids[prefix] = id;\n\n    return `${prefix}-${id}`;\n  }, [prefix, value]);\n}\n","function createAdjustmentFn(modifier: number) {\n  return <T extends Record<U, number>, U extends string>(\n    object: T,\n    ...adjustments: Partial<T>[]\n  ): T => {\n    return adjustments.reduce<T>(\n      (accumulator, adjustment) => {\n        const entries = Object.entries(adjustment) as [U, number][];\n\n        for (const [key, valueAdjustment] of entries) {\n          const value = accumulator[key];\n\n          if (value != null) {\n            accumulator[key] = (value + modifier * valueAdjustment) as T[U];\n          }\n        }\n\n        return accumulator;\n      },\n      {\n        ...object,\n      }\n    );\n  };\n}\n\nexport const add = createAdjustmentFn(1);\nexport const subtract = createAdjustmentFn(-1);\n","import {getWindow} from '../execution-context';\n\nexport function isKeyboardEvent(\n  event: Event | undefined | null\n): event is KeyboardEvent {\n  if (!event) {\n    return false;\n  }\n\n  const {KeyboardEvent} = getWindow(event.target);\n\n  return KeyboardEvent && event instanceof KeyboardEvent;\n}\n","import type {Coordinates} from './types';\nimport {isTouchEvent, hasViewportRelativeCoordinates} from '../event';\n\n/**\n * Returns the normalized x and y coordinates for mouse and touch events.\n */\nexport function getEventCoordinates(event: Event): Coordinates | null {\n  if (isTouchEvent(event)) {\n    if (event.touches && event.touches.length) {\n      const {clientX: x, clientY: y} = event.touches[0];\n\n      return {\n        x,\n        y,\n      };\n    } else if (event.changedTouches && event.changedTouches.length) {\n      const {clientX: x, clientY: y} = event.changedTouches[0];\n\n      return {\n        x,\n        y,\n      };\n    }\n  }\n\n  if (hasViewportRelativeCoordinates(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }\n\n  return null;\n}\n","import {getWindow} from '../execution-context';\n\nexport function isTouchEvent(\n  event: Event | undefined | null\n): event is TouchEvent {\n  if (!event) {\n    return false;\n  }\n\n  const {TouchEvent} = getWindow(event.target);\n\n  return TouchEvent && event instanceof TouchEvent;\n}\n","export function hasViewportRelativeCoordinates(\n  event: Event\n): event is Event & Pick<PointerEvent, 'clientX' | 'clientY'> {\n  return 'clientX' in event && 'clientY' in event;\n}\n","export type Transform = {\n  x: number;\n  y: number;\n  scaleX: number;\n  scaleY: number;\n};\n\nexport interface Transition {\n  property: string;\n  easing: string;\n  duration: number;\n}\n\nexport const CSS = Object.freeze({\n  Translate: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      const {x, y} = transform;\n\n      return `translate3d(${x ? Math.round(x) : 0}px, ${\n        y ? Math.round(y) : 0\n      }px, 0)`;\n    },\n  },\n  Scale: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      const {scaleX, scaleY} = transform;\n\n      return `scaleX(${scaleX}) scaleY(${scaleY})`;\n    },\n  },\n  Transform: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      return [\n        CSS.Translate.toString(transform),\n        CSS.Scale.toString(transform),\n      ].join(' ');\n    },\n  },\n  Transition: {\n    toString({property, duration, easing}: Transition) {\n      return `${property} ${duration}ms ${easing}`;\n    },\n  },\n});\n","const SELECTOR =\n  'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';\n\nexport function findFirstFocusableNode(\n  element: HTMLElement\n): HTMLElement | null {\n  if (element.matches(SELECTOR)) {\n    return element;\n  }\n\n  return element.querySelector(SELECTOR);\n}\n","/*!\n * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com\n * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\n * Copyright 2024 Fonticons, Inc.\n */\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && _setPrototypeOf(t, e);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _wrapRegExp() {\n  _wrapRegExp = function (e, r) {\n    return new BabelRegExp(e, void 0, r);\n  };\n  var e = RegExp.prototype,\n    r = new WeakMap();\n  function BabelRegExp(e, t, p) {\n    var o = RegExp(e, t);\n    return r.set(o, p || r.get(e)), _setPrototypeOf(o, BabelRegExp.prototype);\n  }\n  function buildGroups(e, t) {\n    var p = r.get(t);\n    return Object.keys(p).reduce(function (r, t) {\n      var o = p[t];\n      if (\"number\" == typeof o) r[t] = e[o];else {\n        for (var i = 0; void 0 === e[o[i]] && i + 1 < o.length;) i++;\n        r[t] = e[o[i]];\n      }\n      return r;\n    }, Object.create(null));\n  }\n  return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (r) {\n    var t = e.exec.call(this, r);\n    if (t) {\n      t.groups = buildGroups(t, this);\n      var p = t.indices;\n      p && (p.groups = buildGroups(p, this));\n    }\n    return t;\n  }, BabelRegExp.prototype[Symbol.replace] = function (t, p) {\n    if (\"string\" == typeof p) {\n      var o = r.get(this);\n      return e[Symbol.replace].call(this, t, p.replace(/\\$<([^>]+)>/g, function (e, r) {\n        var t = o[r];\n        return \"$\" + (Array.isArray(t) ? t.join(\"$\") : t);\n      }));\n    }\n    if (\"function\" == typeof p) {\n      var i = this;\n      return e[Symbol.replace].call(this, t, function () {\n        var e = arguments;\n        return \"object\" != typeof e[e.length - 1] && (e = [].slice.call(e)).push(buildGroups(e, i)), p.apply(this, e);\n      });\n    }\n    return e[Symbol.replace].call(this, t, p);\n  }, _wrapRegExp.apply(this, arguments);\n}\n\nconst noop = () => {};\nlet _WINDOW = {};\nlet _DOCUMENT = {};\nlet _MUTATION_OBSERVER = null;\nlet _PERFORMANCE = {\n  mark: noop,\n  measure: noop\n};\ntry {\n  if (typeof window !== 'undefined') _WINDOW = window;\n  if (typeof document !== 'undefined') _DOCUMENT = document;\n  if (typeof MutationObserver !== 'undefined') _MUTATION_OBSERVER = MutationObserver;\n  if (typeof performance !== 'undefined') _PERFORMANCE = performance;\n} catch (e) {}\nconst {\n  userAgent = ''\n} = _WINDOW.navigator || {};\nconst WINDOW = _WINDOW;\nconst DOCUMENT = _DOCUMENT;\nconst MUTATION_OBSERVER = _MUTATION_OBSERVER;\nconst PERFORMANCE = _PERFORMANCE;\nconst IS_BROWSER = !!WINDOW.document;\nconst IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';\nconst IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');\n\nvar p = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\\-\\ ]/,\n  g = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i;\nvar S = {\n    classic: {\n      fa: \"solid\",\n      fas: \"solid\",\n      \"fa-solid\": \"solid\",\n      far: \"regular\",\n      \"fa-regular\": \"regular\",\n      fal: \"light\",\n      \"fa-light\": \"light\",\n      fat: \"thin\",\n      \"fa-thin\": \"thin\",\n      fab: \"brands\",\n      \"fa-brands\": \"brands\"\n    },\n    duotone: {\n      fa: \"solid\",\n      fad: \"solid\",\n      \"fa-solid\": \"solid\",\n      \"fa-duotone\": \"solid\",\n      fadr: \"regular\",\n      \"fa-regular\": \"regular\",\n      fadl: \"light\",\n      \"fa-light\": \"light\",\n      fadt: \"thin\",\n      \"fa-thin\": \"thin\"\n    },\n    sharp: {\n      fa: \"solid\",\n      fass: \"solid\",\n      \"fa-solid\": \"solid\",\n      fasr: \"regular\",\n      \"fa-regular\": \"regular\",\n      fasl: \"light\",\n      \"fa-light\": \"light\",\n      fast: \"thin\",\n      \"fa-thin\": \"thin\"\n    },\n    \"sharp-duotone\": {\n      fa: \"solid\",\n      fasds: \"solid\",\n      \"fa-solid\": \"solid\",\n      fasdr: \"regular\",\n      \"fa-regular\": \"regular\",\n      fasdl: \"light\",\n      \"fa-light\": \"light\",\n      fasdt: \"thin\",\n      \"fa-thin\": \"thin\"\n    }\n  },\n  A = {\n    GROUP: \"duotone-group\",\n    SWAP_OPACITY: \"swap-opacity\",\n    PRIMARY: \"primary\",\n    SECONDARY: \"secondary\"\n  },\n  P = [\"fa-classic\", \"fa-duotone\", \"fa-sharp\", \"fa-sharp-duotone\"];\nvar s = \"classic\",\n  t = \"duotone\",\n  r = \"sharp\",\n  o = \"sharp-duotone\",\n  L = [s, t, r, o];\nvar G = {\n    classic: {\n      900: \"fas\",\n      400: \"far\",\n      normal: \"far\",\n      300: \"fal\",\n      100: \"fat\"\n    },\n    duotone: {\n      900: \"fad\",\n      400: \"fadr\",\n      300: \"fadl\",\n      100: \"fadt\"\n    },\n    sharp: {\n      900: \"fass\",\n      400: \"fasr\",\n      300: \"fasl\",\n      100: \"fast\"\n    },\n    \"sharp-duotone\": {\n      900: \"fasds\",\n      400: \"fasdr\",\n      300: \"fasdl\",\n      100: \"fasdt\"\n    }\n  };\nvar lt = {\n    \"Font Awesome 6 Free\": {\n      900: \"fas\",\n      400: \"far\"\n    },\n    \"Font Awesome 6 Pro\": {\n      900: \"fas\",\n      400: \"far\",\n      normal: \"far\",\n      300: \"fal\",\n      100: \"fat\"\n    },\n    \"Font Awesome 6 Brands\": {\n      400: \"fab\",\n      normal: \"fab\"\n    },\n    \"Font Awesome 6 Duotone\": {\n      900: \"fad\",\n      400: \"fadr\",\n      normal: \"fadr\",\n      300: \"fadl\",\n      100: \"fadt\"\n    },\n    \"Font Awesome 6 Sharp\": {\n      900: \"fass\",\n      400: \"fasr\",\n      normal: \"fasr\",\n      300: \"fasl\",\n      100: \"fast\"\n    },\n    \"Font Awesome 6 Sharp Duotone\": {\n      900: \"fasds\",\n      400: \"fasdr\",\n      normal: \"fasdr\",\n      300: \"fasdl\",\n      100: \"fasdt\"\n    }\n  };\nvar pt = new Map([[\"classic\", {\n    defaultShortPrefixId: \"fas\",\n    defaultStyleId: \"solid\",\n    styleIds: [\"solid\", \"regular\", \"light\", \"thin\", \"brands\"],\n    futureStyleIds: [],\n    defaultFontWeight: 900\n  }], [\"sharp\", {\n    defaultShortPrefixId: \"fass\",\n    defaultStyleId: \"solid\",\n    styleIds: [\"solid\", \"regular\", \"light\", \"thin\"],\n    futureStyleIds: [],\n    defaultFontWeight: 900\n  }], [\"duotone\", {\n    defaultShortPrefixId: \"fad\",\n    defaultStyleId: \"solid\",\n    styleIds: [\"solid\", \"regular\", \"light\", \"thin\"],\n    futureStyleIds: [],\n    defaultFontWeight: 900\n  }], [\"sharp-duotone\", {\n    defaultShortPrefixId: \"fasds\",\n    defaultStyleId: \"solid\",\n    styleIds: [\"solid\", \"regular\", \"light\", \"thin\"],\n    futureStyleIds: [],\n    defaultFontWeight: 900\n  }]]),\n  xt = {\n    classic: {\n      solid: \"fas\",\n      regular: \"far\",\n      light: \"fal\",\n      thin: \"fat\",\n      brands: \"fab\"\n    },\n    duotone: {\n      solid: \"fad\",\n      regular: \"fadr\",\n      light: \"fadl\",\n      thin: \"fadt\"\n    },\n    sharp: {\n      solid: \"fass\",\n      regular: \"fasr\",\n      light: \"fasl\",\n      thin: \"fast\"\n    },\n    \"sharp-duotone\": {\n      solid: \"fasds\",\n      regular: \"fasdr\",\n      light: \"fasdl\",\n      thin: \"fasdt\"\n    }\n  };\nvar Ft = [\"fak\", \"fa-kit\", \"fakd\", \"fa-kit-duotone\"],\n  St = {\n    kit: {\n      fak: \"kit\",\n      \"fa-kit\": \"kit\"\n    },\n    \"kit-duotone\": {\n      fakd: \"kit-duotone\",\n      \"fa-kit-duotone\": \"kit-duotone\"\n    }\n  },\n  At = [\"kit\"];\nvar Ct = {\n  kit: {\n    \"fa-kit\": \"fak\"\n  },\n  \"kit-duotone\": {\n    \"fa-kit-duotone\": \"fakd\"\n  }\n};\nvar Lt = [\"fak\", \"fakd\"],\n  Wt = {\n    kit: {\n      fak: \"fa-kit\"\n    },\n    \"kit-duotone\": {\n      fakd: \"fa-kit-duotone\"\n    }\n  };\nvar Et = {\n    kit: {\n      kit: \"fak\"\n    },\n    \"kit-duotone\": {\n      \"kit-duotone\": \"fakd\"\n    }\n  };\n\nvar t$1 = {\n    GROUP: \"duotone-group\",\n    SWAP_OPACITY: \"swap-opacity\",\n    PRIMARY: \"primary\",\n    SECONDARY: \"secondary\"\n  },\n  r$1 = [\"fa-classic\", \"fa-duotone\", \"fa-sharp\", \"fa-sharp-duotone\"];\nvar bt$1 = [\"fak\", \"fa-kit\", \"fakd\", \"fa-kit-duotone\"];\nvar Yt = {\n    \"Font Awesome Kit\": {\n      400: \"fak\",\n      normal: \"fak\"\n    },\n    \"Font Awesome Kit Duotone\": {\n      400: \"fakd\",\n      normal: \"fakd\"\n    }\n  };\nvar ua = {\n    classic: {\n      \"fa-brands\": \"fab\",\n      \"fa-duotone\": \"fad\",\n      \"fa-light\": \"fal\",\n      \"fa-regular\": \"far\",\n      \"fa-solid\": \"fas\",\n      \"fa-thin\": \"fat\"\n    },\n    duotone: {\n      \"fa-regular\": \"fadr\",\n      \"fa-light\": \"fadl\",\n      \"fa-thin\": \"fadt\"\n    },\n    sharp: {\n      \"fa-solid\": \"fass\",\n      \"fa-regular\": \"fasr\",\n      \"fa-light\": \"fasl\",\n      \"fa-thin\": \"fast\"\n    },\n    \"sharp-duotone\": {\n      \"fa-solid\": \"fasds\",\n      \"fa-regular\": \"fasdr\",\n      \"fa-light\": \"fasdl\",\n      \"fa-thin\": \"fasdt\"\n    }\n  },\n  I$1 = {\n    classic: [\"fas\", \"far\", \"fal\", \"fat\", \"fad\"],\n    duotone: [\"fadr\", \"fadl\", \"fadt\"],\n    sharp: [\"fass\", \"fasr\", \"fasl\", \"fast\"],\n    \"sharp-duotone\": [\"fasds\", \"fasdr\", \"fasdl\", \"fasdt\"]\n  },\n  ga = {\n    classic: {\n      fab: \"fa-brands\",\n      fad: \"fa-duotone\",\n      fal: \"fa-light\",\n      far: \"fa-regular\",\n      fas: \"fa-solid\",\n      fat: \"fa-thin\"\n    },\n    duotone: {\n      fadr: \"fa-regular\",\n      fadl: \"fa-light\",\n      fadt: \"fa-thin\"\n    },\n    sharp: {\n      fass: \"fa-solid\",\n      fasr: \"fa-regular\",\n      fasl: \"fa-light\",\n      fast: \"fa-thin\"\n    },\n    \"sharp-duotone\": {\n      fasds: \"fa-solid\",\n      fasdr: \"fa-regular\",\n      fasdl: \"fa-light\",\n      fasdt: \"fa-thin\"\n    }\n  },\n  x = [\"fa-solid\", \"fa-regular\", \"fa-light\", \"fa-thin\", \"fa-duotone\", \"fa-brands\"],\n  Ia = [\"fa\", \"fas\", \"far\", \"fal\", \"fat\", \"fad\", \"fadr\", \"fadl\", \"fadt\", \"fab\", \"fass\", \"fasr\", \"fasl\", \"fast\", \"fasds\", \"fasdr\", \"fasdl\", \"fasdt\", ...r$1, ...x],\n  m$1 = [\"solid\", \"regular\", \"light\", \"thin\", \"duotone\", \"brands\"],\n  c$1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n  F$1 = c$1.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]),\n  ma = [...Object.keys(I$1), ...m$1, \"2xs\", \"xs\", \"sm\", \"lg\", \"xl\", \"2xl\", \"beat\", \"border\", \"fade\", \"beat-fade\", \"bounce\", \"flip-both\", \"flip-horizontal\", \"flip-vertical\", \"flip\", \"fw\", \"inverse\", \"layers-counter\", \"layers-text\", \"layers\", \"li\", \"pull-left\", \"pull-right\", \"pulse\", \"rotate-180\", \"rotate-270\", \"rotate-90\", \"rotate-by\", \"shake\", \"spin-pulse\", \"spin-reverse\", \"spin\", \"stack-1x\", \"stack-2x\", \"stack\", \"ul\", t$1.GROUP, t$1.SWAP_OPACITY, t$1.PRIMARY, t$1.SECONDARY].concat(c$1.map(a => \"\".concat(a, \"x\"))).concat(F$1.map(a => \"w-\".concat(a)));\nvar wa = {\n    \"Font Awesome 5 Free\": {\n      900: \"fas\",\n      400: \"far\"\n    },\n    \"Font Awesome 5 Pro\": {\n      900: \"fas\",\n      400: \"far\",\n      normal: \"far\",\n      300: \"fal\"\n    },\n    \"Font Awesome 5 Brands\": {\n      400: \"fab\",\n      normal: \"fab\"\n    },\n    \"Font Awesome 5 Duotone\": {\n      900: \"fad\"\n    }\n  };\n\nconst NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';\nconst UNITS_IN_GRID = 16;\nconst DEFAULT_CSS_PREFIX = 'fa';\nconst DEFAULT_REPLACEMENT_CLASS = 'svg-inline--fa';\nconst DATA_FA_I2SVG = 'data-fa-i2svg';\nconst DATA_FA_PSEUDO_ELEMENT = 'data-fa-pseudo-element';\nconst DATA_FA_PSEUDO_ELEMENT_PENDING = 'data-fa-pseudo-element-pending';\nconst DATA_PREFIX = 'data-prefix';\nconst DATA_ICON = 'data-icon';\nconst HTML_CLASS_I2SVG_BASE_CLASS = 'fontawesome-i2svg';\nconst MUTATION_APPROACH_ASYNC = 'async';\nconst TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ['HTML', 'HEAD', 'STYLE', 'SCRIPT'];\nconst PRODUCTION = (() => {\n  try {\n    return process.env.NODE_ENV === 'production';\n  } catch (e$$1) {\n    return false;\n  }\n})();\nfunction familyProxy(obj) {\n  // Defaults to the classic family if family is not available\n  return new Proxy(obj, {\n    get(target, prop) {\n      return prop in target ? target[prop] : target[s];\n    }\n  });\n}\nconst _PREFIX_TO_STYLE = _objectSpread2({}, S);\n\n// We changed FACSSClassesToStyleId in the icons repo to be canonical and as such, \"classic\" family does not have any\n// duotone styles.  But we do still need duotone in _PREFIX_TO_STYLE below, so we are manually adding\n// {'fa-duotone': 'duotone'}\n_PREFIX_TO_STYLE[s] = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, {\n  'fa-duotone': 'duotone'\n}), S[s]), St['kit']), St['kit-duotone']);\nconst PREFIX_TO_STYLE = familyProxy(_PREFIX_TO_STYLE);\nconst _STYLE_TO_PREFIX = _objectSpread2({}, xt);\n\n// We changed FAStyleIdToShortPrefixId in the icons repo to be canonical and as such, \"classic\" family does not have any\n// duotone styles.  But we do still need duotone in _STYLE_TO_PREFIX below, so we are manually adding {duotone: 'fad'}\n_STYLE_TO_PREFIX[s] = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, {\n  duotone: 'fad'\n}), _STYLE_TO_PREFIX[s]), Et['kit']), Et['kit-duotone']);\nconst STYLE_TO_PREFIX = familyProxy(_STYLE_TO_PREFIX);\nconst _PREFIX_TO_LONG_STYLE = _objectSpread2({}, ga);\n_PREFIX_TO_LONG_STYLE[s] = _objectSpread2(_objectSpread2({}, _PREFIX_TO_LONG_STYLE[s]), Wt['kit']);\nconst PREFIX_TO_LONG_STYLE = familyProxy(_PREFIX_TO_LONG_STYLE);\nconst _LONG_STYLE_TO_PREFIX = _objectSpread2({}, ua);\n_LONG_STYLE_TO_PREFIX[s] = _objectSpread2(_objectSpread2({}, _LONG_STYLE_TO_PREFIX[s]), Ct['kit']);\nconst LONG_STYLE_TO_PREFIX = familyProxy(_LONG_STYLE_TO_PREFIX);\nconst ICON_SELECTION_SYNTAX_PATTERN = p; // eslint-disable-line no-useless-escape\n\nconst LAYERS_TEXT_CLASSNAME = 'fa-layers-text';\nconst FONT_FAMILY_PATTERN = g;\nconst _FONT_WEIGHT_TO_PREFIX = _objectSpread2({}, G);\nconst FONT_WEIGHT_TO_PREFIX = familyProxy(_FONT_WEIGHT_TO_PREFIX);\nconst ATTRIBUTES_WATCHED_FOR_MUTATION = ['class', 'data-prefix', 'data-icon', 'data-fa-transform', 'data-fa-mask'];\nconst DUOTONE_CLASSES = A;\nconst RESERVED_CLASSES = [...At, ...ma];\n\nconst initial = WINDOW.FontAwesomeConfig || {};\nfunction getAttrConfig(attr) {\n  var element = DOCUMENT.querySelector('script[' + attr + ']');\n  if (element) {\n    return element.getAttribute(attr);\n  }\n}\nfunction coerce(val) {\n  // Getting an empty string will occur if the attribute is set on the HTML tag but without a value\n  // We'll assume that this is an indication that it should be toggled to true\n  if (val === '') return true;\n  if (val === 'false') return false;\n  if (val === 'true') return true;\n  return val;\n}\nif (DOCUMENT && typeof DOCUMENT.querySelector === 'function') {\n  const attrs = [['data-family-prefix', 'familyPrefix'], ['data-css-prefix', 'cssPrefix'], ['data-family-default', 'familyDefault'], ['data-style-default', 'styleDefault'], ['data-replacement-class', 'replacementClass'], ['data-auto-replace-svg', 'autoReplaceSvg'], ['data-auto-add-css', 'autoAddCss'], ['data-auto-a11y', 'autoA11y'], ['data-search-pseudo-elements', 'searchPseudoElements'], ['data-observe-mutations', 'observeMutations'], ['data-mutate-approach', 'mutateApproach'], ['data-keep-original-source', 'keepOriginalSource'], ['data-measure-performance', 'measurePerformance'], ['data-show-missing-icons', 'showMissingIcons']];\n  attrs.forEach(_ref => {\n    let [attr, key] = _ref;\n    const val = coerce(getAttrConfig(attr));\n    if (val !== undefined && val !== null) {\n      initial[key] = val;\n    }\n  });\n}\nconst _default = {\n  styleDefault: 'solid',\n  familyDefault: s,\n  cssPrefix: DEFAULT_CSS_PREFIX,\n  replacementClass: DEFAULT_REPLACEMENT_CLASS,\n  autoReplaceSvg: true,\n  autoAddCss: true,\n  autoA11y: true,\n  searchPseudoElements: false,\n  observeMutations: true,\n  mutateApproach: 'async',\n  keepOriginalSource: true,\n  measurePerformance: false,\n  showMissingIcons: true\n};\n\n// familyPrefix is deprecated but we must still support it if present\nif (initial.familyPrefix) {\n  initial.cssPrefix = initial.familyPrefix;\n}\nconst _config = _objectSpread2(_objectSpread2({}, _default), initial);\nif (!_config.autoReplaceSvg) _config.observeMutations = false;\nconst config = {};\nObject.keys(_default).forEach(key => {\n  Object.defineProperty(config, key, {\n    enumerable: true,\n    set: function (val) {\n      _config[key] = val;\n      _onChangeCb.forEach(cb => cb(config));\n    },\n    get: function () {\n      return _config[key];\n    }\n  });\n});\n\n// familyPrefix is deprecated as of 6.2.0 and should be removed in 7.0.0\nObject.defineProperty(config, 'familyPrefix', {\n  enumerable: true,\n  set: function (val) {\n    _config.cssPrefix = val;\n    _onChangeCb.forEach(cb => cb(config));\n  },\n  get: function () {\n    return _config.cssPrefix;\n  }\n});\nWINDOW.FontAwesomeConfig = config;\nconst _onChangeCb = [];\nfunction onChange(cb) {\n  _onChangeCb.push(cb);\n  return () => {\n    _onChangeCb.splice(_onChangeCb.indexOf(cb), 1);\n  };\n}\n\nconst d$2 = UNITS_IN_GRID;\nconst meaninglessTransform = {\n  size: 16,\n  x: 0,\n  y: 0,\n  rotate: 0,\n  flipX: false,\n  flipY: false\n};\nfunction insertCss(css) {\n  if (!css || !IS_DOM) {\n    return;\n  }\n  const style = DOCUMENT.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = css;\n  const headChildren = DOCUMENT.head.childNodes;\n  let beforeChild = null;\n  for (let i = headChildren.length - 1; i > -1; i--) {\n    const child = headChildren[i];\n    const tagName = (child.tagName || '').toUpperCase();\n    if (['STYLE', 'LINK'].indexOf(tagName) > -1) {\n      beforeChild = child;\n    }\n  }\n  DOCUMENT.head.insertBefore(style, beforeChild);\n  return css;\n}\nconst idPool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nfunction nextUniqueId() {\n  let size = 12;\n  let id = '';\n  while (size-- > 0) {\n    id += idPool[Math.random() * 62 | 0];\n  }\n  return id;\n}\nfunction toArray(obj) {\n  const array = [];\n  for (let i = (obj || []).length >>> 0; i--;) {\n    array[i] = obj[i];\n  }\n  return array;\n}\nfunction classArray(node) {\n  if (node.classList) {\n    return toArray(node.classList);\n  } else {\n    return (node.getAttribute('class') || '').split(' ').filter(i => i);\n  }\n}\nfunction htmlEscape(str) {\n  return \"\".concat(str).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\nfunction joinAttributes(attributes) {\n  return Object.keys(attributes || {}).reduce((acc, attributeName) => {\n    return acc + \"\".concat(attributeName, \"=\\\"\").concat(htmlEscape(attributes[attributeName]), \"\\\" \");\n  }, '').trim();\n}\nfunction joinStyles(styles) {\n  return Object.keys(styles || {}).reduce((acc, styleName) => {\n    return acc + \"\".concat(styleName, \": \").concat(styles[styleName].trim(), \";\");\n  }, '');\n}\nfunction transformIsMeaningful(transform) {\n  return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;\n}\nfunction transformForSvg(_ref) {\n  let {\n    transform,\n    containerWidth,\n    iconWidth\n  } = _ref;\n  const outer = {\n    transform: \"translate(\".concat(containerWidth / 2, \" 256)\")\n  };\n  const innerTranslate = \"translate(\".concat(transform.x * 32, \", \").concat(transform.y * 32, \") \");\n  const innerScale = \"scale(\".concat(transform.size / 16 * (transform.flipX ? -1 : 1), \", \").concat(transform.size / 16 * (transform.flipY ? -1 : 1), \") \");\n  const innerRotate = \"rotate(\".concat(transform.rotate, \" 0 0)\");\n  const inner = {\n    transform: \"\".concat(innerTranslate, \" \").concat(innerScale, \" \").concat(innerRotate)\n  };\n  const path = {\n    transform: \"translate(\".concat(iconWidth / 2 * -1, \" -256)\")\n  };\n  return {\n    outer,\n    inner,\n    path\n  };\n}\nfunction transformForCss(_ref2) {\n  let {\n    transform,\n    width = UNITS_IN_GRID,\n    height = UNITS_IN_GRID,\n    startCentered = false\n  } = _ref2;\n  let val = '';\n  if (startCentered && IS_IE) {\n    val += \"translate(\".concat(transform.x / d$2 - width / 2, \"em, \").concat(transform.y / d$2 - height / 2, \"em) \");\n  } else if (startCentered) {\n    val += \"translate(calc(-50% + \".concat(transform.x / d$2, \"em), calc(-50% + \").concat(transform.y / d$2, \"em)) \");\n  } else {\n    val += \"translate(\".concat(transform.x / d$2, \"em, \").concat(transform.y / d$2, \"em) \");\n  }\n  val += \"scale(\".concat(transform.size / d$2 * (transform.flipX ? -1 : 1), \", \").concat(transform.size / d$2 * (transform.flipY ? -1 : 1), \") \");\n  val += \"rotate(\".concat(transform.rotate, \"deg) \");\n  return val;\n}\n\nvar baseStyles = \":root, :host {\\n  --fa-font-solid: normal 900 1em/1 \\\"Font Awesome 6 Free\\\";\\n  --fa-font-regular: normal 400 1em/1 \\\"Font Awesome 6 Free\\\";\\n  --fa-font-light: normal 300 1em/1 \\\"Font Awesome 6 Pro\\\";\\n  --fa-font-thin: normal 100 1em/1 \\\"Font Awesome 6 Pro\\\";\\n  --fa-font-duotone: normal 900 1em/1 \\\"Font Awesome 6 Duotone\\\";\\n  --fa-font-duotone-regular: normal 400 1em/1 \\\"Font Awesome 6 Duotone\\\";\\n  --fa-font-duotone-light: normal 300 1em/1 \\\"Font Awesome 6 Duotone\\\";\\n  --fa-font-duotone-thin: normal 100 1em/1 \\\"Font Awesome 6 Duotone\\\";\\n  --fa-font-brands: normal 400 1em/1 \\\"Font Awesome 6 Brands\\\";\\n  --fa-font-sharp-solid: normal 900 1em/1 \\\"Font Awesome 6 Sharp\\\";\\n  --fa-font-sharp-regular: normal 400 1em/1 \\\"Font Awesome 6 Sharp\\\";\\n  --fa-font-sharp-light: normal 300 1em/1 \\\"Font Awesome 6 Sharp\\\";\\n  --fa-font-sharp-thin: normal 100 1em/1 \\\"Font Awesome 6 Sharp\\\";\\n  --fa-font-sharp-duotone-solid: normal 900 1em/1 \\\"Font Awesome 6 Sharp Duotone\\\";\\n  --fa-font-sharp-duotone-regular: normal 400 1em/1 \\\"Font Awesome 6 Sharp Duotone\\\";\\n  --fa-font-sharp-duotone-light: normal 300 1em/1 \\\"Font Awesome 6 Sharp Duotone\\\";\\n  --fa-font-sharp-duotone-thin: normal 100 1em/1 \\\"Font Awesome 6 Sharp Duotone\\\";\\n}\\n\\nsvg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {\\n  overflow: visible;\\n  box-sizing: content-box;\\n}\\n\\n.svg-inline--fa {\\n  display: var(--fa-display, inline-block);\\n  height: 1em;\\n  overflow: visible;\\n  vertical-align: -0.125em;\\n}\\n.svg-inline--fa.fa-2xs {\\n  vertical-align: 0.1em;\\n}\\n.svg-inline--fa.fa-xs {\\n  vertical-align: 0em;\\n}\\n.svg-inline--fa.fa-sm {\\n  vertical-align: -0.0714285705em;\\n}\\n.svg-inline--fa.fa-lg {\\n  vertical-align: -0.2em;\\n}\\n.svg-inline--fa.fa-xl {\\n  vertical-align: -0.25em;\\n}\\n.svg-inline--fa.fa-2xl {\\n  vertical-align: -0.3125em;\\n}\\n.svg-inline--fa.fa-pull-left {\\n  margin-right: var(--fa-pull-margin, 0.3em);\\n  width: auto;\\n}\\n.svg-inline--fa.fa-pull-right {\\n  margin-left: var(--fa-pull-margin, 0.3em);\\n  width: auto;\\n}\\n.svg-inline--fa.fa-li {\\n  width: var(--fa-li-width, 2em);\\n  top: 0.25em;\\n}\\n.svg-inline--fa.fa-fw {\\n  width: var(--fa-fw-width, 1.25em);\\n}\\n\\n.fa-layers svg.svg-inline--fa {\\n  bottom: 0;\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n}\\n\\n.fa-layers-counter, .fa-layers-text {\\n  display: inline-block;\\n  position: absolute;\\n  text-align: center;\\n}\\n\\n.fa-layers {\\n  display: inline-block;\\n  height: 1em;\\n  position: relative;\\n  text-align: center;\\n  vertical-align: -0.125em;\\n  width: 1em;\\n}\\n.fa-layers svg.svg-inline--fa {\\n  transform-origin: center center;\\n}\\n\\n.fa-layers-text {\\n  left: 50%;\\n  top: 50%;\\n  transform: translate(-50%, -50%);\\n  transform-origin: center center;\\n}\\n\\n.fa-layers-counter {\\n  background-color: var(--fa-counter-background-color, #ff253a);\\n  border-radius: var(--fa-counter-border-radius, 1em);\\n  box-sizing: border-box;\\n  color: var(--fa-inverse, #fff);\\n  line-height: var(--fa-counter-line-height, 1);\\n  max-width: var(--fa-counter-max-width, 5em);\\n  min-width: var(--fa-counter-min-width, 1.5em);\\n  overflow: hidden;\\n  padding: var(--fa-counter-padding, 0.25em 0.5em);\\n  right: var(--fa-right, 0);\\n  text-overflow: ellipsis;\\n  top: var(--fa-top, 0);\\n  transform: scale(var(--fa-counter-scale, 0.25));\\n  transform-origin: top right;\\n}\\n\\n.fa-layers-bottom-right {\\n  bottom: var(--fa-bottom, 0);\\n  right: var(--fa-right, 0);\\n  top: auto;\\n  transform: scale(var(--fa-layers-scale, 0.25));\\n  transform-origin: bottom right;\\n}\\n\\n.fa-layers-bottom-left {\\n  bottom: var(--fa-bottom, 0);\\n  left: var(--fa-left, 0);\\n  right: auto;\\n  top: auto;\\n  transform: scale(var(--fa-layers-scale, 0.25));\\n  transform-origin: bottom left;\\n}\\n\\n.fa-layers-top-right {\\n  top: var(--fa-top, 0);\\n  right: var(--fa-right, 0);\\n  transform: scale(var(--fa-layers-scale, 0.25));\\n  transform-origin: top right;\\n}\\n\\n.fa-layers-top-left {\\n  left: var(--fa-left, 0);\\n  right: auto;\\n  top: var(--fa-top, 0);\\n  transform: scale(var(--fa-layers-scale, 0.25));\\n  transform-origin: top left;\\n}\\n\\n.fa-1x {\\n  font-size: 1em;\\n}\\n\\n.fa-2x {\\n  font-size: 2em;\\n}\\n\\n.fa-3x {\\n  font-size: 3em;\\n}\\n\\n.fa-4x {\\n  font-size: 4em;\\n}\\n\\n.fa-5x {\\n  font-size: 5em;\\n}\\n\\n.fa-6x {\\n  font-size: 6em;\\n}\\n\\n.fa-7x {\\n  font-size: 7em;\\n}\\n\\n.fa-8x {\\n  font-size: 8em;\\n}\\n\\n.fa-9x {\\n  font-size: 9em;\\n}\\n\\n.fa-10x {\\n  font-size: 10em;\\n}\\n\\n.fa-2xs {\\n  font-size: 0.625em;\\n  line-height: 0.1em;\\n  vertical-align: 0.225em;\\n}\\n\\n.fa-xs {\\n  font-size: 0.75em;\\n  line-height: 0.0833333337em;\\n  vertical-align: 0.125em;\\n}\\n\\n.fa-sm {\\n  font-size: 0.875em;\\n  line-height: 0.0714285718em;\\n  vertical-align: 0.0535714295em;\\n}\\n\\n.fa-lg {\\n  font-size: 1.25em;\\n  line-height: 0.05em;\\n  vertical-align: -0.075em;\\n}\\n\\n.fa-xl {\\n  font-size: 1.5em;\\n  line-height: 0.0416666682em;\\n  vertical-align: -0.125em;\\n}\\n\\n.fa-2xl {\\n  font-size: 2em;\\n  line-height: 0.03125em;\\n  vertical-align: -0.1875em;\\n}\\n\\n.fa-fw {\\n  text-align: center;\\n  width: 1.25em;\\n}\\n\\n.fa-ul {\\n  list-style-type: none;\\n  margin-left: var(--fa-li-margin, 2.5em);\\n  padding-left: 0;\\n}\\n.fa-ul > li {\\n  position: relative;\\n}\\n\\n.fa-li {\\n  left: calc(-1 * var(--fa-li-width, 2em));\\n  position: absolute;\\n  text-align: center;\\n  width: var(--fa-li-width, 2em);\\n  line-height: inherit;\\n}\\n\\n.fa-border {\\n  border-color: var(--fa-border-color, #eee);\\n  border-radius: var(--fa-border-radius, 0.1em);\\n  border-style: var(--fa-border-style, solid);\\n  border-width: var(--fa-border-width, 0.08em);\\n  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);\\n}\\n\\n.fa-pull-left {\\n  float: left;\\n  margin-right: var(--fa-pull-margin, 0.3em);\\n}\\n\\n.fa-pull-right {\\n  float: right;\\n  margin-left: var(--fa-pull-margin, 0.3em);\\n}\\n\\n.fa-beat {\\n  animation-name: fa-beat;\\n  animation-delay: var(--fa-animation-delay, 0s);\\n  animation-direction: var(--fa-animation-direction, normal);\\n  animation-duration: var(--fa-animation-duration, 1s);\\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\\n  animation-timing-function: var(--fa-animation-timing, ease-in-out);\\n}\\n\\n.fa-bounce {\\n  animation-name: fa-bounce;\\n  animation-delay: var(--fa-animation-delay, 0s);\\n  animation-direction: var(--fa-animation-direction, normal);\\n  animation-duration: var(--fa-animation-duration, 1s);\\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\\n}\\n\\n.fa-fade {\\n  animation-name: fa-fade;\\n  animation-delay: var(--fa-animation-delay, 0s);\\n  animation-direction: var(--fa-animation-direction, normal);\\n  animation-duration: var(--fa-animation-duration, 1s);\\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\\n}\\n\\n.fa-beat-fade {\\n  animation-name: fa-beat-fade;\\n  animation-delay: var(--fa-animation-delay, 0s);\\n  animation-direction: var(--fa-animation-direction, normal);\\n  animation-duration: var(--fa-animation-duration, 1s);\\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\\n}\\n\\n.fa-flip {\\n  animation-name: fa-flip;\\n  animation-delay: var(--fa-animation-delay, 0s);\\n  animation-direction: var(--fa-animation-direction, normal);\\n  animation-duration: var(--fa-animation-duration, 1s);\\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\\n  animation-timing-function: var(--fa-animation-timing, ease-in-out);\\n}\\n\\n.fa-shake {\\n  animation-name: fa-shake;\\n  animation-delay: var(--fa-animation-delay, 0s);\\n  animation-direction: var(--fa-animation-direction, normal);\\n  animation-duration: var(--fa-animation-duration, 1s);\\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\\n  animation-timing-function: var(--fa-animation-timing, linear);\\n}\\n\\n.fa-spin {\\n  animation-name: fa-spin;\\n  animation-delay: var(--fa-animation-delay, 0s);\\n  animation-direction: var(--fa-animation-direction, normal);\\n  animation-duration: var(--fa-animation-duration, 2s);\\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\\n  animation-timing-function: var(--fa-animation-timing, linear);\\n}\\n\\n.fa-spin-reverse {\\n  --fa-animation-direction: reverse;\\n}\\n\\n.fa-pulse,\\n.fa-spin-pulse {\\n  animation-name: fa-spin;\\n  animation-direction: var(--fa-animation-direction, normal);\\n  animation-duration: var(--fa-animation-duration, 1s);\\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\\n  animation-timing-function: var(--fa-animation-timing, steps(8));\\n}\\n\\n@media (prefers-reduced-motion: reduce) {\\n  .fa-beat,\\n.fa-bounce,\\n.fa-fade,\\n.fa-beat-fade,\\n.fa-flip,\\n.fa-pulse,\\n.fa-shake,\\n.fa-spin,\\n.fa-spin-pulse {\\n    animation-delay: -1ms;\\n    animation-duration: 1ms;\\n    animation-iteration-count: 1;\\n    transition-delay: 0s;\\n    transition-duration: 0s;\\n  }\\n}\\n@keyframes fa-beat {\\n  0%, 90% {\\n    transform: scale(1);\\n  }\\n  45% {\\n    transform: scale(var(--fa-beat-scale, 1.25));\\n  }\\n}\\n@keyframes fa-bounce {\\n  0% {\\n    transform: scale(1, 1) translateY(0);\\n  }\\n  10% {\\n    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\\n  }\\n  30% {\\n    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\\n  }\\n  50% {\\n    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\\n  }\\n  57% {\\n    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\\n  }\\n  64% {\\n    transform: scale(1, 1) translateY(0);\\n  }\\n  100% {\\n    transform: scale(1, 1) translateY(0);\\n  }\\n}\\n@keyframes fa-fade {\\n  50% {\\n    opacity: var(--fa-fade-opacity, 0.4);\\n  }\\n}\\n@keyframes fa-beat-fade {\\n  0%, 100% {\\n    opacity: var(--fa-beat-fade-opacity, 0.4);\\n    transform: scale(1);\\n  }\\n  50% {\\n    opacity: 1;\\n    transform: scale(var(--fa-beat-fade-scale, 1.125));\\n  }\\n}\\n@keyframes fa-flip {\\n  50% {\\n    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\\n  }\\n}\\n@keyframes fa-shake {\\n  0% {\\n    transform: rotate(-15deg);\\n  }\\n  4% {\\n    transform: rotate(15deg);\\n  }\\n  8%, 24% {\\n    transform: rotate(-18deg);\\n  }\\n  12%, 28% {\\n    transform: rotate(18deg);\\n  }\\n  16% {\\n    transform: rotate(-22deg);\\n  }\\n  20% {\\n    transform: rotate(22deg);\\n  }\\n  32% {\\n    transform: rotate(-12deg);\\n  }\\n  36% {\\n    transform: rotate(12deg);\\n  }\\n  40%, 100% {\\n    transform: rotate(0deg);\\n  }\\n}\\n@keyframes fa-spin {\\n  0% {\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n.fa-rotate-90 {\\n  transform: rotate(90deg);\\n}\\n\\n.fa-rotate-180 {\\n  transform: rotate(180deg);\\n}\\n\\n.fa-rotate-270 {\\n  transform: rotate(270deg);\\n}\\n\\n.fa-flip-horizontal {\\n  transform: scale(-1, 1);\\n}\\n\\n.fa-flip-vertical {\\n  transform: scale(1, -1);\\n}\\n\\n.fa-flip-both,\\n.fa-flip-horizontal.fa-flip-vertical {\\n  transform: scale(-1, -1);\\n}\\n\\n.fa-rotate-by {\\n  transform: rotate(var(--fa-rotate-angle, 0));\\n}\\n\\n.fa-stack {\\n  display: inline-block;\\n  vertical-align: middle;\\n  height: 2em;\\n  position: relative;\\n  width: 2.5em;\\n}\\n\\n.fa-stack-1x,\\n.fa-stack-2x {\\n  bottom: 0;\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  z-index: var(--fa-stack-z-index, auto);\\n}\\n\\n.svg-inline--fa.fa-stack-1x {\\n  height: 1em;\\n  width: 1.25em;\\n}\\n.svg-inline--fa.fa-stack-2x {\\n  height: 2em;\\n  width: 2.5em;\\n}\\n\\n.fa-inverse {\\n  color: var(--fa-inverse, #fff);\\n}\\n\\n.sr-only,\\n.fa-sr-only {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border-width: 0;\\n}\\n\\n.sr-only-focusable:not(:focus),\\n.fa-sr-only-focusable:not(:focus) {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border-width: 0;\\n}\\n\\n.svg-inline--fa .fa-primary {\\n  fill: var(--fa-primary-color, currentColor);\\n  opacity: var(--fa-primary-opacity, 1);\\n}\\n\\n.svg-inline--fa .fa-secondary {\\n  fill: var(--fa-secondary-color, currentColor);\\n  opacity: var(--fa-secondary-opacity, 0.4);\\n}\\n\\n.svg-inline--fa.fa-swap-opacity .fa-primary {\\n  opacity: var(--fa-secondary-opacity, 0.4);\\n}\\n\\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\\n  opacity: var(--fa-primary-opacity, 1);\\n}\\n\\n.svg-inline--fa mask .fa-primary,\\n.svg-inline--fa mask .fa-secondary {\\n  fill: black;\\n}\";\n\nfunction css() {\n  const dcp = DEFAULT_CSS_PREFIX;\n  const drc = DEFAULT_REPLACEMENT_CLASS;\n  const fp = config.cssPrefix;\n  const rc = config.replacementClass;\n  let s = baseStyles;\n  if (fp !== dcp || rc !== drc) {\n    const dPatt = new RegExp(\"\\\\.\".concat(dcp, \"\\\\-\"), 'g');\n    const customPropPatt = new RegExp(\"\\\\--\".concat(dcp, \"\\\\-\"), 'g');\n    const rPatt = new RegExp(\"\\\\.\".concat(drc), 'g');\n    s = s.replace(dPatt, \".\".concat(fp, \"-\")).replace(customPropPatt, \"--\".concat(fp, \"-\")).replace(rPatt, \".\".concat(rc));\n  }\n  return s;\n}\nlet _cssInserted = false;\nfunction ensureCss() {\n  if (config.autoAddCss && !_cssInserted) {\n    insertCss(css());\n    _cssInserted = true;\n  }\n}\nvar InjectCSS = {\n  mixout() {\n    return {\n      dom: {\n        css,\n        insertCss: ensureCss\n      }\n    };\n  },\n  hooks() {\n    return {\n      beforeDOMElementCreation() {\n        ensureCss();\n      },\n      beforeI2svg() {\n        ensureCss();\n      }\n    };\n  }\n};\n\nconst w = WINDOW || {};\nif (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};\nif (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};\nif (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};\nif (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];\nvar namespace = w[NAMESPACE_IDENTIFIER];\n\nconst functions = [];\nconst listener = function () {\n  DOCUMENT.removeEventListener('DOMContentLoaded', listener);\n  loaded = 1;\n  functions.map(fn => fn());\n};\nlet loaded = false;\nif (IS_DOM) {\n  loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);\n  if (!loaded) DOCUMENT.addEventListener('DOMContentLoaded', listener);\n}\nfunction domready (fn) {\n  if (!IS_DOM) return;\n  loaded ? setTimeout(fn, 0) : functions.push(fn);\n}\n\nfunction toHtml(abstractNodes) {\n  const {\n    tag,\n    attributes = {},\n    children = []\n  } = abstractNodes;\n  if (typeof abstractNodes === 'string') {\n    return htmlEscape(abstractNodes);\n  } else {\n    return \"<\".concat(tag, \" \").concat(joinAttributes(attributes), \">\").concat(children.map(toHtml).join(''), \"</\").concat(tag, \">\");\n  }\n}\n\nfunction iconFromMapping(mapping, prefix, iconName) {\n  if (mapping && mapping[prefix] && mapping[prefix][iconName]) {\n    return {\n      prefix,\n      iconName,\n      icon: mapping[prefix][iconName]\n    };\n  }\n}\n\n/**\n * Internal helper to bind a function known to have 4 arguments\n * to a given context.\n */\nvar bindInternal4 = function bindInternal4(func, thisContext) {\n  return function (a, b, c, d) {\n    return func.call(thisContext, a, b, c, d);\n  };\n};\n\n/**\n * # Reduce\n *\n * A fast object `.reduce()` implementation.\n *\n * @param  {Object}   subject      The object to reduce over.\n * @param  {Function} fn           The reducer function.\n * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].\n * @param  {Object}   thisContext  The context for the reducer.\n * @return {mixed}                 The final result.\n */\nvar reduce = function fastReduceObject(subject, fn, initialValue, thisContext) {\n  var keys = Object.keys(subject),\n    length = keys.length,\n    iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,\n    i,\n    key,\n    result;\n  if (initialValue === undefined) {\n    i = 1;\n    result = subject[keys[0]];\n  } else {\n    i = 0;\n    result = initialValue;\n  }\n  for (; i < length; i++) {\n    key = keys[i];\n    result = iterator(result, subject[key], key, subject);\n  }\n  return result;\n};\n\n/**\n * ucs2decode() and codePointAt() are both works of Mathias Bynens and licensed under MIT\n *\n * Copyright Mathias Bynens <https://mathiasbynens.be/>\n\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nfunction ucs2decode(string) {\n  const output = [];\n  let counter = 0;\n  const length = string.length;\n  while (counter < length) {\n    const value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      const extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) {\n        // eslint-disable-line eqeqeq\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\nfunction toHex(unicode) {\n  const decoded = ucs2decode(unicode);\n  return decoded.length === 1 ? decoded[0].toString(16) : null;\n}\nfunction codePointAt(string, index) {\n  const size = string.length;\n  let first = string.charCodeAt(index);\n  let second;\n  if (first >= 0xD800 && first <= 0xDBFF && size > index + 1) {\n    second = string.charCodeAt(index + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\nfunction normalizeIcons(icons) {\n  return Object.keys(icons).reduce((acc, iconName) => {\n    const icon = icons[iconName];\n    const expanded = !!icon.icon;\n    if (expanded) {\n      acc[icon.iconName] = icon.icon;\n    } else {\n      acc[iconName] = icon;\n    }\n    return acc;\n  }, {});\n}\nfunction defineIcons(prefix, icons) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const {\n    skipHooks = false\n  } = params;\n  const normalized = normalizeIcons(icons);\n  if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {\n    namespace.hooks.addPack(prefix, normalizeIcons(icons));\n  } else {\n    namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), normalized);\n  }\n\n  /**\n   * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction\n   * of new styles we needed to differentiate between them. Prefix `fa` is now an alias\n   * for `fas` so we'll ease the upgrade process for our users by automatically defining\n   * this as well.\n   */\n  if (prefix === 'fas') {\n    defineIcons('fa', icons);\n  }\n}\n\nconst duotonePathRe = [/*#__PURE__*/_wrapRegExp(/path d=\"([^\"]+)\".*path d=\"([^\"]+)\"/, {\n  d1: 1,\n  d2: 2\n}), /*#__PURE__*/_wrapRegExp(/path class=\"([^\"]+)\".*d=\"([^\"]+)\".*path class=\"([^\"]+)\".*d=\"([^\"]+)\"/, {\n  cls1: 1,\n  d1: 2,\n  cls2: 3,\n  d2: 4\n}), /*#__PURE__*/_wrapRegExp(/path class=\"([^\"]+)\".*d=\"([^\"]+)\"/, {\n  cls1: 1,\n  d1: 2\n})];\n\nconst {\n  styles,\n  shims\n} = namespace;\nconst FAMILY_NAMES = Object.keys(PREFIX_TO_LONG_STYLE);\nconst PREFIXES_FOR_FAMILY = FAMILY_NAMES.reduce((acc, familyId) => {\n  acc[familyId] = Object.keys(PREFIX_TO_LONG_STYLE[familyId]);\n  return acc;\n}, {});\nlet _defaultUsablePrefix = null;\nlet _byUnicode = {};\nlet _byLigature = {};\nlet _byOldName = {};\nlet _byOldUnicode = {};\nlet _byAlias = {};\nfunction isReserved(name) {\n  return ~RESERVED_CLASSES.indexOf(name);\n}\nfunction getIconName(cssPrefix, cls) {\n  const parts = cls.split('-');\n  const prefix = parts[0];\n  const iconName = parts.slice(1).join('-');\n  if (prefix === cssPrefix && iconName !== '' && !isReserved(iconName)) {\n    return iconName;\n  } else {\n    return null;\n  }\n}\nconst build = () => {\n  const lookup = reducer => {\n    return reduce(styles, (o$$1, style, prefix) => {\n      o$$1[prefix] = reduce(style, reducer, {});\n      return o$$1;\n    }, {});\n  };\n  _byUnicode = lookup((acc, icon, iconName) => {\n    if (icon[3]) {\n      acc[icon[3]] = iconName;\n    }\n    if (icon[2]) {\n      const aliases = icon[2].filter(a$$1 => {\n        return typeof a$$1 === 'number';\n      });\n      aliases.forEach(alias => {\n        acc[alias.toString(16)] = iconName;\n      });\n    }\n    return acc;\n  });\n  _byLigature = lookup((acc, icon, iconName) => {\n    acc[iconName] = iconName;\n    if (icon[2]) {\n      const aliases = icon[2].filter(a$$1 => {\n        return typeof a$$1 === 'string';\n      });\n      aliases.forEach(alias => {\n        acc[alias] = iconName;\n      });\n    }\n    return acc;\n  });\n  _byAlias = lookup((acc, icon, iconName) => {\n    const aliases = icon[2];\n    acc[iconName] = iconName;\n    aliases.forEach(alias => {\n      acc[alias] = iconName;\n    });\n    return acc;\n  });\n\n  // If we have a Kit, we can't determine if regular is available since we\n  // could be auto-fetching it. We'll have to assume that it is available.\n  const hasRegular = 'far' in styles || config.autoFetchSvg;\n  const shimLookups = reduce(shims, (acc, shim) => {\n    const maybeNameMaybeUnicode = shim[0];\n    let prefix = shim[1];\n    const iconName = shim[2];\n    if (prefix === 'far' && !hasRegular) {\n      prefix = 'fas';\n    }\n    if (typeof maybeNameMaybeUnicode === 'string') {\n      acc.names[maybeNameMaybeUnicode] = {\n        prefix,\n        iconName\n      };\n    }\n    if (typeof maybeNameMaybeUnicode === 'number') {\n      acc.unicodes[maybeNameMaybeUnicode.toString(16)] = {\n        prefix,\n        iconName\n      };\n    }\n    return acc;\n  }, {\n    names: {},\n    unicodes: {}\n  });\n  _byOldName = shimLookups.names;\n  _byOldUnicode = shimLookups.unicodes;\n  _defaultUsablePrefix = getCanonicalPrefix(config.styleDefault, {\n    family: config.familyDefault\n  });\n};\nonChange(c$$1 => {\n  _defaultUsablePrefix = getCanonicalPrefix(c$$1.styleDefault, {\n    family: config.familyDefault\n  });\n});\nbuild();\nfunction byUnicode(prefix, unicode) {\n  return (_byUnicode[prefix] || {})[unicode];\n}\nfunction byLigature(prefix, ligature) {\n  return (_byLigature[prefix] || {})[ligature];\n}\nfunction byAlias(prefix, alias) {\n  return (_byAlias[prefix] || {})[alias];\n}\nfunction byOldName(name) {\n  return _byOldName[name] || {\n    prefix: null,\n    iconName: null\n  };\n}\nfunction byOldUnicode(unicode) {\n  const oldUnicode = _byOldUnicode[unicode];\n  const newUnicode = byUnicode('fas', unicode);\n  return oldUnicode || (newUnicode ? {\n    prefix: 'fas',\n    iconName: newUnicode\n  } : null) || {\n    prefix: null,\n    iconName: null\n  };\n}\nfunction getDefaultUsablePrefix() {\n  return _defaultUsablePrefix;\n}\nconst emptyCanonicalIcon = () => {\n  return {\n    prefix: null,\n    iconName: null,\n    rest: []\n  };\n};\nfunction getFamilyId(values) {\n  let family = s;\n  const famProps = FAMILY_NAMES.reduce((acc, familyId) => {\n    acc[familyId] = \"\".concat(config.cssPrefix, \"-\").concat(familyId);\n    return acc;\n  }, {});\n  L.forEach(familyId => {\n    if (values.includes(famProps[familyId]) || values.some(v$$1 => PREFIXES_FOR_FAMILY[familyId].includes(v$$1))) {\n      family = familyId;\n    }\n  });\n  return family;\n}\nfunction getCanonicalPrefix(styleOrPrefix) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    family = s\n  } = params;\n  const style = PREFIX_TO_STYLE[family][styleOrPrefix];\n\n  // handles the exception of passing in only a family of 'duotone' with no style\n  if (family === t && !styleOrPrefix) {\n    return 'fad';\n  }\n  const prefix = STYLE_TO_PREFIX[family][styleOrPrefix] || STYLE_TO_PREFIX[family][style];\n  const defined = styleOrPrefix in namespace.styles ? styleOrPrefix : null;\n  const result = prefix || defined || null;\n  return result;\n}\nfunction moveNonFaClassesToRest(classNames) {\n  let rest = [];\n  let iconName = null;\n  classNames.forEach(cls => {\n    const result = getIconName(config.cssPrefix, cls);\n    if (result) {\n      iconName = result;\n    } else if (cls) {\n      rest.push(cls);\n    }\n  });\n  return {\n    iconName,\n    rest\n  };\n}\nfunction sortedUniqueValues(arr) {\n  return arr.sort().filter((value, index, arr) => {\n    return arr.indexOf(value) === index;\n  });\n}\nfunction getCanonicalIcon(values) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    skipLookups = false\n  } = params;\n  let givenPrefix = null;\n  const faCombinedClasses = Ia.concat(bt$1);\n  const faStyleOrFamilyClasses = sortedUniqueValues(values.filter(cls => faCombinedClasses.includes(cls)));\n  const nonStyleOrFamilyClasses = sortedUniqueValues(values.filter(cls => !Ia.includes(cls)));\n  const faStyles = faStyleOrFamilyClasses.filter(cls => {\n    givenPrefix = cls;\n    return !P.includes(cls);\n  });\n  const [styleFromValues = null] = faStyles;\n  const family = getFamilyId(faStyleOrFamilyClasses);\n  const canonical = _objectSpread2(_objectSpread2({}, moveNonFaClassesToRest(nonStyleOrFamilyClasses)), {}, {\n    prefix: getCanonicalPrefix(styleFromValues, {\n      family\n    })\n  });\n  return _objectSpread2(_objectSpread2(_objectSpread2({}, canonical), getDefaultCanonicalPrefix({\n    values,\n    family,\n    styles,\n    config,\n    canonical,\n    givenPrefix\n  })), applyShimAndAlias(skipLookups, givenPrefix, canonical));\n}\nfunction applyShimAndAlias(skipLookups, givenPrefix, canonical) {\n  let {\n    prefix,\n    iconName\n  } = canonical;\n  if (skipLookups || !prefix || !iconName) {\n    return {\n      prefix,\n      iconName\n    };\n  }\n  const shim = givenPrefix === 'fa' ? byOldName(iconName) : {};\n  const aliasIconName = byAlias(prefix, iconName);\n  iconName = shim.iconName || aliasIconName || iconName;\n  prefix = shim.prefix || prefix;\n  if (prefix === 'far' && !styles['far'] && styles['fas'] && !config.autoFetchSvg) {\n    // Allow a fallback from the regular style to solid if regular is not available\n    // but only if we aren't auto-fetching SVGs\n    prefix = 'fas';\n  }\n  return {\n    prefix,\n    iconName\n  };\n}\nconst newCanonicalFamilies = L.filter(familyId => {\n  return familyId !== s || familyId !== t;\n});\nconst newCanonicalStyles = Object.keys(ga).filter(key => key !== s).map(key => Object.keys(ga[key])).flat();\nfunction getDefaultCanonicalPrefix(prefixOptions) {\n  const {\n    values,\n    family,\n    canonical,\n    givenPrefix = '',\n    styles = {},\n    config: config$$1 = {}\n  } = prefixOptions;\n  const isDuotoneFamily = family === t;\n  const valuesHasDuotone = values.includes('fa-duotone') || values.includes('fad');\n  const defaultFamilyIsDuotone = config$$1.familyDefault === 'duotone';\n  const canonicalPrefixIsDuotone = canonical.prefix === 'fad' || canonical.prefix === 'fa-duotone';\n  if (!isDuotoneFamily && (valuesHasDuotone || defaultFamilyIsDuotone || canonicalPrefixIsDuotone)) {\n    canonical.prefix = 'fad';\n  }\n  if (values.includes('fa-brands') || values.includes('fab')) {\n    canonical.prefix = 'fab';\n  }\n  if (!canonical.prefix && newCanonicalFamilies.includes(family)) {\n    const validPrefix = Object.keys(styles).find(key => newCanonicalStyles.includes(key));\n    if (validPrefix || config$$1.autoFetchSvg) {\n      const defaultPrefix = pt.get(family).defaultShortPrefixId;\n      canonical.prefix = defaultPrefix;\n      canonical.iconName = byAlias(canonical.prefix, canonical.iconName) || canonical.iconName;\n    }\n  }\n  if (canonical.prefix === 'fa' || givenPrefix === 'fa') {\n    // The fa prefix is not canonical. So if it has made it through until this point\n    // we will shift it to the correct prefix.\n    canonical.prefix = getDefaultUsablePrefix() || 'fas';\n  }\n  return canonical;\n}\n\nclass Library {\n  constructor() {\n    this.definitions = {};\n  }\n  add() {\n    for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {\n      definitions[_key] = arguments[_key];\n    }\n    const additions = definitions.reduce(this._pullDefinitions, {});\n    Object.keys(additions).forEach(key => {\n      this.definitions[key] = _objectSpread2(_objectSpread2({}, this.definitions[key] || {}), additions[key]);\n      defineIcons(key, additions[key]);\n\n      // TODO can we stop doing this? We can't get the icons by 'fa-solid' any longer so this probably needs to change\n      const longPrefix = PREFIX_TO_LONG_STYLE[s][key];\n      if (longPrefix) defineIcons(longPrefix, additions[key]);\n      build();\n    });\n  }\n  reset() {\n    this.definitions = {};\n  }\n  _pullDefinitions(additions, definition) {\n    const normalized = definition.prefix && definition.iconName && definition.icon ? {\n      0: definition\n    } : definition;\n    Object.keys(normalized).map(key => {\n      const {\n        prefix,\n        iconName,\n        icon\n      } = normalized[key];\n      const aliases = icon[2];\n      if (!additions[prefix]) additions[prefix] = {};\n      if (aliases.length > 0) {\n        aliases.forEach(alias => {\n          if (typeof alias === 'string') {\n            additions[prefix][alias] = icon;\n          }\n        });\n      }\n      additions[prefix][iconName] = icon;\n    });\n    return additions;\n  }\n}\n\nlet _plugins = [];\nlet _hooks = {};\nconst providers = {};\nconst defaultProviderKeys = Object.keys(providers);\nfunction registerPlugins(nextPlugins, _ref) {\n  let {\n    mixoutsTo: obj\n  } = _ref;\n  _plugins = nextPlugins;\n  _hooks = {};\n  Object.keys(providers).forEach(k => {\n    if (defaultProviderKeys.indexOf(k) === -1) {\n      delete providers[k];\n    }\n  });\n  _plugins.forEach(plugin => {\n    const mixout = plugin.mixout ? plugin.mixout() : {};\n    Object.keys(mixout).forEach(tk => {\n      if (typeof mixout[tk] === 'function') {\n        obj[tk] = mixout[tk];\n      }\n      if (typeof mixout[tk] === 'object') {\n        Object.keys(mixout[tk]).forEach(sk => {\n          if (!obj[tk]) {\n            obj[tk] = {};\n          }\n          obj[tk][sk] = mixout[tk][sk];\n        });\n      }\n    });\n    if (plugin.hooks) {\n      const hooks = plugin.hooks();\n      Object.keys(hooks).forEach(hook => {\n        if (!_hooks[hook]) {\n          _hooks[hook] = [];\n        }\n        _hooks[hook].push(hooks[hook]);\n      });\n    }\n    if (plugin.provides) {\n      plugin.provides(providers);\n    }\n  });\n  return obj;\n}\nfunction chainHooks(hook, accumulator) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  const hookFns = _hooks[hook] || [];\n  hookFns.forEach(hookFn => {\n    accumulator = hookFn.apply(null, [accumulator, ...args]); // eslint-disable-line no-useless-call\n  });\n  return accumulator;\n}\nfunction callHooks(hook) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  const hookFns = _hooks[hook] || [];\n  hookFns.forEach(hookFn => {\n    hookFn.apply(null, args);\n  });\n  return undefined;\n}\nfunction callProvided() {\n  const hook = arguments[0];\n  const args = Array.prototype.slice.call(arguments, 1);\n  return providers[hook] ? providers[hook].apply(null, args) : undefined;\n}\n\nfunction findIconDefinition(iconLookup) {\n  if (iconLookup.prefix === 'fa') {\n    iconLookup.prefix = 'fas';\n  }\n  let {\n    iconName\n  } = iconLookup;\n  const prefix = iconLookup.prefix || getDefaultUsablePrefix();\n  if (!iconName) return;\n  iconName = byAlias(prefix, iconName) || iconName;\n  return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);\n}\nconst library = new Library();\nconst noAuto = () => {\n  config.autoReplaceSvg = false;\n  config.observeMutations = false;\n  callHooks('noAuto');\n};\nconst dom = {\n  i2svg: function () {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (IS_DOM) {\n      callHooks('beforeI2svg', params);\n      callProvided('pseudoElements2svg', params);\n      return callProvided('i2svg', params);\n    } else {\n      return Promise.reject(new Error('Operation requires a DOM of some kind.'));\n    }\n  },\n  watch: function () {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      autoReplaceSvgRoot\n    } = params;\n    if (config.autoReplaceSvg === false) {\n      config.autoReplaceSvg = true;\n    }\n    config.observeMutations = true;\n    domready(() => {\n      autoReplace({\n        autoReplaceSvgRoot\n      });\n      callHooks('watch', params);\n    });\n  }\n};\nconst parse = {\n  icon: icon => {\n    if (icon === null) {\n      return null;\n    }\n    if (typeof icon === 'object' && icon.prefix && icon.iconName) {\n      return {\n        prefix: icon.prefix,\n        iconName: byAlias(icon.prefix, icon.iconName) || icon.iconName\n      };\n    }\n    if (Array.isArray(icon) && icon.length === 2) {\n      const iconName = icon[1].indexOf('fa-') === 0 ? icon[1].slice(3) : icon[1];\n      const prefix = getCanonicalPrefix(icon[0]);\n      return {\n        prefix,\n        iconName: byAlias(prefix, iconName) || iconName\n      };\n    }\n    if (typeof icon === 'string' && (icon.indexOf(\"\".concat(config.cssPrefix, \"-\")) > -1 || icon.match(ICON_SELECTION_SYNTAX_PATTERN))) {\n      const canonicalIcon = getCanonicalIcon(icon.split(' '), {\n        skipLookups: true\n      });\n      return {\n        prefix: canonicalIcon.prefix || getDefaultUsablePrefix(),\n        iconName: byAlias(canonicalIcon.prefix, canonicalIcon.iconName) || canonicalIcon.iconName\n      };\n    }\n    if (typeof icon === 'string') {\n      const prefix = getDefaultUsablePrefix();\n      return {\n        prefix,\n        iconName: byAlias(prefix, icon) || icon\n      };\n    }\n  }\n};\nconst api = {\n  noAuto,\n  config,\n  dom,\n  parse,\n  library,\n  findIconDefinition,\n  toHtml\n};\nconst autoReplace = function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    autoReplaceSvgRoot = DOCUMENT\n  } = params;\n  if ((Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg) api.dom.i2svg({\n    node: autoReplaceSvgRoot\n  });\n};\n\nfunction domVariants(val, abstractCreator) {\n  Object.defineProperty(val, 'abstract', {\n    get: abstractCreator\n  });\n  Object.defineProperty(val, 'html', {\n    get: function () {\n      return val.abstract.map(a => toHtml(a));\n    }\n  });\n  Object.defineProperty(val, 'node', {\n    get: function () {\n      if (!IS_DOM) return;\n      const container = DOCUMENT.createElement('div');\n      container.innerHTML = val.html;\n      return container.children;\n    }\n  });\n  return val;\n}\n\nfunction asIcon (_ref) {\n  let {\n    children,\n    main,\n    mask,\n    attributes,\n    styles,\n    transform\n  } = _ref;\n  if (transformIsMeaningful(transform) && main.found && !mask.found) {\n    const {\n      width,\n      height\n    } = main;\n    const offset = {\n      x: width / height / 2,\n      y: 0.5\n    };\n    attributes['style'] = joinStyles(_objectSpread2(_objectSpread2({}, styles), {}, {\n      'transform-origin': \"\".concat(offset.x + transform.x / 16, \"em \").concat(offset.y + transform.y / 16, \"em\")\n    }));\n  }\n  return [{\n    tag: 'svg',\n    attributes,\n    children\n  }];\n}\n\nfunction asSymbol (_ref) {\n  let {\n    prefix,\n    iconName,\n    children,\n    attributes,\n    symbol\n  } = _ref;\n  const id = symbol === true ? \"\".concat(prefix, \"-\").concat(config.cssPrefix, \"-\").concat(iconName) : symbol;\n  return [{\n    tag: 'svg',\n    attributes: {\n      style: 'display: none;'\n    },\n    children: [{\n      tag: 'symbol',\n      attributes: _objectSpread2(_objectSpread2({}, attributes), {}, {\n        id\n      }),\n      children\n    }]\n  }];\n}\n\nfunction makeInlineSvgAbstract(params) {\n  const {\n    icons: {\n      main,\n      mask\n    },\n    prefix,\n    iconName,\n    transform,\n    symbol,\n    title,\n    maskId,\n    titleId,\n    extra,\n    watchable = false\n  } = params;\n  const {\n    width,\n    height\n  } = mask.found ? mask : main;\n  const isUploadedIcon = Lt.includes(prefix);\n  const attrClass = [config.replacementClass, iconName ? \"\".concat(config.cssPrefix, \"-\").concat(iconName) : ''].filter(c$$1 => extra.classes.indexOf(c$$1) === -1).filter(c$$1 => c$$1 !== '' || !!c$$1).concat(extra.classes).join(' ');\n  let content = {\n    children: [],\n    attributes: _objectSpread2(_objectSpread2({}, extra.attributes), {}, {\n      'data-prefix': prefix,\n      'data-icon': iconName,\n      'class': attrClass,\n      'role': extra.attributes.role || 'img',\n      'xmlns': 'http://www.w3.org/2000/svg',\n      'viewBox': \"0 0 \".concat(width, \" \").concat(height)\n    })\n  };\n  const uploadedIconWidthStyle = isUploadedIcon && !~extra.classes.indexOf('fa-fw') ? {\n    width: \"\".concat(width / height * 16 * 0.0625, \"em\")\n  } : {};\n  if (watchable) {\n    content.attributes[DATA_FA_I2SVG] = '';\n  }\n  if (title) {\n    content.children.push({\n      tag: 'title',\n      attributes: {\n        id: content.attributes['aria-labelledby'] || \"title-\".concat(titleId || nextUniqueId())\n      },\n      children: [title]\n    });\n    delete content.attributes.title;\n  }\n  const args = _objectSpread2(_objectSpread2({}, content), {}, {\n    prefix,\n    iconName,\n    main,\n    mask,\n    maskId,\n    transform,\n    symbol,\n    styles: _objectSpread2(_objectSpread2({}, uploadedIconWidthStyle), extra.styles)\n  });\n  const {\n    children,\n    attributes\n  } = mask.found && main.found ? callProvided('generateAbstractMask', args) || {\n    children: [],\n    attributes: {}\n  } : callProvided('generateAbstractIcon', args) || {\n    children: [],\n    attributes: {}\n  };\n  args.children = children;\n  args.attributes = attributes;\n  if (symbol) {\n    return asSymbol(args);\n  } else {\n    return asIcon(args);\n  }\n}\nfunction makeLayersTextAbstract(params) {\n  const {\n    content,\n    width,\n    height,\n    transform,\n    title,\n    extra,\n    watchable = false\n  } = params;\n  const attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {\n    'title': title\n  } : {}), {}, {\n    'class': extra.classes.join(' ')\n  });\n  if (watchable) {\n    attributes[DATA_FA_I2SVG] = '';\n  }\n  const styles = _objectSpread2({}, extra.styles);\n  if (transformIsMeaningful(transform)) {\n    styles['transform'] = transformForCss({\n      transform,\n      startCentered: true,\n      width,\n      height\n    });\n    styles['-webkit-transform'] = styles['transform'];\n  }\n  const styleString = joinStyles(styles);\n  if (styleString.length > 0) {\n    attributes['style'] = styleString;\n  }\n  const val = [];\n  val.push({\n    tag: 'span',\n    attributes,\n    children: [content]\n  });\n  if (title) {\n    val.push({\n      tag: 'span',\n      attributes: {\n        class: 'sr-only'\n      },\n      children: [title]\n    });\n  }\n  return val;\n}\nfunction makeLayersCounterAbstract(params) {\n  const {\n    content,\n    title,\n    extra\n  } = params;\n  const attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {\n    'title': title\n  } : {}), {}, {\n    'class': extra.classes.join(' ')\n  });\n  const styleString = joinStyles(extra.styles);\n  if (styleString.length > 0) {\n    attributes['style'] = styleString;\n  }\n  const val = [];\n  val.push({\n    tag: 'span',\n    attributes,\n    children: [content]\n  });\n  if (title) {\n    val.push({\n      tag: 'span',\n      attributes: {\n        class: 'sr-only'\n      },\n      children: [title]\n    });\n  }\n  return val;\n}\n\nconst {\n  styles: styles$1\n} = namespace;\nfunction asFoundIcon(icon) {\n  const width = icon[0];\n  const height = icon[1];\n  const [vectorData] = icon.slice(4);\n  let element = null;\n  if (Array.isArray(vectorData)) {\n    element = {\n      tag: 'g',\n      attributes: {\n        class: \"\".concat(config.cssPrefix, \"-\").concat(DUOTONE_CLASSES.GROUP)\n      },\n      children: [{\n        tag: 'path',\n        attributes: {\n          class: \"\".concat(config.cssPrefix, \"-\").concat(DUOTONE_CLASSES.SECONDARY),\n          fill: 'currentColor',\n          d: vectorData[0]\n        }\n      }, {\n        tag: 'path',\n        attributes: {\n          class: \"\".concat(config.cssPrefix, \"-\").concat(DUOTONE_CLASSES.PRIMARY),\n          fill: 'currentColor',\n          d: vectorData[1]\n        }\n      }]\n    };\n  } else {\n    element = {\n      tag: 'path',\n      attributes: {\n        fill: 'currentColor',\n        d: vectorData\n      }\n    };\n  }\n  return {\n    found: true,\n    width,\n    height,\n    icon: element\n  };\n}\nconst missingIconResolutionMixin = {\n  found: false,\n  width: 512,\n  height: 512\n};\nfunction maybeNotifyMissing(iconName, prefix) {\n  if (!PRODUCTION && !config.showMissingIcons && iconName) {\n    console.error(\"Icon with name \\\"\".concat(iconName, \"\\\" and prefix \\\"\").concat(prefix, \"\\\" is missing.\"));\n  }\n}\nfunction findIcon(iconName, prefix) {\n  let givenPrefix = prefix;\n  if (prefix === 'fa' && config.styleDefault !== null) {\n    prefix = getDefaultUsablePrefix();\n  }\n  return new Promise((resolve, reject) => {\n    if (givenPrefix === 'fa') {\n      const shim = byOldName(iconName) || {};\n      iconName = shim.iconName || iconName;\n      prefix = shim.prefix || prefix;\n    }\n    if (iconName && prefix && styles$1[prefix] && styles$1[prefix][iconName]) {\n      const icon = styles$1[prefix][iconName];\n      return resolve(asFoundIcon(icon));\n    }\n    maybeNotifyMissing(iconName, prefix);\n    resolve(_objectSpread2(_objectSpread2({}, missingIconResolutionMixin), {}, {\n      icon: config.showMissingIcons && iconName ? callProvided('missingIconAbstract') || {} : {}\n    }));\n  });\n}\n\nconst noop$1 = () => {};\nconst p$2 = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {\n  mark: noop$1,\n  measure: noop$1\n};\nconst preamble = \"FA \\\"6.7.2\\\"\";\nconst begin = name => {\n  p$2.mark(\"\".concat(preamble, \" \").concat(name, \" begins\"));\n  return () => end(name);\n};\nconst end = name => {\n  p$2.mark(\"\".concat(preamble, \" \").concat(name, \" ends\"));\n  p$2.measure(\"\".concat(preamble, \" \").concat(name), \"\".concat(preamble, \" \").concat(name, \" begins\"), \"\".concat(preamble, \" \").concat(name, \" ends\"));\n};\nvar perf = {\n  begin,\n  end\n};\n\nconst noop$2 = () => {};\nfunction isWatched(node) {\n  const i2svg = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;\n  return typeof i2svg === 'string';\n}\nfunction hasPrefixAndIcon(node) {\n  const prefix = node.getAttribute ? node.getAttribute(DATA_PREFIX) : null;\n  const icon = node.getAttribute ? node.getAttribute(DATA_ICON) : null;\n  return prefix && icon;\n}\nfunction hasBeenReplaced(node) {\n  return node && node.classList && node.classList.contains && node.classList.contains(config.replacementClass);\n}\nfunction getMutator() {\n  if (config.autoReplaceSvg === true) {\n    return mutators.replace;\n  }\n  const mutator = mutators[config.autoReplaceSvg];\n  return mutator || mutators.replace;\n}\nfunction createElementNS(tag) {\n  return DOCUMENT.createElementNS('http://www.w3.org/2000/svg', tag);\n}\nfunction createElement(tag) {\n  return DOCUMENT.createElement(tag);\n}\nfunction convertSVG(abstractObj) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    ceFn = abstractObj.tag === 'svg' ? createElementNS : createElement\n  } = params;\n  if (typeof abstractObj === 'string') {\n    return DOCUMENT.createTextNode(abstractObj);\n  }\n  const tag = ceFn(abstractObj.tag);\n  Object.keys(abstractObj.attributes || []).forEach(function (key) {\n    tag.setAttribute(key, abstractObj.attributes[key]);\n  });\n  const children = abstractObj.children || [];\n  children.forEach(function (child) {\n    tag.appendChild(convertSVG(child, {\n      ceFn\n    }));\n  });\n  return tag;\n}\nfunction nodeAsComment(node) {\n  let comment = \" \".concat(node.outerHTML, \" \");\n  /* BEGIN.ATTRIBUTION */\n  comment = \"\".concat(comment, \"Font Awesome fontawesome.com \");\n  /* END.ATTRIBUTION */\n  return comment;\n}\nconst mutators = {\n  replace: function (mutation) {\n    const node = mutation[0];\n    if (node.parentNode) {\n      mutation[1].forEach(abstract => {\n        node.parentNode.insertBefore(convertSVG(abstract), node);\n      });\n      if (node.getAttribute(DATA_FA_I2SVG) === null && config.keepOriginalSource) {\n        let comment = DOCUMENT.createComment(nodeAsComment(node));\n        node.parentNode.replaceChild(comment, node);\n      } else {\n        node.remove();\n      }\n    }\n  },\n  nest: function (mutation) {\n    const node = mutation[0];\n    const abstract = mutation[1];\n\n    // If we already have a replaced node we do not want to continue nesting within it.\n    // Short-circuit to the standard replacement\n    if (~classArray(node).indexOf(config.replacementClass)) {\n      return mutators.replace(mutation);\n    }\n    const forSvg = new RegExp(\"\".concat(config.cssPrefix, \"-.*\"));\n    delete abstract[0].attributes.id;\n    if (abstract[0].attributes.class) {\n      const splitClasses = abstract[0].attributes.class.split(' ').reduce((acc, cls) => {\n        if (cls === config.replacementClass || cls.match(forSvg)) {\n          acc.toSvg.push(cls);\n        } else {\n          acc.toNode.push(cls);\n        }\n        return acc;\n      }, {\n        toNode: [],\n        toSvg: []\n      });\n      abstract[0].attributes.class = splitClasses.toSvg.join(' ');\n      if (splitClasses.toNode.length === 0) {\n        node.removeAttribute('class');\n      } else {\n        node.setAttribute('class', splitClasses.toNode.join(' '));\n      }\n    }\n    const newInnerHTML = abstract.map(a => toHtml(a)).join('\\n');\n    node.setAttribute(DATA_FA_I2SVG, '');\n    node.innerHTML = newInnerHTML;\n  }\n};\nfunction performOperationSync(op) {\n  op();\n}\nfunction perform(mutations, callback) {\n  const callbackFunction = typeof callback === 'function' ? callback : noop$2;\n  if (mutations.length === 0) {\n    callbackFunction();\n  } else {\n    let frame = performOperationSync;\n    if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {\n      frame = WINDOW.requestAnimationFrame || performOperationSync;\n    }\n    frame(() => {\n      const mutator = getMutator();\n      const mark = perf.begin('mutate');\n      mutations.map(mutator);\n      mark();\n      callbackFunction();\n    });\n  }\n}\nlet disabled = false;\nfunction disableObservation() {\n  disabled = true;\n}\nfunction enableObservation() {\n  disabled = false;\n}\nlet mo = null;\nfunction observe(options) {\n  if (!MUTATION_OBSERVER) {\n    return;\n  }\n  if (!config.observeMutations) {\n    return;\n  }\n  const {\n    treeCallback = noop$2,\n    nodeCallback = noop$2,\n    pseudoElementsCallback = noop$2,\n    observeMutationsRoot = DOCUMENT\n  } = options;\n  mo = new MUTATION_OBSERVER(objects => {\n    if (disabled) return;\n    const defaultPrefix = getDefaultUsablePrefix();\n    toArray(objects).forEach(mutationRecord => {\n      if (mutationRecord.type === 'childList' && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {\n        if (config.searchPseudoElements) {\n          pseudoElementsCallback(mutationRecord.target);\n        }\n        treeCallback(mutationRecord.target);\n      }\n      if (mutationRecord.type === 'attributes' && mutationRecord.target.parentNode && config.searchPseudoElements) {\n        pseudoElementsCallback(mutationRecord.target.parentNode);\n      }\n      if (mutationRecord.type === 'attributes' && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {\n        if (mutationRecord.attributeName === 'class' && hasPrefixAndIcon(mutationRecord.target)) {\n          const {\n            prefix,\n            iconName\n          } = getCanonicalIcon(classArray(mutationRecord.target));\n          mutationRecord.target.setAttribute(DATA_PREFIX, prefix || defaultPrefix);\n          if (iconName) mutationRecord.target.setAttribute(DATA_ICON, iconName);\n        } else if (hasBeenReplaced(mutationRecord.target)) {\n          nodeCallback(mutationRecord.target);\n        }\n      }\n    });\n  });\n  if (!IS_DOM) return;\n  mo.observe(observeMutationsRoot, {\n    childList: true,\n    attributes: true,\n    characterData: true,\n    subtree: true\n  });\n}\nfunction disconnect() {\n  if (!mo) return;\n  mo.disconnect();\n}\n\nfunction styleParser (node) {\n  const style = node.getAttribute('style');\n  let val = [];\n  if (style) {\n    val = style.split(';').reduce((acc, style) => {\n      const styles = style.split(':');\n      const prop = styles[0];\n      const value = styles.slice(1);\n      if (prop && value.length > 0) {\n        acc[prop] = value.join(':').trim();\n      }\n      return acc;\n    }, {});\n  }\n  return val;\n}\n\nfunction classParser (node) {\n  const existingPrefix = node.getAttribute('data-prefix');\n  const existingIconName = node.getAttribute('data-icon');\n  const innerText = node.innerText !== undefined ? node.innerText.trim() : '';\n  let val = getCanonicalIcon(classArray(node));\n  if (!val.prefix) {\n    val.prefix = getDefaultUsablePrefix();\n  }\n  if (existingPrefix && existingIconName) {\n    val.prefix = existingPrefix;\n    val.iconName = existingIconName;\n  }\n  if (val.iconName && val.prefix) {\n    return val;\n  }\n  if (val.prefix && innerText.length > 0) {\n    val.iconName = byLigature(val.prefix, node.innerText) || byUnicode(val.prefix, toHex(node.innerText));\n  }\n  if (!val.iconName && config.autoFetchSvg && node.firstChild && node.firstChild.nodeType === Node.TEXT_NODE) {\n    val.iconName = node.firstChild.data;\n  }\n  return val;\n}\n\nfunction attributesParser (node) {\n  const extraAttributes = toArray(node.attributes).reduce((acc, attr) => {\n    if (acc.name !== 'class' && acc.name !== 'style') {\n      acc[attr.name] = attr.value;\n    }\n    return acc;\n  }, {});\n  const title = node.getAttribute('title');\n  const titleId = node.getAttribute('data-fa-title-id');\n  if (config.autoA11y) {\n    if (title) {\n      extraAttributes['aria-labelledby'] = \"\".concat(config.replacementClass, \"-title-\").concat(titleId || nextUniqueId());\n    } else {\n      extraAttributes['aria-hidden'] = 'true';\n      extraAttributes['focusable'] = 'false';\n    }\n  }\n  return extraAttributes;\n}\n\nfunction blankMeta() {\n  return {\n    iconName: null,\n    title: null,\n    titleId: null,\n    prefix: null,\n    transform: meaninglessTransform,\n    symbol: false,\n    mask: {\n      iconName: null,\n      prefix: null,\n      rest: []\n    },\n    maskId: null,\n    extra: {\n      classes: [],\n      styles: {},\n      attributes: {}\n    }\n  };\n}\nfunction parseMeta(node) {\n  let parser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    styleParser: true\n  };\n  const {\n    iconName,\n    prefix,\n    rest: extraClasses\n  } = classParser(node);\n  const extraAttributes = attributesParser(node);\n  const pluginMeta = chainHooks('parseNodeAttributes', {}, node);\n  let extraStyles = parser.styleParser ? styleParser(node) : [];\n  return _objectSpread2({\n    iconName,\n    title: node.getAttribute('title'),\n    titleId: node.getAttribute('data-fa-title-id'),\n    prefix,\n    transform: meaninglessTransform,\n    mask: {\n      iconName: null,\n      prefix: null,\n      rest: []\n    },\n    maskId: null,\n    symbol: false,\n    extra: {\n      classes: extraClasses,\n      styles: extraStyles,\n      attributes: extraAttributes\n    }\n  }, pluginMeta);\n}\n\nconst {\n  styles: styles$2\n} = namespace;\nfunction generateMutation(node) {\n  const nodeMeta = config.autoReplaceSvg === 'nest' ? parseMeta(node, {\n    styleParser: false\n  }) : parseMeta(node);\n  if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {\n    return callProvided('generateLayersText', node, nodeMeta);\n  } else {\n    return callProvided('generateSvgReplacementMutation', node, nodeMeta);\n  }\n}\nfunction getKnownPrefixes() {\n  return [...Ft, ...Ia];\n}\nfunction onTree(root) {\n  let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (!IS_DOM) return Promise.resolve();\n  const htmlClassList = DOCUMENT.documentElement.classList;\n  const hclAdd = suffix => htmlClassList.add(\"\".concat(HTML_CLASS_I2SVG_BASE_CLASS, \"-\").concat(suffix));\n  const hclRemove = suffix => htmlClassList.remove(\"\".concat(HTML_CLASS_I2SVG_BASE_CLASS, \"-\").concat(suffix));\n  const prefixes = config.autoFetchSvg ? getKnownPrefixes() : P.concat(Object.keys(styles$2));\n  if (!prefixes.includes('fa')) {\n    prefixes.push('fa');\n  }\n  const prefixesDomQuery = [\".\".concat(LAYERS_TEXT_CLASSNAME, \":not([\").concat(DATA_FA_I2SVG, \"])\")].concat(prefixes.map(p$$1 => \".\".concat(p$$1, \":not([\").concat(DATA_FA_I2SVG, \"])\"))).join(', ');\n  if (prefixesDomQuery.length === 0) {\n    return Promise.resolve();\n  }\n  let candidates = [];\n  try {\n    candidates = toArray(root.querySelectorAll(prefixesDomQuery));\n  } catch (e$$1) {\n    // noop\n  }\n  if (candidates.length > 0) {\n    hclAdd('pending');\n    hclRemove('complete');\n  } else {\n    return Promise.resolve();\n  }\n  const mark = perf.begin('onTree');\n  const mutations = candidates.reduce((acc, node) => {\n    try {\n      const mutation = generateMutation(node);\n      if (mutation) {\n        acc.push(mutation);\n      }\n    } catch (e$$1) {\n      if (!PRODUCTION) {\n        if (e$$1.name === 'MissingIcon') {\n          console.error(e$$1);\n        }\n      }\n    }\n    return acc;\n  }, []);\n  return new Promise((resolve, reject) => {\n    Promise.all(mutations).then(resolvedMutations => {\n      perform(resolvedMutations, () => {\n        hclAdd('active');\n        hclAdd('complete');\n        hclRemove('pending');\n        if (typeof callback === 'function') callback();\n        mark();\n        resolve();\n      });\n    }).catch(e$$1 => {\n      mark();\n      reject(e$$1);\n    });\n  });\n}\nfunction onNode(node) {\n  let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  generateMutation(node).then(mutation => {\n    if (mutation) {\n      perform([mutation], callback);\n    }\n  });\n}\nfunction resolveIcons(next) {\n  return function (maybeIconDefinition) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});\n    let {\n      mask\n    } = params;\n    if (mask) {\n      mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});\n    }\n    return next(iconDefinition, _objectSpread2(_objectSpread2({}, params), {}, {\n      mask\n    }));\n  };\n}\nconst render = function (iconDefinition) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    transform = meaninglessTransform,\n    symbol = false,\n    mask = null,\n    maskId = null,\n    title = null,\n    titleId = null,\n    classes = [],\n    attributes = {},\n    styles = {}\n  } = params;\n  if (!iconDefinition) return;\n  const {\n    prefix,\n    iconName,\n    icon\n  } = iconDefinition;\n  return domVariants(_objectSpread2({\n    type: 'icon'\n  }, iconDefinition), () => {\n    callHooks('beforeDOMElementCreation', {\n      iconDefinition,\n      params\n    });\n    if (config.autoA11y) {\n      if (title) {\n        attributes['aria-labelledby'] = \"\".concat(config.replacementClass, \"-title-\").concat(titleId || nextUniqueId());\n      } else {\n        attributes['aria-hidden'] = 'true';\n        attributes['focusable'] = 'false';\n      }\n    }\n    return makeInlineSvgAbstract({\n      icons: {\n        main: asFoundIcon(icon),\n        mask: mask ? asFoundIcon(mask.icon) : {\n          found: false,\n          width: null,\n          height: null,\n          icon: {}\n        }\n      },\n      prefix,\n      iconName,\n      transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),\n      symbol,\n      title,\n      maskId,\n      titleId,\n      extra: {\n        attributes,\n        styles,\n        classes\n      }\n    });\n  });\n};\nvar ReplaceElements = {\n  mixout() {\n    return {\n      icon: resolveIcons(render)\n    };\n  },\n  hooks() {\n    return {\n      mutationObserverCallbacks(accumulator) {\n        accumulator.treeCallback = onTree;\n        accumulator.nodeCallback = onNode;\n        return accumulator;\n      }\n    };\n  },\n  provides(providers$$1) {\n    providers$$1.i2svg = function (params) {\n      const {\n        node = DOCUMENT,\n        callback = () => {}\n      } = params;\n      return onTree(node, callback);\n    };\n    providers$$1.generateSvgReplacementMutation = function (node, nodeMeta) {\n      const {\n        iconName,\n        title,\n        titleId,\n        prefix,\n        transform,\n        symbol,\n        mask,\n        maskId,\n        extra\n      } = nodeMeta;\n      return new Promise((resolve, reject) => {\n        Promise.all([findIcon(iconName, prefix), mask.iconName ? findIcon(mask.iconName, mask.prefix) : Promise.resolve({\n          found: false,\n          width: 512,\n          height: 512,\n          icon: {}\n        })]).then(_ref => {\n          let [main, mask] = _ref;\n          resolve([node, makeInlineSvgAbstract({\n            icons: {\n              main,\n              mask\n            },\n            prefix,\n            iconName,\n            transform,\n            symbol,\n            maskId,\n            title,\n            titleId,\n            extra,\n            watchable: true\n          })]);\n        }).catch(reject);\n      });\n    };\n    providers$$1.generateAbstractIcon = function (_ref2) {\n      let {\n        children,\n        attributes,\n        main,\n        transform,\n        styles\n      } = _ref2;\n      const styleString = joinStyles(styles);\n      if (styleString.length > 0) {\n        attributes['style'] = styleString;\n      }\n      let nextChild;\n      if (transformIsMeaningful(transform)) {\n        nextChild = callProvided('generateAbstractTransformGrouping', {\n          main,\n          transform,\n          containerWidth: main.width,\n          iconWidth: main.width\n        });\n      }\n      children.push(nextChild || main.icon);\n      return {\n        children,\n        attributes\n      };\n    };\n  }\n};\n\nvar Layers = {\n  mixout() {\n    return {\n      layer(assembler) {\n        let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const {\n          classes = []\n        } = params;\n        return domVariants({\n          type: 'layer'\n        }, () => {\n          callHooks('beforeDOMElementCreation', {\n            assembler,\n            params\n          });\n          let children = [];\n          assembler(args => {\n            Array.isArray(args) ? args.map(a => {\n              children = children.concat(a.abstract);\n            }) : children = children.concat(args.abstract);\n          });\n          return [{\n            tag: 'span',\n            attributes: {\n              class: [\"\".concat(config.cssPrefix, \"-layers\"), ...classes].join(' ')\n            },\n            children\n          }];\n        });\n      }\n    };\n  }\n};\n\nvar LayersCounter = {\n  mixout() {\n    return {\n      counter(content) {\n        let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const {\n          title = null,\n          classes = [],\n          attributes = {},\n          styles = {}\n        } = params;\n        return domVariants({\n          type: 'counter',\n          content\n        }, () => {\n          callHooks('beforeDOMElementCreation', {\n            content,\n            params\n          });\n          return makeLayersCounterAbstract({\n            content: content.toString(),\n            title,\n            extra: {\n              attributes,\n              styles,\n              classes: [\"\".concat(config.cssPrefix, \"-layers-counter\"), ...classes]\n            }\n          });\n        });\n      }\n    };\n  }\n};\n\nvar LayersText = {\n  mixout() {\n    return {\n      text(content) {\n        let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const {\n          transform = meaninglessTransform,\n          title = null,\n          classes = [],\n          attributes = {},\n          styles = {}\n        } = params;\n        return domVariants({\n          type: 'text',\n          content\n        }, () => {\n          callHooks('beforeDOMElementCreation', {\n            content,\n            params\n          });\n          return makeLayersTextAbstract({\n            content,\n            transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),\n            title,\n            extra: {\n              attributes,\n              styles,\n              classes: [\"\".concat(config.cssPrefix, \"-layers-text\"), ...classes]\n            }\n          });\n        });\n      }\n    };\n  },\n  provides(providers$$1) {\n    providers$$1.generateLayersText = function (node, nodeMeta) {\n      const {\n        title,\n        transform,\n        extra\n      } = nodeMeta;\n      let width = null;\n      let height = null;\n      if (IS_IE) {\n        const computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);\n        const boundingClientRect = node.getBoundingClientRect();\n        width = boundingClientRect.width / computedFontSize;\n        height = boundingClientRect.height / computedFontSize;\n      }\n      if (config.autoA11y && !title) {\n        extra.attributes['aria-hidden'] = 'true';\n      }\n      return Promise.resolve([node, makeLayersTextAbstract({\n        content: node.innerHTML,\n        width,\n        height,\n        transform,\n        title,\n        extra,\n        watchable: true\n      })]);\n    };\n  }\n};\n\nconst CLEAN_CONTENT_PATTERN = new RegExp('\\u{22}', 'ug');\nconst SECONDARY_UNICODE_RANGE = [1105920, 1112319];\nconst _FONT_FAMILY_WEIGHT_TO_PREFIX = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, {\n  FontAwesome: {\n    normal: 'fas',\n    400: 'fas'\n  }\n}), lt), wa), Yt);\nconst FONT_FAMILY_WEIGHT_TO_PREFIX = Object.keys(_FONT_FAMILY_WEIGHT_TO_PREFIX).reduce((acc, key) => {\n  acc[key.toLowerCase()] = _FONT_FAMILY_WEIGHT_TO_PREFIX[key];\n  return acc;\n}, {});\nconst FONT_FAMILY_WEIGHT_FALLBACK = Object.keys(FONT_FAMILY_WEIGHT_TO_PREFIX).reduce((acc, fontFamily) => {\n  const weights = FONT_FAMILY_WEIGHT_TO_PREFIX[fontFamily];\n  acc[fontFamily] = weights[900] || [...Object.entries(weights)][0][1];\n  return acc;\n}, {});\nfunction hexValueFromContent(content) {\n  const cleaned = content.replace(CLEAN_CONTENT_PATTERN, '');\n  const codePoint = codePointAt(cleaned, 0);\n  const isPrependTen = codePoint >= SECONDARY_UNICODE_RANGE[0] && codePoint <= SECONDARY_UNICODE_RANGE[1];\n  const isDoubled = cleaned.length === 2 ? cleaned[0] === cleaned[1] : false;\n  return {\n    value: isDoubled ? toHex(cleaned[0]) : toHex(cleaned),\n    isSecondary: isPrependTen || isDoubled\n  };\n}\nfunction getPrefix(fontFamily, fontWeight) {\n  const fontFamilySanitized = fontFamily.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n  const fontWeightInteger = parseInt(fontWeight);\n  const fontWeightSanitized = isNaN(fontWeightInteger) ? 'normal' : fontWeightInteger;\n  return (FONT_FAMILY_WEIGHT_TO_PREFIX[fontFamilySanitized] || {})[fontWeightSanitized] || FONT_FAMILY_WEIGHT_FALLBACK[fontFamilySanitized];\n}\nfunction replaceForPosition(node, position) {\n  const pendingAttribute = \"\".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(':', '-'));\n  return new Promise((resolve, reject) => {\n    if (node.getAttribute(pendingAttribute) !== null) {\n      // This node is already being processed\n      return resolve();\n    }\n    const children = toArray(node.children);\n    const alreadyProcessedPseudoElement = children.filter(c$$1 => c$$1.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position)[0];\n    const styles = WINDOW.getComputedStyle(node, position);\n    const fontFamily = styles.getPropertyValue('font-family');\n    const fontFamilyMatch = fontFamily.match(FONT_FAMILY_PATTERN);\n    const fontWeight = styles.getPropertyValue('font-weight');\n    const content = styles.getPropertyValue('content');\n    if (alreadyProcessedPseudoElement && !fontFamilyMatch) {\n      // If we've already processed it but the current computed style does not result in a font-family,\n      // that probably means that a class name that was previously present to make the icon has been\n      // removed. So we now should delete the icon.\n      node.removeChild(alreadyProcessedPseudoElement);\n      return resolve();\n    } else if (fontFamilyMatch && content !== 'none' && content !== '') {\n      const content = styles.getPropertyValue('content');\n      let prefix = getPrefix(fontFamily, fontWeight);\n      const {\n        value: hexValue,\n        isSecondary\n      } = hexValueFromContent(content);\n      const isV4 = fontFamilyMatch[0].startsWith('FontAwesome');\n      let iconName = byUnicode(prefix, hexValue);\n      let iconIdentifier = iconName;\n      if (isV4) {\n        const iconName4 = byOldUnicode(hexValue);\n        if (iconName4.iconName && iconName4.prefix) {\n          iconName = iconName4.iconName;\n          prefix = iconName4.prefix;\n        }\n      }\n\n      // Only convert the pseudo element in this ::before/::after position into an icon if we haven't\n      // already done so with the same prefix and iconName\n      if (iconName && !isSecondary && (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconIdentifier)) {\n        node.setAttribute(pendingAttribute, iconIdentifier);\n        if (alreadyProcessedPseudoElement) {\n          // Delete the old one, since we're replacing it with a new one\n          node.removeChild(alreadyProcessedPseudoElement);\n        }\n        const meta = blankMeta();\n        const {\n          extra\n        } = meta;\n        extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;\n        findIcon(iconName, prefix).then(main => {\n          const abstract = makeInlineSvgAbstract(_objectSpread2(_objectSpread2({}, meta), {}, {\n            icons: {\n              main,\n              mask: emptyCanonicalIcon()\n            },\n            prefix,\n            iconName: iconIdentifier,\n            extra,\n            watchable: true\n          }));\n          const element = DOCUMENT.createElementNS('http://www.w3.org/2000/svg', 'svg');\n          if (position === '::before') {\n            node.insertBefore(element, node.firstChild);\n          } else {\n            node.appendChild(element);\n          }\n          element.outerHTML = abstract.map(a$$1 => toHtml(a$$1)).join('\\n');\n          node.removeAttribute(pendingAttribute);\n          resolve();\n        }).catch(reject);\n      } else {\n        resolve();\n      }\n    } else {\n      resolve();\n    }\n  });\n}\nfunction replace(node) {\n  return Promise.all([replaceForPosition(node, '::before'), replaceForPosition(node, '::after')]);\n}\nfunction processable(node) {\n  return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== 'svg');\n}\nfunction searchPseudoElements(root) {\n  if (!IS_DOM) return;\n  return new Promise((resolve, reject) => {\n    const operations = toArray(root.querySelectorAll('*')).filter(processable).map(replace);\n    const end = perf.begin('searchPseudoElements');\n    disableObservation();\n    Promise.all(operations).then(() => {\n      end();\n      enableObservation();\n      resolve();\n    }).catch(() => {\n      end();\n      enableObservation();\n      reject();\n    });\n  });\n}\nvar PseudoElements = {\n  hooks() {\n    return {\n      mutationObserverCallbacks(accumulator) {\n        accumulator.pseudoElementsCallback = searchPseudoElements;\n        return accumulator;\n      }\n    };\n  },\n  provides(providers) {\n    providers.pseudoElements2svg = function (params) {\n      const {\n        node = DOCUMENT\n      } = params;\n      if (config.searchPseudoElements) {\n        searchPseudoElements(node);\n      }\n    };\n  }\n};\n\nlet _unwatched = false;\nvar MutationObserver$1 = {\n  mixout() {\n    return {\n      dom: {\n        unwatch() {\n          disableObservation();\n          _unwatched = true;\n        }\n      }\n    };\n  },\n  hooks() {\n    return {\n      bootstrap() {\n        observe(chainHooks('mutationObserverCallbacks', {}));\n      },\n      noAuto() {\n        disconnect();\n      },\n      watch(params) {\n        const {\n          observeMutationsRoot\n        } = params;\n        if (_unwatched) {\n          enableObservation();\n        } else {\n          observe(chainHooks('mutationObserverCallbacks', {\n            observeMutationsRoot\n          }));\n        }\n      }\n    };\n  }\n};\n\nconst parseTransformString = transformString => {\n  let transform = {\n    size: 16,\n    x: 0,\n    y: 0,\n    flipX: false,\n    flipY: false,\n    rotate: 0\n  };\n  return transformString.toLowerCase().split(' ').reduce((acc, n) => {\n    const parts = n.toLowerCase().split('-');\n    const first = parts[0];\n    let rest = parts.slice(1).join('-');\n    if (first && rest === 'h') {\n      acc.flipX = true;\n      return acc;\n    }\n    if (first && rest === 'v') {\n      acc.flipY = true;\n      return acc;\n    }\n    rest = parseFloat(rest);\n    if (isNaN(rest)) {\n      return acc;\n    }\n    switch (first) {\n      case 'grow':\n        acc.size = acc.size + rest;\n        break;\n      case 'shrink':\n        acc.size = acc.size - rest;\n        break;\n      case 'left':\n        acc.x = acc.x - rest;\n        break;\n      case 'right':\n        acc.x = acc.x + rest;\n        break;\n      case 'up':\n        acc.y = acc.y - rest;\n        break;\n      case 'down':\n        acc.y = acc.y + rest;\n        break;\n      case 'rotate':\n        acc.rotate = acc.rotate + rest;\n        break;\n    }\n    return acc;\n  }, transform);\n};\nvar PowerTransforms = {\n  mixout() {\n    return {\n      parse: {\n        transform: transformString => {\n          return parseTransformString(transformString);\n        }\n      }\n    };\n  },\n  hooks() {\n    return {\n      parseNodeAttributes(accumulator, node) {\n        const transformString = node.getAttribute('data-fa-transform');\n        if (transformString) {\n          accumulator.transform = parseTransformString(transformString);\n        }\n        return accumulator;\n      }\n    };\n  },\n  provides(providers) {\n    providers.generateAbstractTransformGrouping = function (_ref) {\n      let {\n        main,\n        transform,\n        containerWidth,\n        iconWidth\n      } = _ref;\n      const outer = {\n        transform: \"translate(\".concat(containerWidth / 2, \" 256)\")\n      };\n      const innerTranslate = \"translate(\".concat(transform.x * 32, \", \").concat(transform.y * 32, \") \");\n      const innerScale = \"scale(\".concat(transform.size / 16 * (transform.flipX ? -1 : 1), \", \").concat(transform.size / 16 * (transform.flipY ? -1 : 1), \") \");\n      const innerRotate = \"rotate(\".concat(transform.rotate, \" 0 0)\");\n      const inner = {\n        transform: \"\".concat(innerTranslate, \" \").concat(innerScale, \" \").concat(innerRotate)\n      };\n      const path = {\n        transform: \"translate(\".concat(iconWidth / 2 * -1, \" -256)\")\n      };\n      const operations = {\n        outer,\n        inner,\n        path\n      };\n      return {\n        tag: 'g',\n        attributes: _objectSpread2({}, operations.outer),\n        children: [{\n          tag: 'g',\n          attributes: _objectSpread2({}, operations.inner),\n          children: [{\n            tag: main.icon.tag,\n            children: main.icon.children,\n            attributes: _objectSpread2(_objectSpread2({}, main.icon.attributes), operations.path)\n          }]\n        }]\n      };\n    };\n  }\n};\n\nconst ALL_SPACE = {\n  x: 0,\n  y: 0,\n  width: '100%',\n  height: '100%'\n};\nfunction fillBlack(abstract) {\n  let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (abstract.attributes && (abstract.attributes.fill || force)) {\n    abstract.attributes.fill = 'black';\n  }\n  return abstract;\n}\nfunction deGroup(abstract) {\n  if (abstract.tag === 'g') {\n    return abstract.children;\n  } else {\n    return [abstract];\n  }\n}\nvar Masks = {\n  hooks() {\n    return {\n      parseNodeAttributes(accumulator, node) {\n        const maskData = node.getAttribute('data-fa-mask');\n        const mask = !maskData ? emptyCanonicalIcon() : getCanonicalIcon(maskData.split(' ').map(i => i.trim()));\n        if (!mask.prefix) {\n          mask.prefix = getDefaultUsablePrefix();\n        }\n        accumulator.mask = mask;\n        accumulator.maskId = node.getAttribute('data-fa-mask-id');\n        return accumulator;\n      }\n    };\n  },\n  provides(providers) {\n    providers.generateAbstractMask = function (_ref) {\n      let {\n        children,\n        attributes,\n        main,\n        mask,\n        maskId: explicitMaskId,\n        transform\n      } = _ref;\n      const {\n        width: mainWidth,\n        icon: mainPath\n      } = main;\n      const {\n        width: maskWidth,\n        icon: maskPath\n      } = mask;\n      const trans = transformForSvg({\n        transform,\n        containerWidth: maskWidth,\n        iconWidth: mainWidth\n      });\n      const maskRect = {\n        tag: 'rect',\n        attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {\n          fill: 'white'\n        })\n      };\n      const maskInnerGroupChildrenMixin = mainPath.children ? {\n        children: mainPath.children.map(fillBlack)\n      } : {};\n      const maskInnerGroup = {\n        tag: 'g',\n        attributes: _objectSpread2({}, trans.inner),\n        children: [fillBlack(_objectSpread2({\n          tag: mainPath.tag,\n          attributes: _objectSpread2(_objectSpread2({}, mainPath.attributes), trans.path)\n        }, maskInnerGroupChildrenMixin))]\n      };\n      const maskOuterGroup = {\n        tag: 'g',\n        attributes: _objectSpread2({}, trans.outer),\n        children: [maskInnerGroup]\n      };\n      const maskId = \"mask-\".concat(explicitMaskId || nextUniqueId());\n      const clipId = \"clip-\".concat(explicitMaskId || nextUniqueId());\n      const maskTag = {\n        tag: 'mask',\n        attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {\n          id: maskId,\n          maskUnits: 'userSpaceOnUse',\n          maskContentUnits: 'userSpaceOnUse'\n        }),\n        children: [maskRect, maskOuterGroup]\n      };\n      const defs = {\n        tag: 'defs',\n        children: [{\n          tag: 'clipPath',\n          attributes: {\n            id: clipId\n          },\n          children: deGroup(maskPath)\n        }, maskTag]\n      };\n      children.push(defs, {\n        tag: 'rect',\n        attributes: _objectSpread2({\n          fill: 'currentColor',\n          'clip-path': \"url(#\".concat(clipId, \")\"),\n          mask: \"url(#\".concat(maskId, \")\")\n        }, ALL_SPACE)\n      });\n      return {\n        children,\n        attributes\n      };\n    };\n  }\n};\n\nvar MissingIconIndicator = {\n  provides(providers) {\n    let reduceMotion = false;\n    if (WINDOW.matchMedia) {\n      reduceMotion = WINDOW.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    }\n    providers.missingIconAbstract = function () {\n      const gChildren = [];\n      const FILL = {\n        fill: 'currentColor'\n      };\n      const ANIMATION_BASE = {\n        attributeType: 'XML',\n        repeatCount: 'indefinite',\n        dur: '2s'\n      };\n\n      // Ring\n      gChildren.push({\n        tag: 'path',\n        attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {\n          d: 'M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z'\n        })\n      });\n      const OPACITY_ANIMATE = _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {\n        attributeName: 'opacity'\n      });\n      const dot = {\n        tag: 'circle',\n        attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {\n          cx: '256',\n          cy: '364',\n          r: '28'\n        }),\n        children: []\n      };\n      if (!reduceMotion) {\n        dot.children.push({\n          tag: 'animate',\n          attributes: _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {\n            attributeName: 'r',\n            values: '28;14;28;28;14;28;'\n          })\n        }, {\n          tag: 'animate',\n          attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {\n            values: '1;0;1;1;0;1;'\n          })\n        });\n      }\n      gChildren.push(dot);\n      gChildren.push({\n        tag: 'path',\n        attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {\n          opacity: '1',\n          d: 'M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z'\n        }),\n        children: reduceMotion ? [] : [{\n          tag: 'animate',\n          attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {\n            values: '1;0;0;0;0;1;'\n          })\n        }]\n      });\n      if (!reduceMotion) {\n        // Exclamation\n        gChildren.push({\n          tag: 'path',\n          attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {\n            opacity: '0',\n            d: 'M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z'\n          }),\n          children: [{\n            tag: 'animate',\n            attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {\n              values: '0;0;1;1;0;0;'\n            })\n          }]\n        });\n      }\n      return {\n        tag: 'g',\n        attributes: {\n          'class': 'missing'\n        },\n        children: gChildren\n      };\n    };\n  }\n};\n\nvar SvgSymbols = {\n  hooks() {\n    return {\n      parseNodeAttributes(accumulator, node) {\n        const symbolData = node.getAttribute('data-fa-symbol');\n        const symbol = symbolData === null ? false : symbolData === '' ? true : symbolData;\n        accumulator['symbol'] = symbol;\n        return accumulator;\n      }\n    };\n  }\n};\n\nvar plugins = [InjectCSS, ReplaceElements, Layers, LayersCounter, LayersText, PseudoElements, MutationObserver$1, PowerTransforms, Masks, MissingIconIndicator, SvgSymbols];\n\nregisterPlugins(plugins, {\n  mixoutsTo: api\n});\nconst noAuto$1 = api.noAuto;\nconst config$1 = api.config;\nconst library$1 = api.library;\nconst dom$1 = api.dom;\nconst parse$1 = api.parse;\nconst findIconDefinition$1 = api.findIconDefinition;\nconst toHtml$1 = api.toHtml;\nconst icon = api.icon;\nconst layer = api.layer;\nconst text = api.text;\nconst counter = api.counter;\n\nexport { noAuto$1 as noAuto, config$1 as config, library$1 as library, dom$1 as dom, parse$1 as parse, findIconDefinition$1 as findIconDefinition, toHtml$1 as toHtml, icon, layer, text, counter, api };\n","import { parse, icon } from '@fortawesome/fontawesome-svg-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n// Get CSS class list from a props object\nfunction classList(props) {\n  var _classes;\n\n  var beat = props.beat,\n      fade = props.fade,\n      beatFade = props.beatFade,\n      bounce = props.bounce,\n      shake = props.shake,\n      flash = props.flash,\n      spin = props.spin,\n      spinPulse = props.spinPulse,\n      spinReverse = props.spinReverse,\n      pulse = props.pulse,\n      fixedWidth = props.fixedWidth,\n      inverse = props.inverse,\n      border = props.border,\n      listItem = props.listItem,\n      flip = props.flip,\n      size = props.size,\n      rotation = props.rotation,\n      pull = props.pull; // map of CSS class names to properties\n\n  var classes = (_classes = {\n    'fa-beat': beat,\n    'fa-fade': fade,\n    'fa-beat-fade': beatFade,\n    'fa-bounce': bounce,\n    'fa-shake': shake,\n    'fa-flash': flash,\n    'fa-spin': spin,\n    'fa-spin-reverse': spinReverse,\n    'fa-spin-pulse': spinPulse,\n    'fa-pulse': pulse,\n    'fa-fw': fixedWidth,\n    'fa-inverse': inverse,\n    'fa-border': border,\n    'fa-li': listItem,\n    'fa-flip': flip === true,\n    'fa-flip-horizontal': flip === 'horizontal' || flip === 'both',\n    'fa-flip-vertical': flip === 'vertical' || flip === 'both'\n  }, _defineProperty(_classes, \"fa-\".concat(size), typeof size !== 'undefined' && size !== null), _defineProperty(_classes, \"fa-rotate-\".concat(rotation), typeof rotation !== 'undefined' && rotation !== null && rotation !== 0), _defineProperty(_classes, \"fa-pull-\".concat(pull), typeof pull !== 'undefined' && pull !== null), _defineProperty(_classes, 'fa-swap-opacity', props.swapOpacity), _classes); // map over all the keys in the classes object\n  // return an array of the keys where the value for the key is not null\n\n  return Object.keys(classes).map(function (key) {\n    return classes[key] ? key : null;\n  }).filter(function (key) {\n    return key;\n  });\n}\n\n// Camelize taken from humps\n// humps is copyright © 2012+ Dom Christie\n// Released under the MIT license.\n// Performant way to determine if object coerces to a number\nfunction _isNumerical(obj) {\n  obj = obj - 0; // eslint-disable-next-line no-self-compare\n\n  return obj === obj;\n}\n\nfunction camelize(string) {\n  if (_isNumerical(string)) {\n    return string;\n  } // eslint-disable-next-line no-useless-escape\n\n\n  string = string.replace(/[\\-_\\s]+(.)?/g, function (match, chr) {\n    return chr ? chr.toUpperCase() : '';\n  }); // Ensure 1st char is always lowercase\n\n  return string.substr(0, 1).toLowerCase() + string.substr(1);\n}\n\nvar _excluded = [\"style\"];\n\nfunction capitalize(val) {\n  return val.charAt(0).toUpperCase() + val.slice(1);\n}\n\nfunction styleToObject(style) {\n  return style.split(';').map(function (s) {\n    return s.trim();\n  }).filter(function (s) {\n    return s;\n  }).reduce(function (acc, pair) {\n    var i = pair.indexOf(':');\n    var prop = camelize(pair.slice(0, i));\n    var value = pair.slice(i + 1).trim();\n    prop.startsWith('webkit') ? acc[capitalize(prop)] = value : acc[prop] = value;\n    return acc;\n  }, {});\n}\n\nfunction convert(createElement, element) {\n  var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof element === 'string') {\n    return element;\n  }\n\n  var children = (element.children || []).map(function (child) {\n    return convert(createElement, child);\n  });\n  /* eslint-disable dot-notation */\n\n  var mixins = Object.keys(element.attributes || {}).reduce(function (acc, key) {\n    var val = element.attributes[key];\n\n    switch (key) {\n      case 'class':\n        acc.attrs['className'] = val;\n        delete element.attributes['class'];\n        break;\n\n      case 'style':\n        acc.attrs['style'] = styleToObject(val);\n        break;\n\n      default:\n        if (key.indexOf('aria-') === 0 || key.indexOf('data-') === 0) {\n          acc.attrs[key.toLowerCase()] = val;\n        } else {\n          acc.attrs[camelize(key)] = val;\n        }\n\n    }\n\n    return acc;\n  }, {\n    attrs: {}\n  });\n\n  var _extraProps$style = extraProps.style,\n      existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style,\n      remaining = _objectWithoutProperties(extraProps, _excluded);\n\n  mixins.attrs['style'] = _objectSpread2(_objectSpread2({}, mixins.attrs['style']), existingStyle);\n  /* eslint-enable */\n\n  return createElement.apply(void 0, [element.tag, _objectSpread2(_objectSpread2({}, mixins.attrs), remaining)].concat(_toConsumableArray(children)));\n}\n\nvar PRODUCTION = false;\n\ntry {\n  PRODUCTION = process.env.NODE_ENV === 'production';\n} catch (e) {}\n\nfunction log () {\n  if (!PRODUCTION && console && typeof console.error === 'function') {\n    var _console;\n\n    (_console = console).error.apply(_console, arguments);\n  }\n}\n\nfunction normalizeIconArgs(icon) {\n  // this has everything that it needs to be rendered which means it was probably imported\n  // directly from an icon svg package\n  if (icon && _typeof(icon) === 'object' && icon.prefix && icon.iconName && icon.icon) {\n    return icon;\n  }\n\n  if (parse.icon) {\n    return parse.icon(icon);\n  } // if the icon is null, there's nothing to do\n\n\n  if (icon === null) {\n    return null;\n  } // if the icon is an object and has a prefix and an icon name, return it\n\n\n  if (icon && _typeof(icon) === 'object' && icon.prefix && icon.iconName) {\n    return icon;\n  } // if it's an array with length of two\n\n\n  if (Array.isArray(icon) && icon.length === 2) {\n    // use the first item as prefix, second as icon name\n    return {\n      prefix: icon[0],\n      iconName: icon[1]\n    };\n  } // if it's a string, use it as the icon name\n\n\n  if (typeof icon === 'string') {\n    return {\n      prefix: 'fas',\n      iconName: icon\n    };\n  }\n}\n\n// creates an object with a key of key\n// and a value of value\n// if certain conditions are met\nfunction objectWithKey(key, value) {\n  // if the value is a non-empty array\n  // or it's not an array but it is truthy\n  // then create the object with the key and the value\n  // if not, return an empty array\n  return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? _defineProperty({}, key, value) : {};\n}\n\nvar defaultProps = {\n  border: false,\n  className: '',\n  mask: null,\n  maskId: null,\n  fixedWidth: false,\n  inverse: false,\n  flip: false,\n  icon: null,\n  listItem: false,\n  pull: null,\n  pulse: false,\n  rotation: null,\n  size: null,\n  spin: false,\n  spinPulse: false,\n  spinReverse: false,\n  beat: false,\n  fade: false,\n  beatFade: false,\n  bounce: false,\n  shake: false,\n  symbol: false,\n  title: '',\n  titleId: null,\n  transform: null,\n  swapOpacity: false\n};\nvar FontAwesomeIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var allProps = _objectSpread2(_objectSpread2({}, defaultProps), props);\n\n  var iconArgs = allProps.icon,\n      maskArgs = allProps.mask,\n      symbol = allProps.symbol,\n      className = allProps.className,\n      title = allProps.title,\n      titleId = allProps.titleId,\n      maskId = allProps.maskId;\n  var iconLookup = normalizeIconArgs(iconArgs);\n  var classes = objectWithKey('classes', [].concat(_toConsumableArray(classList(allProps)), _toConsumableArray((className || '').split(' '))));\n  var transform = objectWithKey('transform', typeof allProps.transform === 'string' ? parse.transform(allProps.transform) : allProps.transform);\n  var mask = objectWithKey('mask', normalizeIconArgs(maskArgs));\n  var renderedIcon = icon(iconLookup, _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, classes), transform), mask), {}, {\n    symbol: symbol,\n    title: title,\n    titleId: titleId,\n    maskId: maskId\n  }));\n\n  if (!renderedIcon) {\n    log('Could not find icon', iconLookup);\n    return null;\n  }\n\n  var abstract = renderedIcon.abstract;\n  var extraProps = {\n    ref: ref\n  };\n  Object.keys(allProps).forEach(function (key) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!defaultProps.hasOwnProperty(key)) {\n      extraProps[key] = allProps[key];\n    }\n  });\n  return convertCurry(abstract[0], extraProps);\n});\nFontAwesomeIcon.displayName = 'FontAwesomeIcon';\nFontAwesomeIcon.propTypes = {\n  beat: PropTypes.bool,\n  border: PropTypes.bool,\n  beatFade: PropTypes.bool,\n  bounce: PropTypes.bool,\n  className: PropTypes.string,\n  fade: PropTypes.bool,\n  flash: PropTypes.bool,\n  mask: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n  maskId: PropTypes.string,\n  fixedWidth: PropTypes.bool,\n  inverse: PropTypes.bool,\n  flip: PropTypes.oneOf([true, false, 'horizontal', 'vertical', 'both']),\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n  listItem: PropTypes.bool,\n  pull: PropTypes.oneOf(['right', 'left']),\n  pulse: PropTypes.bool,\n  rotation: PropTypes.oneOf([0, 90, 180, 270]),\n  shake: PropTypes.bool,\n  size: PropTypes.oneOf(['2xs', 'xs', 'sm', 'lg', 'xl', '2xl', '1x', '2x', '3x', '4x', '5x', '6x', '7x', '8x', '9x', '10x']),\n  spin: PropTypes.bool,\n  spinPulse: PropTypes.bool,\n  spinReverse: PropTypes.bool,\n  symbol: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  title: PropTypes.string,\n  titleId: PropTypes.string,\n  transform: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  swapOpacity: PropTypes.bool\n};\nvar convertCurry = convert.bind(null, React.createElement);\n\nexport { FontAwesomeIcon };\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid = false,\n  rounded = false,\n  roundedCircle = false,\n  thumbnail = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nexport default Image;","import * as React from 'react'\nexport * from '@tanstack/table-core'\n\nimport {\n  TableOptions,\n  TableOptionsResolved,\n  RowData,\n  createTable,\n} from '@tanstack/table-core'\n\nexport type Renderable<TProps> = React.ReactNode | React.ComponentType<TProps>\n\n//\n\n/**\n * If rendering headers, cells, or footers with custom markup, use flexRender instead of `cell.getValue()` or `cell.renderValue()`.\n */\nexport function flexRender<TProps extends object>(\n  Comp: Renderable<TProps>,\n  props: TProps\n): React.ReactNode | React.JSX.Element {\n  return !Comp ? null : isReactComponent<TProps>(Comp) ? (\n    <Comp {...props} />\n  ) : (\n    Comp\n  )\n}\n\nfunction isReactComponent<TProps>(\n  component: unknown\n): component is React.ComponentType<TProps> {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component: any) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component: any) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n\nexport function useReactTable<TData extends RowData>(\n  options: TableOptions<TData>\n) {\n  // Compose in the generic options to the user options\n  const resolvedOptions: TableOptionsResolved<TData> = {\n    state: {}, // Dummy state\n    onStateChange: () => {}, // noop\n    renderFallbackValue: null,\n    ...options,\n  }\n\n  // Create a new table and store it in state\n  const [tableRef] = React.useState(() => ({\n    current: createTable<TData>(resolvedOptions),\n  }))\n\n  // By default, manage table state here using the table's initial state\n  const [state, setState] = React.useState(() => tableRef.current.initialState)\n\n  // Compose the default state above with any user state. This will allow the user\n  // to only control a subset of the state if desired.\n  tableRef.current.setOptions(prev => ({\n    ...prev,\n    ...options,\n    state: {\n      ...state,\n      ...options.state,\n    },\n    // Similarly, we'll maintain both our internal state and any user-provided\n    // state.\n    onStateChange: updater => {\n      setState(updater)\n      options.onStateChange?.(updater)\n    },\n  }))\n\n  return tableRef.current\n}\n","import { TableOptionsResolved, TableState, Updater } from './types'\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\nexport type RequiredKeys<T, K extends keyof T> = Omit<T, K> &\n  Required<Pick<T, K>>\nexport type Overwrite<T, U extends { [TKey in keyof T]?: any }> = Omit<\n  T,\n  keyof U\n> &\n  U\n\nexport type UnionToIntersection<T> = (\n  T extends any ? (x: T) => any : never\n) extends (x: infer R) => any\n  ? R\n  : never\n\nexport type IsAny<T, Y, N> = 1 extends 0 & T ? Y : N\nexport type IsKnown<T, Y, N> = unknown extends T ? N : Y\n\ntype ComputeRange<\n  N extends number,\n  Result extends Array<unknown> = [],\n> = Result['length'] extends N\n  ? Result\n  : ComputeRange<N, [...Result, Result['length']]>\ntype Index40 = ComputeRange<40>[number]\n\n// Is this type a tuple?\ntype IsTuple<T> = T extends readonly any[] & { length: infer Length }\n  ? Length extends Index40\n    ? T\n    : never\n  : never\n\n// If this type is a tuple, what indices are allowed?\ntype AllowedIndexes<\n  Tuple extends ReadonlyArray<any>,\n  Keys extends number = never,\n> = Tuple extends readonly []\n  ? Keys\n  : Tuple extends readonly [infer _, ...infer Tail]\n    ? AllowedIndexes<Tail, Keys | Tail['length']>\n    : Keys\n\nexport type DeepKeys<T, TDepth extends any[] = []> = TDepth['length'] extends 5\n  ? never\n  : unknown extends T\n    ? string\n    : T extends readonly any[] & IsTuple<T>\n      ? AllowedIndexes<T> | DeepKeysPrefix<T, AllowedIndexes<T>, TDepth>\n      : T extends any[]\n        ? DeepKeys<T[number], [...TDepth, any]>\n        : T extends Date\n          ? never\n          : T extends object\n            ? (keyof T & string) | DeepKeysPrefix<T, keyof T, TDepth>\n            : never\n\ntype DeepKeysPrefix<\n  T,\n  TPrefix,\n  TDepth extends any[],\n> = TPrefix extends keyof T & (number | string)\n  ? `${TPrefix}.${DeepKeys<T[TPrefix], [...TDepth, any]> & string}`\n  : never\n\nexport type DeepValue<T, TProp> =\n  T extends Record<string | number, any>\n    ? TProp extends `${infer TBranch}.${infer TDeepProp}`\n      ? DeepValue<T[TBranch], TDeepProp>\n      : T[TProp & string]\n    : never\n\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\n\nexport type Getter<TValue> = <TTValue = TValue>() => NoInfer<TTValue>\n\n///\n\nexport function functionalUpdate<T>(updater: Updater<T>, input: T): T {\n  return typeof updater === 'function'\n    ? (updater as (input: T) => T)(input)\n    : updater\n}\n\nexport function noop() {\n  //\n}\n\nexport function makeStateUpdater<K extends keyof TableState>(\n  key: K,\n  instance: unknown\n) {\n  return (updater: Updater<TableState[K]>) => {\n    ;(instance as any).setState(<TTableState>(old: TTableState) => {\n      return {\n        ...old,\n        [key]: functionalUpdate(updater, (old as any)[key]),\n      }\n    })\n  }\n}\n\ntype AnyFunction = (...args: any) => any\n\nexport function isFunction<T extends AnyFunction>(d: any): d is T {\n  return d instanceof Function\n}\n\nexport function isNumberArray(d: any): d is number[] {\n  return Array.isArray(d) && d.every(val => typeof val === 'number')\n}\n\nexport function flattenBy<TNode>(\n  arr: TNode[],\n  getChildren: (item: TNode) => TNode[]\n) {\n  const flat: TNode[] = []\n\n  const recurse = (subArr: TNode[]) => {\n    subArr.forEach(item => {\n      flat.push(item)\n      const children = getChildren(item)\n      if (children?.length) {\n        recurse(children)\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function memo<TDeps extends readonly any[], TDepArgs, TResult>(\n  getDeps: (depArgs?: TDepArgs) => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: any\n    debug?: () => any\n    onChange?: (result: TResult) => void\n  }\n): (depArgs?: TDepArgs) => TResult {\n  let deps: any[] = []\n  let result: TResult | undefined\n\n  return depArgs => {\n    let depTime: number\n    if (opts.key && opts.debug) depTime = Date.now()\n\n    const newDeps = getDeps(depArgs)\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug) resultTime = Date.now()\n\n    result = fn(...newDeps)\n    opts?.onChange?.(result)\n\n    if (opts.key && opts.debug) {\n      if (opts?.debug()) {\n        const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n        const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n        const resultFpsPercentage = resultEndTime / 16\n\n        const pad = (str: number | string, num: number) => {\n          str = String(str)\n          while (str.length < num) {\n            str = ' ' + str\n          }\n          return str\n        }\n\n        console.info(\n          `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n          `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120)\n            )}deg 100% 31%);`,\n          opts?.key\n        )\n      }\n    }\n\n    return result!\n  }\n}\n\nexport function getMemoOptions(\n  tableOptions: Partial<TableOptionsResolved<any>>,\n  debugLevel:\n    | 'debugAll'\n    | 'debugCells'\n    | 'debugTable'\n    | 'debugColumns'\n    | 'debugRows'\n    | 'debugHeaders',\n  key: string,\n  onChange?: (result: any) => void\n) {\n  return {\n    debug: () => tableOptions?.debugAll ?? tableOptions[debugLevel],\n    key: process.env.NODE_ENV === 'development' && key,\n    onChange,\n  }\n}\n","import {\n  RowData,\n  Column,\n  Header,\n  HeaderGroup,\n  Table,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nconst debug = 'debugHeaders'\n\nexport interface CoreHeaderGroup<TData extends RowData> {\n  depth: number\n  headers: Header<TData, unknown>[]\n  id: string\n}\n\nexport interface HeaderContext<TData, TValue> {\n  /**\n   * An instance of a column.\n   */\n  column: Column<TData, TValue>\n  /**\n   * An instance of a header.\n   */\n  header: Header<TData, TValue>\n  /**\n   * The table instance.\n   */\n  table: Table<TData>\n}\n\nexport interface CoreHeader<TData extends RowData, TValue> {\n  /**\n   * The col-span for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#colspan)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  colSpan: number\n  /**\n   * The header's associated column object.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#column)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  column: Column<TData, TValue>\n  /**\n   * The depth of the header, zero-indexed based.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  depth: number\n  /**\n   * Returns the rendering context (or props) for column-based components like headers, footers and filters.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#getcontext)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getContext: () => HeaderContext<TData, TValue>\n  /**\n   * Returns the leaf headers hierarchically nested under this header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#getleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * The header's associated header group object.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#headergroup)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  headerGroup: HeaderGroup<TData>\n  /**\n   * The unique identifier for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  id: string\n  /**\n   * The index for the header within the header group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#index)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  index: number\n  /**\n   * A boolean denoting if the header is a placeholder header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#isplaceholder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  isPlaceholder: boolean\n  /**\n   * If the header is a placeholder header, this will be a unique header ID that does not conflict with any other headers across the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#placeholderid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  placeholderId?: string\n  /**\n   * The row-span for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#rowspan)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  rowSpan: number\n  /**\n   * The header's hierarchical sub/child headers. Will be empty if the header's associated column is a leaf-column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#subheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  subHeaders: Header<TData, TValue>[]\n}\n\nexport interface HeadersInstance<TData extends RowData> {\n  /**\n   * Returns all header groups for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for the left pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for columns that are not pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for the right pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightHeaderGroups: () => HeaderGroup<TData>[]\n\n  /**\n   * Returns the footer groups for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for the left pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for columns that are not pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for the right pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightFooterGroups: () => HeaderGroup<TData>[]\n\n  /**\n   * Returns headers for all columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all left pinned columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all columns that are not pinned, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all right pinned columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightFlatHeaders: () => Header<TData, unknown>[]\n\n  /**\n   * Returns headers for all leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all left pinned leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all columns that are not pinned, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all right pinned leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightLeafHeaders: () => Header<TData, unknown>[]\n}\n\n//\n\nfunction createHeader<TData extends RowData, TValue>(\n  table: Table<TData>,\n  column: Column<TData, TValue>,\n  options: {\n    id?: string\n    isPlaceholder?: boolean\n    placeholderId?: string\n    index: number\n    depth: number\n  }\n): Header<TData, TValue> {\n  const id = options.id ?? column.id\n\n  let header: CoreHeader<TData, TValue> = {\n    id,\n    column,\n    index: options.index,\n    isPlaceholder: !!options.isPlaceholder,\n    placeholderId: options.placeholderId,\n    depth: options.depth,\n    subHeaders: [],\n    colSpan: 0,\n    rowSpan: 0,\n    headerGroup: null!,\n    getLeafHeaders: (): Header<TData, unknown>[] => {\n      const leafHeaders: Header<TData, unknown>[] = []\n\n      const recurseHeader = (h: CoreHeader<TData, any>) => {\n        if (h.subHeaders && h.subHeaders.length) {\n          h.subHeaders.map(recurseHeader)\n        }\n        leafHeaders.push(h as Header<TData, unknown>)\n      }\n\n      recurseHeader(header)\n\n      return leafHeaders\n    },\n    getContext: () => ({\n      table,\n      header: header as Header<TData, TValue>,\n      column,\n    }),\n  }\n\n  table._features.forEach(feature => {\n    feature.createHeader?.(header as Header<TData, TValue>, table)\n  })\n\n  return header as Header<TData, TValue>\n}\n\nexport const Headers: TableFeature = {\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    // Header Groups\n\n    table.getHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, left, right) => {\n        const leftColumns =\n          left\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        const rightColumns =\n          right\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        const centerColumns = leafColumns.filter(\n          column => !left?.includes(column.id) && !right?.includes(column.id)\n        )\n\n        const headerGroups = buildHeaderGroups(\n          allColumns,\n          [...leftColumns, ...centerColumns, ...rightColumns],\n          table\n        )\n\n        return headerGroups\n      },\n      getMemoOptions(table.options, debug, 'getHeaderGroups')\n    )\n\n    table.getCenterHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, left, right) => {\n        leafColumns = leafColumns.filter(\n          column => !left?.includes(column.id) && !right?.includes(column.id)\n        )\n        return buildHeaderGroups(allColumns, leafColumns, table, 'center')\n      },\n      getMemoOptions(table.options, debug, 'getCenterHeaderGroups')\n    )\n\n    table.getLeftHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n      ],\n      (allColumns, leafColumns, left) => {\n        const orderedLeafColumns =\n          left\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'left')\n      },\n      getMemoOptions(table.options, debug, 'getLeftHeaderGroups')\n    )\n\n    table.getRightHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, right) => {\n        const orderedLeafColumns =\n          right\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'right')\n      },\n      getMemoOptions(table.options, debug, 'getRightHeaderGroups')\n    )\n\n    // Footer Groups\n\n    table.getFooterGroups = memo(\n      () => [table.getHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getFooterGroups')\n    )\n\n    table.getLeftFooterGroups = memo(\n      () => [table.getLeftHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getLeftFooterGroups')\n    )\n\n    table.getCenterFooterGroups = memo(\n      () => [table.getCenterHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getCenterFooterGroups')\n    )\n\n    table.getRightFooterGroups = memo(\n      () => [table.getRightHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getRightFooterGroups')\n    )\n\n    // Flat Headers\n\n    table.getFlatHeaders = memo(\n      () => [table.getHeaderGroups()],\n      headerGroups => {\n        return headerGroups\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getFlatHeaders')\n    )\n\n    table.getLeftFlatHeaders = memo(\n      () => [table.getLeftHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getLeftFlatHeaders')\n    )\n\n    table.getCenterFlatHeaders = memo(\n      () => [table.getCenterHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getCenterFlatHeaders')\n    )\n\n    table.getRightFlatHeaders = memo(\n      () => [table.getRightHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getRightFlatHeaders')\n    )\n\n    // Leaf Headers\n\n    table.getCenterLeafHeaders = memo(\n      () => [table.getCenterFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      getMemoOptions(table.options, debug, 'getCenterLeafHeaders')\n    )\n\n    table.getLeftLeafHeaders = memo(\n      () => [table.getLeftFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      getMemoOptions(table.options, debug, 'getLeftLeafHeaders')\n    )\n\n    table.getRightLeafHeaders = memo(\n      () => [table.getRightFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      getMemoOptions(table.options, debug, 'getRightLeafHeaders')\n    )\n\n    table.getLeafHeaders = memo(\n      () => [\n        table.getLeftHeaderGroups(),\n        table.getCenterHeaderGroups(),\n        table.getRightHeaderGroups(),\n      ],\n      (left, center, right) => {\n        return [\n          ...(left[0]?.headers ?? []),\n          ...(center[0]?.headers ?? []),\n          ...(right[0]?.headers ?? []),\n        ]\n          .map(header => {\n            return header.getLeafHeaders()\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getLeafHeaders')\n    )\n  },\n}\n\nexport function buildHeaderGroups<TData extends RowData>(\n  allColumns: Column<TData, unknown>[],\n  columnsToGroup: Column<TData, unknown>[],\n  table: Table<TData>,\n  headerFamily?: 'center' | 'left' | 'right'\n) {\n  // Find the max depth of the columns:\n  // build the leaf column row\n  // build each buffer row going up\n  //    placeholder for non-existent level\n  //    real column for existing level\n\n  let maxDepth = 0\n\n  const findMaxDepth = (columns: Column<TData, unknown>[], depth = 1) => {\n    maxDepth = Math.max(maxDepth, depth)\n\n    columns\n      .filter(column => column.getIsVisible())\n      .forEach(column => {\n        if (column.columns?.length) {\n          findMaxDepth(column.columns, depth + 1)\n        }\n      }, 0)\n  }\n\n  findMaxDepth(allColumns)\n\n  let headerGroups: HeaderGroup<TData>[] = []\n\n  const createHeaderGroup = (\n    headersToGroup: Header<TData, unknown>[],\n    depth: number\n  ) => {\n    // The header group we are creating\n    const headerGroup: HeaderGroup<TData> = {\n      depth,\n      id: [headerFamily, `${depth}`].filter(Boolean).join('_'),\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const pendingParentHeaders: Header<TData, unknown>[] = []\n\n    // Scan each column for parents\n    headersToGroup.forEach(headerToGroup => {\n      // What is the latest (last) parent column?\n\n      const latestPendingParentHeader = [...pendingParentHeaders].reverse()[0]\n\n      const isLeafHeader = headerToGroup.column.depth === headerGroup.depth\n\n      let column: Column<TData, unknown>\n      let isPlaceholder = false\n\n      if (isLeafHeader && headerToGroup.column.parent) {\n        // The parent header is new\n        column = headerToGroup.column.parent\n      } else {\n        // The parent header is repeated\n        column = headerToGroup.column\n        isPlaceholder = true\n      }\n\n      if (\n        latestPendingParentHeader &&\n        latestPendingParentHeader?.column === column\n      ) {\n        // This column is repeated. Add it as a sub header to the next batch\n        latestPendingParentHeader.subHeaders.push(headerToGroup)\n      } else {\n        // This is a new header. Let's create it\n        const header = createHeader(table, column, {\n          id: [headerFamily, depth, column.id, headerToGroup?.id]\n            .filter(Boolean)\n            .join('_'),\n          isPlaceholder,\n          placeholderId: isPlaceholder\n            ? `${pendingParentHeaders.filter(d => d.column === column).length}`\n            : undefined,\n          depth,\n          index: pendingParentHeaders.length,\n        })\n\n        // Add the headerToGroup as a subHeader of the new header\n        header.subHeaders.push(headerToGroup)\n        // Add the new header to the pendingParentHeaders to get grouped\n        // in the next batch\n        pendingParentHeaders.push(header)\n      }\n\n      headerGroup.headers.push(headerToGroup)\n      headerToGroup.headerGroup = headerGroup\n    })\n\n    headerGroups.push(headerGroup)\n\n    if (depth > 0) {\n      createHeaderGroup(pendingParentHeaders, depth - 1)\n    }\n  }\n\n  const bottomHeaders = columnsToGroup.map((column, index) =>\n    createHeader(table, column, {\n      depth: maxDepth,\n      index,\n    })\n  )\n\n  createHeaderGroup(bottomHeaders, maxDepth - 1)\n\n  headerGroups.reverse()\n\n  // headerGroups = headerGroups.filter(headerGroup => {\n  //   return !headerGroup.headers.every(header => header.isPlaceholder)\n  // })\n\n  const recurseHeadersForSpans = (\n    headers: Header<TData, unknown>[]\n  ): { colSpan: number; rowSpan: number }[] => {\n    const filteredHeaders = headers.filter(header =>\n      header.column.getIsVisible()\n    )\n\n    return filteredHeaders.map(header => {\n      let colSpan = 0\n      let rowSpan = 0\n      let childRowSpans = [0]\n\n      if (header.subHeaders && header.subHeaders.length) {\n        childRowSpans = []\n\n        recurseHeadersForSpans(header.subHeaders).forEach(\n          ({ colSpan: childColSpan, rowSpan: childRowSpan }) => {\n            colSpan += childColSpan\n            childRowSpans.push(childRowSpan)\n          }\n        )\n      } else {\n        colSpan = 1\n      }\n\n      const minChildRowSpan = Math.min(...childRowSpans)\n      rowSpan = rowSpan + minChildRowSpan\n\n      header.colSpan = colSpan\n      header.rowSpan = rowSpan\n\n      return { colSpan, rowSpan }\n    })\n  }\n\n  recurseHeadersForSpans(headerGroups[0]?.headers ?? [])\n\n  return headerGroups\n}\n","import { RowData, Cell, Row, Table } from '../types'\nimport { flattenBy, getMemoOptions, memo } from '../utils'\nimport { createCell } from './cell'\n\nexport interface CoreRow<TData extends RowData> {\n  _getAllCellsByColumnId: () => Record<string, Cell<TData, unknown>>\n  _uniqueValuesCache: Record<string, unknown>\n  _valuesCache: Record<string, unknown>\n  /**\n   * The depth of the row (if nested or grouped) relative to the root row array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  depth: number\n  /**\n   * Returns all of the cells for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getallcells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getAllCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns the leaf rows for the row, not including any parent rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getleafrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getLeafRows: () => Row<TData>[]\n  /**\n   * Returns the parent row for the row, if it exists.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getparentrow)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getParentRow: () => Row<TData> | undefined\n  /**\n   * Returns the parent rows for the row, all the way up to a root row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getparentrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getParentRows: () => Row<TData>[]\n  /**\n   * Returns a unique array of values from the row for a given columnId.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getuniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getUniqueValues: <TValue>(columnId: string) => TValue[]\n  /**\n   * Returns the value from the row for a given columnId.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getValue: <TValue>(columnId: string) => TValue\n  /**\n   * The resolved unique identifier for the row resolved via the `options.getRowId` option. Defaults to the row's index (or relative index if it is a subRow).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  id: string\n  /**\n   * The index of the row within its parent array (or the root data array).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#index)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  index: number\n  /**\n   * The original row object provided to the table. If the row is a grouped row, the original row object will be the first original in the group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#original)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  original: TData\n  /**\n   * An array of the original subRows as returned by the `options.getSubRows` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#originalsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  originalSubRows?: TData[]\n  /**\n   * If nested, this row's parent row id.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#parentid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  parentId?: string\n  /**\n   * Renders the value for the row in a given columnId the same as `getValue`, but will return the `renderFallbackValue` if no value is found.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#rendervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  renderValue: <TValue>(columnId: string) => TValue\n  /**\n   * An array of subRows for the row as returned and created by the `options.getSubRows` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#subrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  subRows: Row<TData>[]\n}\n\nexport const createRow = <TData extends RowData>(\n  table: Table<TData>,\n  id: string,\n  original: TData,\n  rowIndex: number,\n  depth: number,\n  subRows?: Row<TData>[],\n  parentId?: string\n): Row<TData> => {\n  let row: CoreRow<TData> = {\n    id,\n    index: rowIndex,\n    original,\n    depth,\n    parentId,\n    _valuesCache: {},\n    _uniqueValuesCache: {},\n    getValue: columnId => {\n      if (row._valuesCache.hasOwnProperty(columnId)) {\n        return row._valuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.accessorFn) {\n        return undefined\n      }\n\n      row._valuesCache[columnId] = column.accessorFn(\n        row.original as TData,\n        rowIndex\n      )\n\n      return row._valuesCache[columnId] as any\n    },\n    getUniqueValues: columnId => {\n      if (row._uniqueValuesCache.hasOwnProperty(columnId)) {\n        return row._uniqueValuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.accessorFn) {\n        return undefined\n      }\n\n      if (!column.columnDef.getUniqueValues) {\n        row._uniqueValuesCache[columnId] = [row.getValue(columnId)]\n        return row._uniqueValuesCache[columnId]\n      }\n\n      row._uniqueValuesCache[columnId] = column.columnDef.getUniqueValues(\n        row.original as TData,\n        rowIndex\n      )\n\n      return row._uniqueValuesCache[columnId] as any\n    },\n    renderValue: columnId =>\n      row.getValue(columnId) ?? table.options.renderFallbackValue,\n    subRows: subRows ?? [],\n    getLeafRows: () => flattenBy(row.subRows, d => d.subRows),\n    getParentRow: () =>\n      row.parentId ? table.getRow(row.parentId, true) : undefined,\n    getParentRows: () => {\n      let parentRows: Row<TData>[] = []\n      let currentRow = row\n      while (true) {\n        const parentRow = currentRow.getParentRow()\n        if (!parentRow) break\n        parentRows.push(parentRow)\n        currentRow = parentRow\n      }\n      return parentRows.reverse()\n    },\n    getAllCells: memo(\n      () => [table.getAllLeafColumns()],\n      leafColumns => {\n        return leafColumns.map(column => {\n          return createCell(table, row as Row<TData>, column, column.id)\n        })\n      },\n      getMemoOptions(table.options, 'debugRows', 'getAllCells')\n    ),\n\n    _getAllCellsByColumnId: memo(\n      () => [row.getAllCells()],\n      allCells => {\n        return allCells.reduce(\n          (acc, cell) => {\n            acc[cell.column.id] = cell\n            return acc\n          },\n          {} as Record<string, Cell<TData, unknown>>\n        )\n      },\n      getMemoOptions(table.options, 'debugRows', 'getAllCellsByColumnId')\n    ),\n  }\n\n  for (let i = 0; i < table._features.length; i++) {\n    const feature = table._features[i]\n    feature?.createRow?.(row as Row<TData>, table)\n  }\n\n  return row as Row<TData>\n}\n","import { RowData, Cell, Column, Row, Table } from '../types'\nimport { Getter, getMemoOptions, memo } from '../utils'\n\nexport interface CellContext<TData extends RowData, TValue> {\n  cell: Cell<TData, TValue>\n  column: Column<TData, TValue>\n  getValue: Getter<TValue>\n  renderValue: Getter<TValue | null>\n  row: Row<TData>\n  table: Table<TData>\n}\n\nexport interface CoreCell<TData extends RowData, TValue> {\n  /**\n   * The associated Column object for the cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#column)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  column: Column<TData, TValue>\n  /**\n   * Returns the rendering context (or props) for cell-based components like cells and aggregated cells. Use these props with your framework's `flexRender` utility to render these using the template of your choice:\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#getcontext)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  getContext: () => CellContext<TData, TValue>\n  /**\n   * Returns the value for the cell, accessed via the associated column's accessor key or accessor function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#getvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  getValue: CellContext<TData, TValue>['getValue']\n  /**\n   * The unique ID for the cell across the entire table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  id: string\n  /**\n   * Renders the value for a cell the same as `getValue`, but will return the `renderFallbackValue` if no value is found.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#rendervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  renderValue: CellContext<TData, TValue>['renderValue']\n  /**\n   * The associated Row object for the cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#row)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  row: Row<TData>\n}\n\nexport function createCell<TData extends RowData, TValue>(\n  table: Table<TData>,\n  row: Row<TData>,\n  column: Column<TData, TValue>,\n  columnId: string\n): Cell<TData, TValue> {\n  const getRenderValue = () =>\n    cell.getValue() ?? table.options.renderFallbackValue\n\n  const cell: CoreCell<TData, TValue> = {\n    id: `${row.id}_${column.id}`,\n    row,\n    column,\n    getValue: () => row.getValue(columnId),\n    renderValue: getRenderValue,\n    getContext: memo(\n      () => [table, column, row, cell],\n      (table, column, row, cell) => ({\n        table,\n        column,\n        row,\n        cell: cell as Cell<TData, TValue>,\n        getValue: cell.getValue,\n        renderValue: cell.renderValue,\n      }),\n      getMemoOptions(table.options, 'debugCells', 'cell.getContext')\n    ),\n  }\n\n  table._features.forEach(feature => {\n    feature.createCell?.(\n      cell as Cell<TData, TValue>,\n      column,\n      row as Row<TData>,\n      table\n    )\n  }, {})\n\n  return cell as Cell<TData, TValue>\n}\n","import { RowModel } from '..'\nimport { Column, RowData, Table, TableFeature } from '../types'\n\nexport interface FacetedColumn<TData extends RowData> {\n  _getFacetedMinMaxValues?: () => undefined | [number, number]\n  _getFacetedRowModel?: () => RowModel<TData>\n  _getFacetedUniqueValues?: () => Map<any, number>\n  /**\n   * A function that **computes and returns** a min/max tuple derived from `column.getFacetedRowModel`. Useful for displaying faceted result values.\n   * > ⚠️ Requires that you pass a valid `getFacetedMinMaxValues` function to `options.getFacetedMinMaxValues`. A default implementation is provided via the exported `getFacetedMinMaxValues` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-faceting#getfacetedminmaxvalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-faceting)\n   */\n  getFacetedMinMaxValues: () => undefined | [number, number]\n  /**\n   * Returns the row model with all other column filters applied, excluding its own filter. Useful for displaying faceted result counts.\n   * > ⚠️ Requires that you pass a valid `getFacetedRowModel` function to `options.facetedRowModel`. A default implementation is provided via the exported `getFacetedRowModel` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-faceting#getfacetedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-faceting)\n   */\n  getFacetedRowModel: () => RowModel<TData>\n  /**\n   * A function that **computes and returns** a `Map` of unique values and their occurrences derived from `column.getFacetedRowModel`. Useful for displaying faceted result values.\n   * > ⚠️ Requires that you pass a valid `getFacetedUniqueValues` function to `options.getFacetedUniqueValues`. A default implementation is provided via the exported `getFacetedUniqueValues` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-faceting#getfaceteduniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-faceting)\n   */\n  getFacetedUniqueValues: () => Map<any, number>\n}\n\nexport interface FacetedOptions<TData extends RowData> {\n  getFacetedMinMaxValues?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => undefined | [number, number]\n  getFacetedRowModel?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => RowModel<TData>\n  getFacetedUniqueValues?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => Map<any, number>\n}\n\n//\n\nexport const ColumnFaceting: TableFeature = {\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column._getFacetedRowModel =\n      table.options.getFacetedRowModel &&\n      table.options.getFacetedRowModel(table, column.id)\n    column.getFacetedRowModel = () => {\n      if (!column._getFacetedRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return column._getFacetedRowModel()\n    }\n    column._getFacetedUniqueValues =\n      table.options.getFacetedUniqueValues &&\n      table.options.getFacetedUniqueValues(table, column.id)\n    column.getFacetedUniqueValues = () => {\n      if (!column._getFacetedUniqueValues) {\n        return new Map()\n      }\n\n      return column._getFacetedUniqueValues()\n    }\n    column._getFacetedMinMaxValues =\n      table.options.getFacetedMinMaxValues &&\n      table.options.getFacetedMinMaxValues(table, column.id)\n    column.getFacetedMinMaxValues = () => {\n      if (!column._getFacetedMinMaxValues) {\n        return undefined\n      }\n\n      return column._getFacetedMinMaxValues()\n    }\n  },\n}\n","import { FilterFn } from './features/ColumnFiltering'\n\nconst includesString: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  const search = filterValue?.toString()?.toLowerCase()\n  return Boolean(\n    row\n      .getValue<string | null>(columnId)\n      ?.toString()\n      ?.toLowerCase()\n      ?.includes(search)\n  )\n}\n\nincludesString.autoRemove = (val: any) => testFalsey(val)\n\nconst includesStringSensitive: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  return Boolean(\n    row.getValue<string | null>(columnId)?.toString()?.includes(filterValue)\n  )\n}\n\nincludesStringSensitive.autoRemove = (val: any) => testFalsey(val)\n\nconst equalsString: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  return (\n    row.getValue<string | null>(columnId)?.toString()?.toLowerCase() ===\n    filterValue?.toLowerCase()\n  )\n}\n\nequalsString.autoRemove = (val: any) => testFalsey(val)\n\nconst arrIncludes: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown\n) => {\n  return row.getValue<unknown[]>(columnId)?.includes(filterValue)\n}\n\narrIncludes.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst arrIncludesAll: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown[]\n) => {\n  return !filterValue.some(\n    val => !row.getValue<unknown[]>(columnId)?.includes(val)\n  )\n}\n\narrIncludesAll.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst arrIncludesSome: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown[]\n) => {\n  return filterValue.some(val =>\n    row.getValue<unknown[]>(columnId)?.includes(val)\n  )\n}\n\narrIncludesSome.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst equals: FilterFn<any> = (row, columnId: string, filterValue: unknown) => {\n  return row.getValue(columnId) === filterValue\n}\n\nequals.autoRemove = (val: any) => testFalsey(val)\n\nconst weakEquals: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown\n) => {\n  return row.getValue(columnId) == filterValue\n}\n\nweakEquals.autoRemove = (val: any) => testFalsey(val)\n\nconst inNumberRange: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: [number, number]\n) => {\n  let [min, max] = filterValue\n\n  const rowValue = row.getValue<number>(columnId)\n  return rowValue >= min && rowValue <= max\n}\n\ninNumberRange.resolveFilterValue = (val: [any, any]) => {\n  let [unsafeMin, unsafeMax] = val\n\n  let parsedMin =\n    typeof unsafeMin !== 'number' ? parseFloat(unsafeMin as string) : unsafeMin\n  let parsedMax =\n    typeof unsafeMax !== 'number' ? parseFloat(unsafeMax as string) : unsafeMax\n\n  let min =\n    unsafeMin === null || Number.isNaN(parsedMin) ? -Infinity : parsedMin\n  let max = unsafeMax === null || Number.isNaN(parsedMax) ? Infinity : parsedMax\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return [min, max] as const\n}\n\ninNumberRange.autoRemove = (val: any) =>\n  testFalsey(val) || (testFalsey(val[0]) && testFalsey(val[1]))\n\n// Export\n\nexport const filterFns = {\n  includesString,\n  includesStringSensitive,\n  equalsString,\n  arrIncludes,\n  arrIncludesAll,\n  arrIncludesSome,\n  equals,\n  weakEquals,\n  inNumberRange,\n}\n\nexport type BuiltInFilterFn = keyof typeof filterFns\n\n// Utils\n\nfunction testFalsey(val: any) {\n  return val === undefined || val === null || val === ''\n}\n","import { RowModel } from '..'\nimport { BuiltInFilterFn, filterFns } from '../filterFns'\nimport {\n  Column,\n  FilterFns,\n  FilterMeta,\n  OnChangeFn,\n  Row,\n  RowData,\n  Table,\n  TableFeature,\n  Updater,\n} from '../types'\nimport { functionalUpdate, isFunction, makeStateUpdater } from '../utils'\n\nexport interface ColumnFiltersTableState {\n  columnFilters: ColumnFiltersState\n}\n\nexport type ColumnFiltersState = ColumnFilter[]\n\nexport interface ColumnFilter {\n  id: string\n  value: unknown\n}\n\nexport interface ResolvedColumnFilter<TData extends RowData> {\n  filterFn: FilterFn<TData>\n  id: string\n  resolvedValue: unknown\n}\n\nexport interface FilterFn<TData extends RowData> {\n  (\n    row: Row<TData>,\n    columnId: string,\n    filterValue: any,\n    addMeta: (meta: FilterMeta) => void\n  ): boolean\n  autoRemove?: ColumnFilterAutoRemoveTestFn<TData>\n  resolveFilterValue?: TransformFilterValueFn<TData>\n}\n\nexport type TransformFilterValueFn<TData extends RowData> = (\n  value: any,\n  column?: Column<TData, unknown>\n) => unknown\n\nexport type ColumnFilterAutoRemoveTestFn<TData extends RowData> = (\n  value: any,\n  column?: Column<TData, unknown>\n) => boolean\n\nexport type CustomFilterFns<TData extends RowData> = Record<\n  string,\n  FilterFn<TData>\n>\n\nexport type FilterFnOption<TData extends RowData> =\n  | 'auto'\n  | BuiltInFilterFn\n  | keyof FilterFns\n  | FilterFn<TData>\n\nexport interface ColumnFiltersColumnDef<TData extends RowData> {\n  /**\n   * Enables/disables the **column** filter for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#enablecolumnfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  enableColumnFilter?: boolean\n  /**\n   * The filter function to use with this column. Can be the name of a built-in filter function or a custom filter function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#filterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  filterFn?: FilterFnOption<TData>\n}\n\nexport interface ColumnFiltersColumn<TData extends RowData> {\n  /**\n   * Returns an automatically calculated filter function for the column based off of the columns first known value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getautofilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getAutoFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns whether or not the column can be **column** filtered.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getcanfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getCanFilter: () => boolean\n  /**\n   * Returns the filter function (either user-defined or automatic, depending on configuration) for the columnId specified.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns the index (including `-1`) of the column filter in the table's `state.columnFilters` array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilterindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilterIndex: () => number\n  /**\n   * Returns the current filter value for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfiltervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilterValue: () => unknown\n  /**\n   * Returns whether or not the column is currently filtered.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getisfiltered)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getIsFiltered: () => boolean\n  /**\n   * A function that sets the current filter value for the column. You can pass it a value or an updater function for immutability-safe operations on existing values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#setfiltervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  setFilterValue: (updater: Updater<any>) => void\n}\n\nexport interface ColumnFiltersRow<TData extends RowData> {\n  /**\n   * The column filters map for the row. This object tracks whether a row is passing/failing specific filters by their column ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#columnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  columnFilters: Record<string, boolean>\n  /**\n   * The column filters meta map for the row. This object tracks any filter meta for a row as optionally provided during the filtering process.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#columnfiltersmeta)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  columnFiltersMeta: Record<string, FilterMeta>\n}\n\ninterface ColumnFiltersOptionsBase<TData extends RowData> {\n  /**\n   * Enables/disables **column** filtering for all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#enablecolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  enableColumnFilters?: boolean\n  /**\n   * Enables/disables all filtering for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#enablefilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  enableFilters?: boolean\n  /**\n   * By default, filtering is done from parent rows down (so if a parent row is filtered out, all of its children will be filtered out as well). Setting this option to `true` will cause filtering to be done from leaf rows up (which means parent rows will be included so long as one of their child or grand-child rows is also included).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#filterfromleafrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  filterFromLeafRows?: boolean\n  /**\n   * If provided, this function is called **once** per table and should return a **new function** which will calculate and return the row model for the table when it's filtered.\n   * - For server-side filtering, this function is unnecessary and can be ignored since the server should already return the filtered row model.\n   * - For client-side filtering, this function is required. A default implementation is provided via any table adapter's `{ getFilteredRowModel }` export.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilteredRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Disables the `getFilteredRowModel` from being used to filter data. This may be useful if your table needs to dynamically support both client-side and server-side filtering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#manualfiltering)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  manualFiltering?: boolean\n  /**\n   * By default, filtering is done for all rows (max depth of 100), no matter if they are root level parent rows or the child leaf rows of a parent row. Setting this option to `0` will cause filtering to only be applied to the root level parent rows, with all sub-rows remaining unfiltered. Similarly, setting this option to `1` will cause filtering to only be applied to child leaf rows 1 level deep, and so on.\n\n   * This is useful for situations where you want a row's entire child hierarchy to be visible regardless of the applied filter.\n    * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#maxleafrowfilterdepth)\n    * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  maxLeafRowFilterDepth?: number\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnFilters` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#oncolumnfilterschange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  onColumnFiltersChange?: OnChangeFn<ColumnFiltersState>\n}\n\ntype ResolvedFilterFns = keyof FilterFns extends never\n  ? {\n      filterFns?: Record<string, FilterFn<any>>\n    }\n  : {\n      filterFns: Record<keyof FilterFns, FilterFn<any>>\n    }\n\nexport interface ColumnFiltersOptions<TData extends RowData>\n  extends ColumnFiltersOptionsBase<TData>,\n    ResolvedFilterFns {}\n\nexport interface ColumnFiltersInstance<TData extends RowData> {\n  _getFilteredRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after **column** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilteredRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any **column** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getprefilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getPreFilteredRowModel: () => RowModel<TData>\n  /**\n   * Resets the **columnFilters** state to `initialState.columnFilters`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#resetcolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  resetColumnFilters: (defaultState?: boolean) => void\n  /**\n   * Resets the **globalFilter** state to `initialState.globalFilter`, or `true` can be passed to force a default blank state reset to `undefined`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#resetglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  resetGlobalFilter: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnFilters` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#setcolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  setColumnFilters: (updater: Updater<ColumnFiltersState>) => void\n  /**\n   * Sets or updates the `state.globalFilter` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#setglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  setGlobalFilter: (updater: Updater<any>) => void\n}\n\n//\n\nexport const ColumnFiltering: TableFeature = {\n  getDefaultColumnDef: <\n    TData extends RowData,\n  >(): ColumnFiltersColumnDef<TData> => {\n    return {\n      filterFn: 'auto',\n    }\n  },\n\n  getInitialState: (state): ColumnFiltersTableState => {\n    return {\n      columnFilters: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnFiltersOptions<TData> => {\n    return {\n      onColumnFiltersChange: makeStateUpdater('columnFilters', table),\n      filterFromLeafRows: false,\n      maxLeafRowFilterDepth: 100,\n    } as ColumnFiltersOptions<TData>\n  },\n\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column.getAutoFilterFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'string') {\n        return filterFns.includesString\n      }\n\n      if (typeof value === 'number') {\n        return filterFns.inNumberRange\n      }\n\n      if (typeof value === 'boolean') {\n        return filterFns.equals\n      }\n\n      if (value !== null && typeof value === 'object') {\n        return filterFns.equals\n      }\n\n      if (Array.isArray(value)) {\n        return filterFns.arrIncludes\n      }\n\n      return filterFns.weakEquals\n    }\n    column.getFilterFn = () => {\n      return isFunction(column.columnDef.filterFn)\n        ? column.columnDef.filterFn\n        : column.columnDef.filterFn === 'auto'\n          ? column.getAutoFilterFn()\n          : // @ts-ignore\n            table.options.filterFns?.[column.columnDef.filterFn as string] ??\n            filterFns[column.columnDef.filterFn as BuiltInFilterFn]\n    }\n    column.getCanFilter = () => {\n      return (\n        (column.columnDef.enableColumnFilter ?? true) &&\n        (table.options.enableColumnFilters ?? true) &&\n        (table.options.enableFilters ?? true) &&\n        !!column.accessorFn\n      )\n    }\n\n    column.getIsFiltered = () => column.getFilterIndex() > -1\n\n    column.getFilterValue = () =>\n      table.getState().columnFilters?.find(d => d.id === column.id)?.value\n\n    column.getFilterIndex = () =>\n      table.getState().columnFilters?.findIndex(d => d.id === column.id) ?? -1\n\n    column.setFilterValue = value => {\n      table.setColumnFilters(old => {\n        const filterFn = column.getFilterFn()\n        const previousFilter = old?.find(d => d.id === column.id)\n\n        const newFilter = functionalUpdate(\n          value,\n          previousFilter ? previousFilter.value : undefined\n        )\n\n        //\n        if (\n          shouldAutoRemoveFilter(filterFn as FilterFn<TData>, newFilter, column)\n        ) {\n          return old?.filter(d => d.id !== column.id) ?? []\n        }\n\n        const newFilterObj = { id: column.id, value: newFilter }\n\n        if (previousFilter) {\n          return (\n            old?.map(d => {\n              if (d.id === column.id) {\n                return newFilterObj\n              }\n              return d\n            }) ?? []\n          )\n        }\n\n        if (old?.length) {\n          return [...old, newFilterObj]\n        }\n\n        return [newFilterObj]\n      })\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    _table: Table<TData>\n  ): void => {\n    row.columnFilters = {}\n    row.columnFiltersMeta = {}\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnFilters = (updater: Updater<ColumnFiltersState>) => {\n      const leafColumns = table.getAllLeafColumns()\n\n      const updateFn = (old: ColumnFiltersState) => {\n        return functionalUpdate(updater, old)?.filter(filter => {\n          const column = leafColumns.find(d => d.id === filter.id)\n\n          if (column) {\n            const filterFn = column.getFilterFn()\n\n            if (shouldAutoRemoveFilter(filterFn, filter.value, column)) {\n              return false\n            }\n          }\n\n          return true\n        })\n      }\n\n      table.options.onColumnFiltersChange?.(updateFn)\n    }\n\n    table.resetColumnFilters = defaultState => {\n      table.setColumnFilters(\n        defaultState ? [] : table.initialState?.columnFilters ?? []\n      )\n    }\n\n    table.getPreFilteredRowModel = () => table.getCoreRowModel()\n    table.getFilteredRowModel = () => {\n      if (!table._getFilteredRowModel && table.options.getFilteredRowModel) {\n        table._getFilteredRowModel = table.options.getFilteredRowModel(table)\n      }\n\n      if (table.options.manualFiltering || !table._getFilteredRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return table._getFilteredRowModel()\n    }\n  },\n}\n\nexport function shouldAutoRemoveFilter<TData extends RowData>(\n  filterFn?: FilterFn<TData>,\n  value?: any,\n  column?: Column<TData, unknown>\n) {\n  return (\n    (filterFn && filterFn.autoRemove\n      ? filterFn.autoRemove(value, column)\n      : false) ||\n    typeof value === 'undefined' ||\n    (typeof value === 'string' && !value)\n  )\n}\n","import { AggregationFn } from './features/ColumnGrouping'\nimport { isNumberArray } from './utils'\n\nconst sum: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return childRows.reduce((sum, next) => {\n    const nextValue = next.getValue(columnId)\n    return sum + (typeof nextValue === 'number' ? nextValue : 0)\n  }, 0)\n}\n\nconst min: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let min: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n\n    if (\n      value != null &&\n      (min! > value || (min === undefined && value >= value))\n    ) {\n      min = value\n    }\n  })\n\n  return min\n}\n\nconst max: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let max: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n    if (\n      value != null &&\n      (max! < value || (max === undefined && value >= value))\n    ) {\n      max = value\n    }\n  })\n\n  return max\n}\n\nconst extent: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let min: number | undefined\n  let max: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n    if (value != null) {\n      if (min === undefined) {\n        if (value >= value) min = max = value\n      } else {\n        if (min > value) min = value\n        if (max! < value) max = value\n      }\n    }\n  })\n\n  return [min, max]\n}\n\nconst mean: AggregationFn<any> = (columnId, leafRows) => {\n  let count = 0\n  let sum = 0\n\n  leafRows.forEach(row => {\n    let value = row.getValue<number>(columnId)\n    if (value != null && (value = +value) >= value) {\n      ++count, (sum += value)\n    }\n  })\n\n  if (count) return sum / count\n\n  return\n}\n\nconst median: AggregationFn<any> = (columnId, leafRows) => {\n  if (!leafRows.length) {\n    return\n  }\n\n  const values = leafRows.map(row => row.getValue(columnId))\n  if (!isNumberArray(values)) {\n    return\n  }\n  if (values.length === 1) {\n    return values[0]\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = values.sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1]! + nums[mid]!) / 2\n}\n\nconst unique: AggregationFn<any> = (columnId, leafRows) => {\n  return Array.from(new Set(leafRows.map(d => d.getValue(columnId))).values())\n}\n\nconst uniqueCount: AggregationFn<any> = (columnId, leafRows) => {\n  return new Set(leafRows.map(d => d.getValue(columnId))).size\n}\n\nconst count: AggregationFn<any> = (_columnId, leafRows) => {\n  return leafRows.length\n}\n\nexport const aggregationFns = {\n  sum,\n  min,\n  max,\n  extent,\n  mean,\n  median,\n  unique,\n  uniqueCount,\n  count,\n}\n\nexport type BuiltInAggregationFn = keyof typeof aggregationFns\n","import { RowModel } from '..'\nimport { BuiltInAggregationFn, aggregationFns } from '../aggregationFns'\nimport {\n  AggregationFns,\n  Cell,\n  Column,\n  ColumnDefTemplate,\n  OnChangeFn,\n  Row,\n  RowData,\n  Table,\n  TableFeature,\n  Updater,\n} from '../types'\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport type GroupingState = string[]\n\nexport interface GroupingTableState {\n  grouping: GroupingState\n}\n\nexport type AggregationFn<TData extends RowData> = (\n  columnId: string,\n  leafRows: Row<TData>[],\n  childRows: Row<TData>[]\n) => any\n\nexport type CustomAggregationFns = Record<string, AggregationFn<any>>\n\nexport type AggregationFnOption<TData extends RowData> =\n  | 'auto'\n  | keyof AggregationFns\n  | BuiltInAggregationFn\n  | AggregationFn<TData>\n\nexport interface GroupingColumnDef<TData extends RowData, TValue> {\n  /**\n   * The cell to display each row for the column if the cell is an aggregate. If a function is passed, it will be passed a props object with the context of the cell and should return the property type for your adapter (the exact type depends on the adapter being used).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#aggregatedcell)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  aggregatedCell?: ColumnDefTemplate<\n    ReturnType<Cell<TData, TValue>['getContext']>\n  >\n  /**\n   * The resolved aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#aggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  aggregationFn?: AggregationFnOption<TData>\n  /**\n   * Enables/disables grouping for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#enablegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  enableGrouping?: boolean\n  /**\n   * Specify a value to be used for grouping rows on this column. If this option is not specified, the value derived from `accessorKey` / `accessorFn` will be used instead.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupingValue?: (row: TData) => any\n}\n\nexport interface GroupingColumn<TData extends RowData> {\n  /**\n   * Returns the aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getaggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getAggregationFn: () => AggregationFn<TData> | undefined\n  /**\n   * Returns the automatically inferred aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getautoaggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getAutoAggregationFn: () => AggregationFn<TData> | undefined\n  /**\n   * Returns whether or not the column can be grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getcangroup)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getCanGroup: () => boolean\n  /**\n   * Returns the index of the column in the grouping state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedIndex: () => number\n  /**\n   * Returns whether or not the column is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * Returns a function that toggles the grouping state of the column. This is useful for passing to the `onClick` prop of a button.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#gettogglegroupinghandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getToggleGroupingHandler: () => () => void\n  /**\n   * Toggles the grouping state of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#togglegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  toggleGrouping: () => void\n}\n\nexport interface GroupingRow {\n  _groupingValuesCache: Record<string, any>\n  /**\n   * Returns the grouping value for any row and column (including leaf rows).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupingValue: (columnId: string) => unknown\n  /**\n   * Returns whether or not the row is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * If this row is grouped, this is the id of the column that this row is grouped by.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupingcolumnid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupingColumnId?: string\n  /**\n   * If this row is grouped, this is the unique/shared value for the `groupingColumnId` for all of the rows in this group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupingValue?: unknown\n}\n\nexport interface GroupingCell {\n  /**\n   * Returns whether or not the cell is currently aggregated.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisaggregated)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsAggregated: () => boolean\n  /**\n   * Returns whether or not the cell is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * Returns whether or not the cell is currently a placeholder cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisplaceholder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsPlaceholder: () => boolean\n}\n\nexport interface ColumnDefaultOptions {\n  enableGrouping: boolean\n  onGroupingChange: OnChangeFn<GroupingState>\n}\n\ninterface GroupingOptionsBase {\n  /**\n   * Enables/disables grouping for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#enablegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  enableGrouping?: boolean\n  /**\n   * Returns the row model after grouping has taken place, but no further.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Grouping columns are automatically reordered by default to the start of the columns list. If you would rather remove them or leave them as-is, set the appropriate mode here.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupedcolumnmode)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupedColumnMode?: false | 'reorder' | 'remove'\n  /**\n   * Enables manual grouping. If this option is set to `true`, the table will not automatically group rows using `getGroupedRowModel()` and instead will expect you to manually group the rows before passing them to the table. This is useful if you are doing server-side grouping and aggregation.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#manualgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  manualGrouping?: boolean\n  /**\n   * If this function is provided, it will be called when the grouping state changes and you will be expected to manage the state yourself. You can pass the managed state back to the table via the `tableOptions.state.grouping` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#ongroupingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  onGroupingChange?: OnChangeFn<GroupingState>\n}\n\ntype ResolvedAggregationFns = keyof AggregationFns extends never\n  ? {\n      aggregationFns?: Record<string, AggregationFn<any>>\n    }\n  : {\n      aggregationFns: Record<keyof AggregationFns, AggregationFn<any>>\n    }\n\nexport interface GroupingOptions\n  extends GroupingOptionsBase,\n    ResolvedAggregationFns {}\n\nexport type GroupingColumnMode = false | 'reorder' | 'remove'\n\nexport interface GroupingInstance<TData extends RowData> {\n  _getGroupedRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getpregroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getPreGroupedRowModel: () => RowModel<TData>\n  /**\n   * Resets the **grouping** state to `initialState.grouping`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#resetgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  resetGrouping: (defaultState?: boolean) => void\n  /**\n   * Updates the grouping state of the table via an update function or value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#setgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  setGrouping: (updater: Updater<GroupingState>) => void\n}\n\n//\n\nexport const ColumnGrouping: TableFeature = {\n  getDefaultColumnDef: <TData extends RowData>(): GroupingColumnDef<\n    TData,\n    unknown\n  > => {\n    return {\n      aggregatedCell: props => (props.getValue() as any)?.toString?.() ?? null,\n      aggregationFn: 'auto',\n    }\n  },\n\n  getInitialState: (state): GroupingTableState => {\n    return {\n      grouping: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): GroupingOptions => {\n    return {\n      onGroupingChange: makeStateUpdater('grouping', table),\n      groupedColumnMode: 'reorder',\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.toggleGrouping = () => {\n      table.setGrouping(old => {\n        // Find any existing grouping for this column\n        if (old?.includes(column.id)) {\n          return old.filter(d => d !== column.id)\n        }\n\n        return [...(old ?? []), column.id]\n      })\n    }\n\n    column.getCanGroup = () => {\n      return (\n        (column.columnDef.enableGrouping ?? true) &&\n        (table.options.enableGrouping ?? true) &&\n        (!!column.accessorFn || !!column.columnDef.getGroupingValue)\n      )\n    }\n\n    column.getIsGrouped = () => {\n      return table.getState().grouping?.includes(column.id)\n    }\n\n    column.getGroupedIndex = () => table.getState().grouping?.indexOf(column.id)\n\n    column.getToggleGroupingHandler = () => {\n      const canGroup = column.getCanGroup()\n\n      return () => {\n        if (!canGroup) return\n        column.toggleGrouping()\n      }\n    }\n    column.getAutoAggregationFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'number') {\n        return aggregationFns.sum\n      }\n\n      if (Object.prototype.toString.call(value) === '[object Date]') {\n        return aggregationFns.extent\n      }\n    }\n    column.getAggregationFn = () => {\n      if (!column) {\n        throw new Error()\n      }\n\n      return isFunction(column.columnDef.aggregationFn)\n        ? column.columnDef.aggregationFn\n        : column.columnDef.aggregationFn === 'auto'\n          ? column.getAutoAggregationFn()\n          : table.options.aggregationFns?.[\n              column.columnDef.aggregationFn as string\n            ] ??\n            aggregationFns[\n              column.columnDef.aggregationFn as BuiltInAggregationFn\n            ]\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setGrouping = updater => table.options.onGroupingChange?.(updater)\n\n    table.resetGrouping = defaultState => {\n      table.setGrouping(defaultState ? [] : table.initialState?.grouping ?? [])\n    }\n\n    table.getPreGroupedRowModel = () => table.getFilteredRowModel()\n    table.getGroupedRowModel = () => {\n      if (!table._getGroupedRowModel && table.options.getGroupedRowModel) {\n        table._getGroupedRowModel = table.options.getGroupedRowModel(table)\n      }\n\n      if (table.options.manualGrouping || !table._getGroupedRowModel) {\n        return table.getPreGroupedRowModel()\n      }\n\n      return table._getGroupedRowModel()\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.getIsGrouped = () => !!row.groupingColumnId\n    row.getGroupingValue = columnId => {\n      if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n        return row._groupingValuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.columnDef.getGroupingValue) {\n        return row.getValue(columnId)\n      }\n\n      row._groupingValuesCache[columnId] = column.columnDef.getGroupingValue(\n        row.original\n      )\n\n      return row._groupingValuesCache[columnId]\n    }\n    row._groupingValuesCache = {}\n  },\n\n  createCell: <TData extends RowData, TValue>(\n    cell: Cell<TData, TValue>,\n    column: Column<TData, TValue>,\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    const getRenderValue = () =>\n      cell.getValue() ?? table.options.renderFallbackValue\n\n    cell.getIsGrouped = () =>\n      column.getIsGrouped() && column.id === row.groupingColumnId\n    cell.getIsPlaceholder = () => !cell.getIsGrouped() && column.getIsGrouped()\n    cell.getIsAggregated = () =>\n      !cell.getIsGrouped() && !cell.getIsPlaceholder() && !!row.subRows?.length\n  },\n}\n\nexport function orderColumns<TData extends RowData>(\n  leafColumns: Column<TData, unknown>[],\n  grouping: string[],\n  groupedColumnMode?: GroupingColumnMode\n) {\n  if (!grouping?.length || !groupedColumnMode) {\n    return leafColumns\n  }\n\n  const nonGroupingColumns = leafColumns.filter(\n    col => !grouping.includes(col.id)\n  )\n\n  if (groupedColumnMode === 'remove') {\n    return nonGroupingColumns\n  }\n\n  const groupingColumns = grouping\n    .map(g => leafColumns.find(col => col.id === g)!)\n    .filter(Boolean)\n\n  return [...groupingColumns, ...nonGroupingColumns]\n}\n","import { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nimport {\n  Column,\n  OnChangeFn,\n  RowData,\n  Table,\n  TableFeature,\n  Updater,\n} from '../types'\n\nimport { orderColumns } from './ColumnGrouping'\nimport { ColumnPinningPosition, _getVisibleLeafColumns } from '..'\n\nexport interface ColumnOrderTableState {\n  columnOrder: ColumnOrderState\n}\n\nexport type ColumnOrderState = string[]\n\nexport interface ColumnOrderOptions {\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnOrder` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#oncolumnorderchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  onColumnOrderChange?: OnChangeFn<ColumnOrderState>\n}\n\nexport interface ColumnOrderColumn {\n  /**\n   * Returns the index of the column in the order of the visible columns. Optionally pass a `position` parameter to get the index of the column in a sub-section of the table\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#getindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  getIndex: (position?: ColumnPinningPosition | 'center') => number\n  /**\n   * Returns `true` if the column is the first column in the order of the visible columns. Optionally pass a `position` parameter to check if the column is the first in a sub-section of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#getisfirstcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  getIsFirstColumn: (position?: ColumnPinningPosition | 'center') => boolean\n  /**\n   * Returns `true` if the column is the last column in the order of the visible columns. Optionally pass a `position` parameter to check if the column is the last in a sub-section of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#getislastcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  getIsLastColumn: (position?: ColumnPinningPosition | 'center') => boolean\n}\n\nexport interface ColumnOrderDefaultOptions {\n  onColumnOrderChange: OnChangeFn<ColumnOrderState>\n}\n\nexport interface ColumnOrderInstance<TData extends RowData> {\n  _getOrderColumnsFn: () => (\n    columns: Column<TData, unknown>[]\n  ) => Column<TData, unknown>[]\n  /**\n   * Resets the **columnOrder** state to `initialState.columnOrder`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#resetcolumnorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  resetColumnOrder: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnOrder` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#setcolumnorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  setColumnOrder: (updater: Updater<ColumnOrderState>) => void\n}\n\n//\n\nexport const ColumnOrdering: TableFeature = {\n  getInitialState: (state): ColumnOrderTableState => {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnOrderDefaultOptions => {\n    return {\n      onColumnOrderChange: makeStateUpdater('columnOrder', table),\n    }\n  },\n\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column.getIndex = memo(\n      position => [_getVisibleLeafColumns(table, position)],\n      columns => columns.findIndex(d => d.id === column.id),\n      getMemoOptions(table.options, 'debugColumns', 'getIndex')\n    )\n    column.getIsFirstColumn = position => {\n      const columns = _getVisibleLeafColumns(table, position)\n      return columns[0]?.id === column.id\n    }\n    column.getIsLastColumn = position => {\n      const columns = _getVisibleLeafColumns(table, position)\n      return columns[columns.length - 1]?.id === column.id\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnOrder = updater =>\n      table.options.onColumnOrderChange?.(updater)\n    table.resetColumnOrder = defaultState => {\n      table.setColumnOrder(\n        defaultState ? [] : table.initialState.columnOrder ?? []\n      )\n    }\n    table._getOrderColumnsFn = memo(\n      () => [\n        table.getState().columnOrder,\n        table.getState().grouping,\n        table.options.groupedColumnMode,\n      ],\n      (columnOrder, grouping, groupedColumnMode) =>\n        (columns: Column<TData, unknown>[]) => {\n          // Sort grouped columns to the start of the column list\n          // before the headers are built\n          let orderedColumns: Column<TData, unknown>[] = []\n\n          // If there is no order, return the normal columns\n          if (!columnOrder?.length) {\n            orderedColumns = columns\n          } else {\n            const columnOrderCopy = [...columnOrder]\n\n            // If there is an order, make a copy of the columns\n            const columnsCopy = [...columns]\n\n            // And make a new ordered array of the columns\n\n            // Loop over the columns and place them in order into the new array\n            while (columnsCopy.length && columnOrderCopy.length) {\n              const targetColumnId = columnOrderCopy.shift()\n              const foundIndex = columnsCopy.findIndex(\n                d => d.id === targetColumnId\n              )\n              if (foundIndex > -1) {\n                orderedColumns.push(columnsCopy.splice(foundIndex, 1)[0]!)\n              }\n            }\n\n            // If there are any columns left, add them to the end\n            orderedColumns = [...orderedColumns, ...columnsCopy]\n          }\n\n          return orderColumns(orderedColumns, grouping, groupedColumnMode)\n        },\n      getMemoOptions(table.options, 'debugTable', '_getOrderColumnsFn')\n    )\n  },\n}\n","import {\n  OnChangeFn,\n  Updater,\n  Table,\n  Column,\n  Row,\n  Cell,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type ColumnPinningPosition = false | 'left' | 'right'\n\nexport interface ColumnPinningState {\n  left?: string[]\n  right?: string[]\n}\n\nexport interface ColumnPinningTableState {\n  columnPinning: ColumnPinningState\n}\n\nexport interface ColumnPinningOptions {\n  /**\n   * Enables/disables column pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#enablecolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  enableColumnPinning?: boolean\n  /**\n   * @deprecated Use `enableColumnPinning` or `enableRowPinning` instead.\n   * Enables/disables all pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#enablepinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  enablePinning?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnPinning` changes. This overrides the default internal state management, so you will also need to supply `state.columnPinning` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#oncolumnpinningchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/oncolumnpinningchange)\n   */\n  onColumnPinningChange?: OnChangeFn<ColumnPinningState>\n}\n\nexport interface ColumnPinningDefaultOptions {\n  onColumnPinningChange: OnChangeFn<ColumnPinningState>\n}\n\nexport interface ColumnPinningColumnDef {\n  /**\n   * Enables/disables column pinning for this column. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#enablepinning-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  enablePinning?: boolean\n}\n\nexport interface ColumnPinningColumn {\n  /**\n   * Returns whether or not the column can be pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getcanpin)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getCanPin: () => boolean\n  /**\n   * Returns the pinned position of the column. (`'left'`, `'right'` or `false`)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getispinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getIsPinned: () => ColumnPinningPosition\n  /**\n   * Returns the numeric pinned index of the column within a pinned column group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getpinnedindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getPinnedIndex: () => number\n  /**\n   * Pins a column to the `'left'` or `'right'`, or unpins the column to the center if `false` is passed.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#pin)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  pin: (position: ColumnPinningPosition) => void\n}\n\nexport interface ColumnPinningRow<TData extends RowData> {\n  /**\n   * Returns all center pinned (unpinned) leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getcentervisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getCenterVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns all left pinned leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getleftvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getLeftVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns all right pinned leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getrightvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getRightVisibleCells: () => Cell<TData, unknown>[]\n}\n\nexport interface ColumnPinningInstance<TData extends RowData> {\n  /**\n   * Returns all center pinned (unpinned) leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getcenterleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getCenterLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns whether or not any columns are pinned. Optionally specify to only check for pinned columns in either the `left` or `right` position.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getissomecolumnspinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getIsSomeColumnsPinned: (position?: ColumnPinningPosition) => boolean\n  /**\n   * Returns all left pinned leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getleftleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getLeftLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all right pinned leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getrightleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getRightLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Resets the **columnPinning** state to `initialState.columnPinning`, or `true` can be passed to force a default blank state reset to `{ left: [], right: [], }`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#resetcolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  resetColumnPinning: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnPinning` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#setcolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  setColumnPinning: (updater: Updater<ColumnPinningState>) => void\n}\n\n//\n\nconst getDefaultColumnPinningState = (): ColumnPinningState => ({\n  left: [],\n  right: [],\n})\n\nexport const ColumnPinning: TableFeature = {\n  getInitialState: (state): ColumnPinningTableState => {\n    return {\n      columnPinning: getDefaultColumnPinningState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnPinningDefaultOptions => {\n    return {\n      onColumnPinningChange: makeStateUpdater('columnPinning', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.pin = position => {\n      const columnIds = column\n        .getLeafColumns()\n        .map(d => d.id)\n        .filter(Boolean) as string[]\n\n      table.setColumnPinning(old => {\n        if (position === 'right') {\n          return {\n            left: (old?.left ?? []).filter(d => !columnIds?.includes(d)),\n            right: [\n              ...(old?.right ?? []).filter(d => !columnIds?.includes(d)),\n              ...columnIds,\n            ],\n          }\n        }\n\n        if (position === 'left') {\n          return {\n            left: [\n              ...(old?.left ?? []).filter(d => !columnIds?.includes(d)),\n              ...columnIds,\n            ],\n            right: (old?.right ?? []).filter(d => !columnIds?.includes(d)),\n          }\n        }\n\n        return {\n          left: (old?.left ?? []).filter(d => !columnIds?.includes(d)),\n          right: (old?.right ?? []).filter(d => !columnIds?.includes(d)),\n        }\n      })\n    }\n\n    column.getCanPin = () => {\n      const leafColumns = column.getLeafColumns()\n\n      return leafColumns.some(\n        d =>\n          (d.columnDef.enablePinning ?? true) &&\n          (table.options.enableColumnPinning ??\n            table.options.enablePinning ??\n            true)\n      )\n    }\n\n    column.getIsPinned = () => {\n      const leafColumnIds = column.getLeafColumns().map(d => d.id)\n\n      const { left, right } = table.getState().columnPinning\n\n      const isLeft = leafColumnIds.some(d => left?.includes(d))\n      const isRight = leafColumnIds.some(d => right?.includes(d))\n\n      return isLeft ? 'left' : isRight ? 'right' : false\n    }\n\n    column.getPinnedIndex = () => {\n      const position = column.getIsPinned()\n\n      return position\n        ? table.getState().columnPinning?.[position]?.indexOf(column.id) ?? -1\n        : 0\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.getCenterVisibleCells = memo(\n      () => [\n        row._getAllVisibleCells(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allCells, left, right) => {\n        const leftAndRight: string[] = [...(left ?? []), ...(right ?? [])]\n\n        return allCells.filter(d => !leftAndRight.includes(d.column.id))\n      },\n      getMemoOptions(table.options, 'debugRows', 'getCenterVisibleCells')\n    )\n    row.getLeftVisibleCells = memo(\n      () => [row._getAllVisibleCells(), table.getState().columnPinning.left],\n      (allCells, left) => {\n        const cells = (left ?? [])\n          .map(columnId => allCells.find(cell => cell.column.id === columnId)!)\n          .filter(Boolean)\n          .map(d => ({ ...d, position: 'left' }) as Cell<TData, unknown>)\n\n        return cells\n      },\n      getMemoOptions(table.options, 'debugRows', 'getLeftVisibleCells')\n    )\n    row.getRightVisibleCells = memo(\n      () => [row._getAllVisibleCells(), table.getState().columnPinning.right],\n      (allCells, right) => {\n        const cells = (right ?? [])\n          .map(columnId => allCells.find(cell => cell.column.id === columnId)!)\n          .filter(Boolean)\n          .map(d => ({ ...d, position: 'right' }) as Cell<TData, unknown>)\n\n        return cells\n      },\n      getMemoOptions(table.options, 'debugRows', 'getRightVisibleCells')\n    )\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnPinning = updater =>\n      table.options.onColumnPinningChange?.(updater)\n\n    table.resetColumnPinning = defaultState =>\n      table.setColumnPinning(\n        defaultState\n          ? getDefaultColumnPinningState()\n          : table.initialState?.columnPinning ?? getDefaultColumnPinningState()\n      )\n\n    table.getIsSomeColumnsPinned = position => {\n      const pinningState = table.getState().columnPinning\n\n      if (!position) {\n        return Boolean(pinningState.left?.length || pinningState.right?.length)\n      }\n      return Boolean(pinningState[position]?.length)\n    }\n\n    table.getLeftLeafColumns = memo(\n      () => [table.getAllLeafColumns(), table.getState().columnPinning.left],\n      (allColumns, left) => {\n        return (left ?? [])\n          .map(columnId => allColumns.find(column => column.id === columnId)!)\n          .filter(Boolean)\n      },\n      getMemoOptions(table.options, 'debugColumns', 'getLeftLeafColumns')\n    )\n\n    table.getRightLeafColumns = memo(\n      () => [table.getAllLeafColumns(), table.getState().columnPinning.right],\n      (allColumns, right) => {\n        return (right ?? [])\n          .map(columnId => allColumns.find(column => column.id === columnId)!)\n          .filter(Boolean)\n      },\n      getMemoOptions(table.options, 'debugColumns', 'getRightLeafColumns')\n    )\n\n    table.getCenterLeafColumns = memo(\n      () => [\n        table.getAllLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, left, right) => {\n        const leftAndRight: string[] = [...(left ?? []), ...(right ?? [])]\n\n        return allColumns.filter(d => !leftAndRight.includes(d.id))\n      },\n      getMemoOptions(table.options, 'debugColumns', 'getCenterLeafColumns')\n    )\n  },\n}\n","import { _getVisibleLeafColumns } from '..'\nimport {\n  RowData,\n  Column,\n  Header,\n  OnChangeFn,\n  Table,\n  Updater,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\nimport { ColumnPinningPosition } from './ColumnPinning'\n\n//\n\nexport interface ColumnSizingTableState {\n  columnSizing: ColumnSizingState\n  columnSizingInfo: ColumnSizingInfoState\n}\n\nexport type ColumnSizingState = Record<string, number>\n\nexport interface ColumnSizingInfoState {\n  columnSizingStart: [string, number][]\n  deltaOffset: null | number\n  deltaPercentage: null | number\n  isResizingColumn: false | string\n  startOffset: null | number\n  startSize: null | number\n}\n\nexport type ColumnResizeMode = 'onChange' | 'onEnd'\n\nexport type ColumnResizeDirection = 'ltr' | 'rtl'\n\nexport interface ColumnSizingOptions {\n  /**\n   * Determines when the columnSizing state is updated. `onChange` updates the state when the user is dragging the resize handle. `onEnd` updates the state when the user releases the resize handle.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#columnresizemode)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  columnResizeMode?: ColumnResizeMode\n  /**\n   * Enables or disables column resizing for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#enablecolumnresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  enableColumnResizing?: boolean\n  /**\n   * Enables or disables right-to-left support for resizing the column. defaults to 'ltr'.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#columnResizeDirection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  columnResizeDirection?: ColumnResizeDirection\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnSizing` changes. This overrides the default internal state management, so you will also need to supply `state.columnSizing` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#oncolumnsizingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  onColumnSizingChange?: OnChangeFn<ColumnSizingState>\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnSizingInfo` changes. This overrides the default internal state management, so you will also need to supply `state.columnSizingInfo` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#oncolumnsizinginfochange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  onColumnSizingInfoChange?: OnChangeFn<ColumnSizingInfoState>\n}\n\nexport type ColumnSizingDefaultOptions = Pick<\n  ColumnSizingOptions,\n  | 'columnResizeMode'\n  | 'onColumnSizingChange'\n  | 'onColumnSizingInfoChange'\n  | 'columnResizeDirection'\n>\n\nexport interface ColumnSizingInstance {\n  /**\n   * If pinning, returns the total size of the center portion of the table by calculating the sum of the sizes of all unpinned/center leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getcentertotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getCenterTotalSize: () => number\n  /**\n   * Returns the total size of the left portion of the table by calculating the sum of the sizes of all left leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getlefttotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getLeftTotalSize: () => number\n  /**\n   * Returns the total size of the right portion of the table by calculating the sum of the sizes of all right leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getrighttotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getRightTotalSize: () => number\n  /**\n   * Returns the total size of the table by calculating the sum of the sizes of all leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#gettotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getTotalSize: () => number\n  /**\n   * Resets column sizing to its initial state. If `defaultState` is `true`, the default state for the table will be used instead of the initialValue provided to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetcolumnsizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetColumnSizing: (defaultState?: boolean) => void\n  /**\n   * Resets column sizing info to its initial state. If `defaultState` is `true`, the default state for the table will be used instead of the initialValue provided to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetheadersizeinfo)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetHeaderSizeInfo: (defaultState?: boolean) => void\n  /**\n   * Sets the column sizing state using an updater function or a value. This will trigger the underlying `onColumnSizingChange` function if one is passed to the table options, otherwise the state will be managed automatically by the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#setcolumnsizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  setColumnSizing: (updater: Updater<ColumnSizingState>) => void\n  /**\n   * Sets the column sizing info state using an updater function or a value. This will trigger the underlying `onColumnSizingInfoChange` function if one is passed to the table options, otherwise the state will be managed automatically by the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#setcolumnsizinginfo)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  setColumnSizingInfo: (updater: Updater<ColumnSizingInfoState>) => void\n}\n\nexport interface ColumnSizingColumnDef {\n  /**\n   * Enables or disables column resizing for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#enableresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  enableResizing?: boolean\n  /**\n   * The maximum allowed size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#maxsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  maxSize?: number\n  /**\n   * The minimum allowed size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#minsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  minSize?: number\n  /**\n   * The desired size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#size)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  size?: number\n}\n\nexport interface ColumnSizingColumn {\n  /**\n   * Returns `true` if the column can be resized.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getcanresize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getCanResize: () => boolean\n  /**\n   * Returns `true` if the column is currently being resized.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getisresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getIsResizing: () => boolean\n  /**\n   * Returns the current size of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getSize: () => number\n  /**\n   * Returns the offset measurement along the row-axis (usually the x-axis for standard tables) for the header. This is effectively a sum of the offset measurements of all preceding (left) headers in relation to the current column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getstart)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getStart: (position?: ColumnPinningPosition | 'center') => number\n  /**\n   * Returns the offset measurement along the row-axis (usually the x-axis for standard tables) for the header. This is effectively a sum of the offset measurements of all succeeding (right) headers in relation to the current column.\n   */\n  getAfter: (position?: ColumnPinningPosition | 'center') => number\n  /**\n   * Resets the column to its initial size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetSize: () => void\n}\n\nexport interface ColumnSizingHeader {\n  /**\n   * Returns an event handler function that can be used to resize the header. It can be used as an:\n   * - `onMouseDown` handler\n   * - `onTouchStart` handler\n   *\n   * The dragging and release events are automatically handled for you.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getresizehandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getResizeHandler: (context?: Document) => (event: unknown) => void\n  /**\n   * Returns the current size of the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getSize: () => number\n  /**\n   * Returns the offset measurement along the row-axis (usually the x-axis for standard tables) for the header. This is effectively a sum of the offset measurements of all preceding headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getstart)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getStart: (position?: ColumnPinningPosition) => number\n}\n\n//\n\nexport const defaultColumnSizing = {\n  size: 150,\n  minSize: 20,\n  maxSize: Number.MAX_SAFE_INTEGER,\n}\n\nconst getDefaultColumnSizingInfoState = (): ColumnSizingInfoState => ({\n  startOffset: null,\n  startSize: null,\n  deltaOffset: null,\n  deltaPercentage: null,\n  isResizingColumn: false,\n  columnSizingStart: [],\n})\n\nexport const ColumnSizing: TableFeature = {\n  getDefaultColumnDef: (): ColumnSizingColumnDef => {\n    return defaultColumnSizing\n  },\n  getInitialState: (state): ColumnSizingTableState => {\n    return {\n      columnSizing: {},\n      columnSizingInfo: getDefaultColumnSizingInfoState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnSizingDefaultOptions => {\n    return {\n      columnResizeMode: 'onEnd',\n      columnResizeDirection: 'ltr',\n      onColumnSizingChange: makeStateUpdater('columnSizing', table),\n      onColumnSizingInfoChange: makeStateUpdater('columnSizingInfo', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.getSize = () => {\n      const columnSize = table.getState().columnSizing[column.id]\n\n      return Math.min(\n        Math.max(\n          column.columnDef.minSize ?? defaultColumnSizing.minSize,\n          columnSize ?? column.columnDef.size ?? defaultColumnSizing.size\n        ),\n        column.columnDef.maxSize ?? defaultColumnSizing.maxSize\n      )\n    }\n\n    column.getStart = memo(\n      position => [\n        position,\n        _getVisibleLeafColumns(table, position),\n        table.getState().columnSizing,\n      ],\n      (position, columns) =>\n        columns\n          .slice(0, column.getIndex(position))\n          .reduce((sum, column) => sum + column.getSize(), 0),\n      getMemoOptions(table.options, 'debugColumns', 'getStart')\n    )\n\n    column.getAfter = memo(\n      position => [\n        position,\n        _getVisibleLeafColumns(table, position),\n        table.getState().columnSizing,\n      ],\n      (position, columns) =>\n        columns\n          .slice(column.getIndex(position) + 1)\n          .reduce((sum, column) => sum + column.getSize(), 0),\n      getMemoOptions(table.options, 'debugColumns', 'getAfter')\n    )\n\n    column.resetSize = () => {\n      table.setColumnSizing(({ [column.id]: _, ...rest }) => {\n        return rest\n      })\n    }\n    column.getCanResize = () => {\n      return (\n        (column.columnDef.enableResizing ?? true) &&\n        (table.options.enableColumnResizing ?? true)\n      )\n    }\n    column.getIsResizing = () => {\n      return table.getState().columnSizingInfo.isResizingColumn === column.id\n    }\n  },\n\n  createHeader: <TData extends RowData, TValue>(\n    header: Header<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    header.getSize = () => {\n      let sum = 0\n\n      const recurse = (header: Header<TData, TValue>) => {\n        if (header.subHeaders.length) {\n          header.subHeaders.forEach(recurse)\n        } else {\n          sum += header.column.getSize() ?? 0\n        }\n      }\n\n      recurse(header)\n\n      return sum\n    }\n    header.getStart = () => {\n      if (header.index > 0) {\n        const prevSiblingHeader = header.headerGroup.headers[header.index - 1]!\n        return prevSiblingHeader.getStart() + prevSiblingHeader.getSize()\n      }\n\n      return 0\n    }\n    header.getResizeHandler = _contextDocument => {\n      const column = table.getColumn(header.column.id)\n      const canResize = column?.getCanResize()\n\n      return (e: unknown) => {\n        if (!column || !canResize) {\n          return\n        }\n\n        ;(e as any).persist?.()\n\n        if (isTouchStartEvent(e)) {\n          // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n          if (e.touches && e.touches.length > 1) {\n            return\n          }\n        }\n\n        const startSize = header.getSize()\n\n        const columnSizingStart: [string, number][] = header\n          ? header.getLeafHeaders().map(d => [d.column.id, d.column.getSize()])\n          : [[column.id, column.getSize()]]\n\n        const clientX = isTouchStartEvent(e)\n          ? Math.round(e.touches[0]!.clientX)\n          : (e as MouseEvent).clientX\n\n        const newColumnSizing: ColumnSizingState = {}\n\n        const updateOffset = (\n          eventType: 'move' | 'end',\n          clientXPos?: number\n        ) => {\n          if (typeof clientXPos !== 'number') {\n            return\n          }\n\n          table.setColumnSizingInfo(old => {\n            const deltaDirection =\n              table.options.columnResizeDirection === 'rtl' ? -1 : 1\n            const deltaOffset =\n              (clientXPos - (old?.startOffset ?? 0)) * deltaDirection\n            const deltaPercentage = Math.max(\n              deltaOffset / (old?.startSize ?? 0),\n              -0.999999\n            )\n\n            old.columnSizingStart.forEach(([columnId, headerSize]) => {\n              newColumnSizing[columnId] =\n                Math.round(\n                  Math.max(headerSize + headerSize * deltaPercentage, 0) * 100\n                ) / 100\n            })\n\n            return {\n              ...old,\n              deltaOffset,\n              deltaPercentage,\n            }\n          })\n\n          if (\n            table.options.columnResizeMode === 'onChange' ||\n            eventType === 'end'\n          ) {\n            table.setColumnSizing(old => ({\n              ...old,\n              ...newColumnSizing,\n            }))\n          }\n        }\n\n        const onMove = (clientXPos?: number) => updateOffset('move', clientXPos)\n\n        const onEnd = (clientXPos?: number) => {\n          updateOffset('end', clientXPos)\n\n          table.setColumnSizingInfo(old => ({\n            ...old,\n            isResizingColumn: false,\n            startOffset: null,\n            startSize: null,\n            deltaOffset: null,\n            deltaPercentage: null,\n            columnSizingStart: [],\n          }))\n        }\n\n        const contextDocument =\n          _contextDocument || typeof document !== 'undefined' ? document : null\n\n        const mouseEvents = {\n          moveHandler: (e: MouseEvent) => onMove(e.clientX),\n          upHandler: (e: MouseEvent) => {\n            contextDocument?.removeEventListener(\n              'mousemove',\n              mouseEvents.moveHandler\n            )\n            contextDocument?.removeEventListener(\n              'mouseup',\n              mouseEvents.upHandler\n            )\n            onEnd(e.clientX)\n          },\n        }\n\n        const touchEvents = {\n          moveHandler: (e: TouchEvent) => {\n            if (e.cancelable) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n            onMove(e.touches[0]!.clientX)\n            return false\n          },\n          upHandler: (e: TouchEvent) => {\n            contextDocument?.removeEventListener(\n              'touchmove',\n              touchEvents.moveHandler\n            )\n            contextDocument?.removeEventListener(\n              'touchend',\n              touchEvents.upHandler\n            )\n            if (e.cancelable) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n            onEnd(e.touches[0]?.clientX)\n          },\n        }\n\n        const passiveIfSupported = passiveEventSupported()\n          ? { passive: false }\n          : false\n\n        if (isTouchStartEvent(e)) {\n          contextDocument?.addEventListener(\n            'touchmove',\n            touchEvents.moveHandler,\n            passiveIfSupported\n          )\n          contextDocument?.addEventListener(\n            'touchend',\n            touchEvents.upHandler,\n            passiveIfSupported\n          )\n        } else {\n          contextDocument?.addEventListener(\n            'mousemove',\n            mouseEvents.moveHandler,\n            passiveIfSupported\n          )\n          contextDocument?.addEventListener(\n            'mouseup',\n            mouseEvents.upHandler,\n            passiveIfSupported\n          )\n        }\n\n        table.setColumnSizingInfo(old => ({\n          ...old,\n          startOffset: clientX,\n          startSize,\n          deltaOffset: 0,\n          deltaPercentage: 0,\n          columnSizingStart,\n          isResizingColumn: column.id,\n        }))\n      }\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnSizing = updater =>\n      table.options.onColumnSizingChange?.(updater)\n    table.setColumnSizingInfo = updater =>\n      table.options.onColumnSizingInfoChange?.(updater)\n    table.resetColumnSizing = defaultState => {\n      table.setColumnSizing(\n        defaultState ? {} : table.initialState.columnSizing ?? {}\n      )\n    }\n    table.resetHeaderSizeInfo = defaultState => {\n      table.setColumnSizingInfo(\n        defaultState\n          ? getDefaultColumnSizingInfoState()\n          : table.initialState.columnSizingInfo ??\n              getDefaultColumnSizingInfoState()\n      )\n    }\n    table.getTotalSize = () =>\n      table.getHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getLeftTotalSize = () =>\n      table.getLeftHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getCenterTotalSize = () =>\n      table.getCenterHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getRightTotalSize = () =>\n      table.getRightHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n  },\n}\n\nlet passiveSupported: boolean | null = null\nexport function passiveEventSupported() {\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    const noop = () => {}\n\n    window.addEventListener('test', noop, options)\n    window.removeEventListener('test', noop)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\nfunction isTouchStartEvent(e: unknown): e is TouchEvent {\n  return (e as TouchEvent).type === 'touchstart'\n}\n","import { ColumnPinningPosition } from '..'\nimport {\n  Cell,\n  Column,\n  OnChangeFn,\n  Table,\n  Updater,\n  Row,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type VisibilityState = Record<string, boolean>\n\nexport interface VisibilityTableState {\n  columnVisibility: VisibilityState\n}\n\nexport interface VisibilityOptions {\n  /**\n   * Whether to enable column hiding. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#enablehiding)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  enableHiding?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnVisibility` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#oncolumnvisibilitychange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  onColumnVisibilityChange?: OnChangeFn<VisibilityState>\n}\n\nexport type VisibilityDefaultOptions = Pick<\n  VisibilityOptions,\n  'onColumnVisibilityChange'\n>\n\nexport interface VisibilityInstance<TData extends RowData> {\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the unpinned/center portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getcentervisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getCenterVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns whether all columns are visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getisallcolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsAllColumnsVisible: () => boolean\n  /**\n   * Returns whether any columns are visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getissomecolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsSomeColumnsVisible: () => boolean\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the left portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getleftvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getLeftVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the right portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getrightvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getRightVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a handler for toggling the visibility of all columns, meant to be bound to a `input[type=checkbox]` element.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#gettoggleallcolumnsvisibilityhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getToggleAllColumnsVisibilityHandler: () => (event: unknown) => void\n  /**\n   * Returns a flat array of columns that are visible, including parent columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisibleflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleFlatColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a flat array of leaf-node columns that are visible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Resets the column visibility state to the initial state. If `defaultState` is provided, the state will be reset to `{}`\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#resetcolumnvisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  resetColumnVisibility: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnVisibility` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#setcolumnvisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  setColumnVisibility: (updater: Updater<VisibilityState>) => void\n  /**\n   * Toggles the visibility of all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#toggleallcolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  toggleAllColumnsVisible: (value?: boolean) => void\n}\n\nexport interface VisibilityColumnDef {\n  enableHiding?: boolean\n}\n\nexport interface VisibilityRow<TData extends RowData> {\n  _getAllVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns an array of cells that account for column visibility for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleCells: () => Cell<TData, unknown>[]\n}\n\nexport interface VisibilityColumn {\n  /**\n   * Returns whether the column can be hidden\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getcanhide)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getCanHide: () => boolean\n  /**\n   * Returns whether the column is visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getisvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsVisible: () => boolean\n  /**\n   * Returns a function that can be used to toggle the column visibility. This function can be used to bind to an event handler to a checkbox.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#gettogglevisibilityhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getToggleVisibilityHandler: () => (event: unknown) => void\n  /**\n   * Toggles the visibility of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#togglevisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  toggleVisibility: (value?: boolean) => void\n}\n\n//\n\nexport const ColumnVisibility: TableFeature = {\n  getInitialState: (state): VisibilityTableState => {\n    return {\n      columnVisibility: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): VisibilityDefaultOptions => {\n    return {\n      onColumnVisibilityChange: makeStateUpdater('columnVisibility', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.toggleVisibility = value => {\n      if (column.getCanHide()) {\n        table.setColumnVisibility(old => ({\n          ...old,\n          [column.id]: value ?? !column.getIsVisible(),\n        }))\n      }\n    }\n    column.getIsVisible = () => {\n      const childColumns = column.columns\n      return (\n        (childColumns.length\n          ? childColumns.some(c => c.getIsVisible())\n          : table.getState().columnVisibility?.[column.id]) ?? true\n      )\n    }\n\n    column.getCanHide = () => {\n      return (\n        (column.columnDef.enableHiding ?? true) &&\n        (table.options.enableHiding ?? true)\n      )\n    }\n    column.getToggleVisibilityHandler = () => {\n      return (e: unknown) => {\n        column.toggleVisibility?.(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row._getAllVisibleCells = memo(\n      () => [row.getAllCells(), table.getState().columnVisibility],\n      cells => {\n        return cells.filter(cell => cell.column.getIsVisible())\n      },\n      getMemoOptions(table.options, 'debugRows', '_getAllVisibleCells')\n    )\n    row.getVisibleCells = memo(\n      () => [\n        row.getLeftVisibleCells(),\n        row.getCenterVisibleCells(),\n        row.getRightVisibleCells(),\n      ],\n      (left, center, right) => [...left, ...center, ...right],\n      getMemoOptions(table.options, 'debugRows', 'getVisibleCells')\n    )\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    const makeVisibleColumnsMethod = (\n      key: string,\n      getColumns: () => Column<TData, unknown>[]\n    ): (() => Column<TData, unknown>[]) => {\n      return memo(\n        () => [\n          getColumns(),\n          getColumns()\n            .filter(d => d.getIsVisible())\n            .map(d => d.id)\n            .join('_'),\n        ],\n        columns => {\n          return columns.filter(d => d.getIsVisible?.())\n        },\n        getMemoOptions(table.options, 'debugColumns', key)\n      )\n    }\n\n    table.getVisibleFlatColumns = makeVisibleColumnsMethod(\n      'getVisibleFlatColumns',\n      () => table.getAllFlatColumns()\n    )\n    table.getVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getVisibleLeafColumns',\n      () => table.getAllLeafColumns()\n    )\n    table.getLeftVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getLeftVisibleLeafColumns',\n      () => table.getLeftLeafColumns()\n    )\n    table.getRightVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getRightVisibleLeafColumns',\n      () => table.getRightLeafColumns()\n    )\n    table.getCenterVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getCenterVisibleLeafColumns',\n      () => table.getCenterLeafColumns()\n    )\n\n    table.setColumnVisibility = updater =>\n      table.options.onColumnVisibilityChange?.(updater)\n\n    table.resetColumnVisibility = defaultState => {\n      table.setColumnVisibility(\n        defaultState ? {} : table.initialState.columnVisibility ?? {}\n      )\n    }\n\n    table.toggleAllColumnsVisible = value => {\n      value = value ?? !table.getIsAllColumnsVisible()\n\n      table.setColumnVisibility(\n        table.getAllLeafColumns().reduce(\n          (obj, column) => ({\n            ...obj,\n            [column.id]: !value ? !column.getCanHide?.() : value,\n          }),\n          {}\n        )\n      )\n    }\n\n    table.getIsAllColumnsVisible = () =>\n      !table.getAllLeafColumns().some(column => !column.getIsVisible?.())\n\n    table.getIsSomeColumnsVisible = () =>\n      table.getAllLeafColumns().some(column => column.getIsVisible?.())\n\n    table.getToggleAllColumnsVisibilityHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllColumnsVisible(\n          ((e as MouseEvent).target as HTMLInputElement)?.checked\n        )\n      }\n    }\n  },\n}\n\nexport function _getVisibleLeafColumns<TData extends RowData>(\n  table: Table<TData>,\n  position?: ColumnPinningPosition | 'center'\n) {\n  return !position\n    ? table.getVisibleLeafColumns()\n    : position === 'center'\n      ? table.getCenterVisibleLeafColumns()\n      : position === 'left'\n        ? table.getLeftVisibleLeafColumns()\n        : table.getRightVisibleLeafColumns()\n}\n","import { RowModel } from '..'\nimport { Table, RowData, TableFeature } from '../types'\n\nexport interface GlobalFacetingInstance<TData extends RowData> {\n  _getGlobalFacetedMinMaxValues?: () => undefined | [number, number]\n  _getGlobalFacetedRowModel?: () => RowModel<TData>\n  _getGlobalFacetedUniqueValues?: () => Map<any, number>\n  /**\n   * Currently, this function returns the built-in `includesString` filter function. In future releases, it may return more dynamic filter functions based on the nature of the data provided.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-faceting#getglobalautofilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-faceting)\n   */\n  getGlobalFacetedMinMaxValues: () => undefined | [number, number]\n  /**\n   * Returns the row model for the table after **global** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-faceting#getglobalfacetedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-faceting)\n   */\n  getGlobalFacetedRowModel: () => RowModel<TData>\n  /**\n   * Returns the faceted unique values for the global filter.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-faceting#getglobalfaceteduniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-faceting)\n   */\n  getGlobalFacetedUniqueValues: () => Map<any, number>\n}\n\n//\n\nexport const GlobalFaceting: TableFeature = {\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table._getGlobalFacetedRowModel =\n      table.options.getFacetedRowModel &&\n      table.options.getFacetedRowModel(table, '__global__')\n\n    table.getGlobalFacetedRowModel = () => {\n      if (table.options.manualFiltering || !table._getGlobalFacetedRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return table._getGlobalFacetedRowModel()\n    }\n\n    table._getGlobalFacetedUniqueValues =\n      table.options.getFacetedUniqueValues &&\n      table.options.getFacetedUniqueValues(table, '__global__')\n    table.getGlobalFacetedUniqueValues = () => {\n      if (!table._getGlobalFacetedUniqueValues) {\n        return new Map()\n      }\n\n      return table._getGlobalFacetedUniqueValues()\n    }\n\n    table._getGlobalFacetedMinMaxValues =\n      table.options.getFacetedMinMaxValues &&\n      table.options.getFacetedMinMaxValues(table, '__global__')\n    table.getGlobalFacetedMinMaxValues = () => {\n      if (!table._getGlobalFacetedMinMaxValues) {\n        return\n      }\n\n      return table._getGlobalFacetedMinMaxValues()\n    }\n  },\n}\n","import {\n  OnChangeFn,\n  Table,\n  Row,\n  RowModel,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type RowSelectionState = Record<string, boolean>\n\nexport interface RowSelectionTableState {\n  rowSelection: RowSelectionState\n}\n\nexport interface RowSelectionOptions<TData extends RowData> {\n  /**\n   * - Enables/disables multiple row selection for all rows in the table OR\n   * - A function that given a row, returns whether to enable/disable multiple row selection for that row's children/grandchildren\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablemultirowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableMultiRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * - Enables/disables row selection for all rows in the table OR\n   * - A function that given a row, returns whether to enable/disable row selection for that row\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablerowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * Enables/disables automatic sub-row selection when a parent row is selected, or a function that enables/disables automatic sub-row selection for each row.\n   * (Use in combination with expanding or grouping features)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablesubrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableSubRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.rowSelection` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#onrowselectionchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  onRowSelectionChange?: OnChangeFn<RowSelectionState>\n  // enableGroupingRowSelection?:\n  //   | boolean\n  //   | ((\n  //       row: Row<TData>\n  //     ) => boolean)\n  // isAdditiveSelectEvent?: (e: unknown) => boolean\n  // isInclusiveSelectEvent?: (e: unknown) => boolean\n  // selectRowsFn?: (\n  //   table: Table<TData>,\n  //   rowModel: RowModel<TData>\n  // ) => RowModel<TData>\n}\n\nexport interface RowSelectionRow {\n  /**\n   * Returns whether or not the row can multi-select.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanmultiselect)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanMultiSelect: () => boolean\n  /**\n   * Returns whether or not the row can be selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanselect)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanSelect: () => boolean\n  /**\n   * Returns whether or not the row can select sub rows automatically when the parent row is selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanselectsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanSelectSubRows: () => boolean\n  /**\n   * Returns whether or not all of the row's sub rows are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallsubrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllSubRowsSelected: () => boolean\n  /**\n   * Returns whether or not the row is selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSelected: () => boolean\n  /**\n   * Returns whether or not some of the row's sub rows are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomeselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomeSelected: () => boolean\n  /**\n   * Returns a handler that can be used to toggle the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleSelectedHandler: () => (event: unknown) => void\n  /**\n   * Selects/deselects the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleSelected: (value?: boolean, opts?: { selectChildren?: boolean }) => void\n}\n\nexport interface RowSelectionInstance<TData extends RowData> {\n  /**\n   * Returns the row model of all rows that are selected after filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getfilteredselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getFilteredSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model of all rows that are selected after grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getgroupedselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getGroupedSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns whether or not all rows on the current page are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallpagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllPageRowsSelected: () => boolean\n  /**\n   * Returns whether or not all rows in the table are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllRowsSelected: () => boolean\n  /**\n   * Returns whether or not any rows on the current page are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomepagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomePageRowsSelected: () => boolean\n  /**\n   * Returns whether or not any rows in the table are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomeRowsSelected: () => boolean\n  /**\n   * Returns the core row model of all rows before row selection has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getpreselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getPreSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model of all rows that are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns a handler that can be used to toggle all rows on the current page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleallpagerowsselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleAllPageRowsSelectedHandler: () => (event: unknown) => void\n  /**\n   * Returns a handler that can be used to toggle all rows in the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleallrowsselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleAllRowsSelectedHandler: () => (event: unknown) => void\n  /**\n   * Resets the **rowSelection** state to the `initialState.rowSelection`, or `true` can be passed to force a default blank state reset to `{}`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#resetrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  resetRowSelection: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.rowSelection` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#setrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  setRowSelection: (updater: Updater<RowSelectionState>) => void\n  /**\n   * Selects/deselects all rows on the current page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleallpagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleAllPageRowsSelected: (value?: boolean) => void\n  /**\n   * Selects/deselects all rows in the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleallrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleAllRowsSelected: (value?: boolean) => void\n}\n\n//\n\nexport const RowSelection: TableFeature = {\n  getInitialState: (state): RowSelectionTableState => {\n    return {\n      rowSelection: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): RowSelectionOptions<TData> => {\n    return {\n      onRowSelectionChange: makeStateUpdater('rowSelection', table),\n      enableRowSelection: true,\n      enableMultiRowSelection: true,\n      enableSubRowSelection: true,\n      // enableGroupingRowSelection: false,\n      // isAdditiveSelectEvent: (e: unknown) => !!e.metaKey,\n      // isInclusiveSelectEvent: (e: unknown) => !!e.shiftKey,\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setRowSelection = updater =>\n      table.options.onRowSelectionChange?.(updater)\n    table.resetRowSelection = defaultState =>\n      table.setRowSelection(\n        defaultState ? {} : table.initialState.rowSelection ?? {}\n      )\n    table.toggleAllRowsSelected = value => {\n      table.setRowSelection(old => {\n        value =\n          typeof value !== 'undefined' ? value : !table.getIsAllRowsSelected()\n\n        const rowSelection = { ...old }\n\n        const preGroupedFlatRows = table.getPreGroupedRowModel().flatRows\n\n        // We don't use `mutateRowIsSelected` here for performance reasons.\n        // All of the rows are flat already, so it wouldn't be worth it\n        if (value) {\n          preGroupedFlatRows.forEach(row => {\n            if (!row.getCanSelect()) {\n              return\n            }\n            rowSelection[row.id] = true\n          })\n        } else {\n          preGroupedFlatRows.forEach(row => {\n            delete rowSelection[row.id]\n          })\n        }\n\n        return rowSelection\n      })\n    }\n    table.toggleAllPageRowsSelected = value =>\n      table.setRowSelection(old => {\n        const resolvedValue =\n          typeof value !== 'undefined'\n            ? value\n            : !table.getIsAllPageRowsSelected()\n\n        const rowSelection: RowSelectionState = { ...old }\n\n        table.getRowModel().rows.forEach(row => {\n          mutateRowIsSelected(rowSelection, row.id, resolvedValue, true, table)\n        })\n\n        return rowSelection\n      })\n\n    // addRowSelectionRange: rowId => {\n    //   const {\n    //     rows,\n    //     rowsById,\n    //     options: { selectGroupingRows, selectSubRows },\n    //   } = table\n\n    //   const findSelectedRow = (rows: Row[]) => {\n    //     let found\n    //     rows.find(d => {\n    //       if (d.getIsSelected()) {\n    //         found = d\n    //         return true\n    //       }\n    //       const subFound = findSelectedRow(d.subRows || [])\n    //       if (subFound) {\n    //         found = subFound\n    //         return true\n    //       }\n    //       return false\n    //     })\n    //     return found\n    //   }\n\n    //   const firstRow = findSelectedRow(rows) || rows[0]\n    //   const lastRow = rowsById[rowId]\n\n    //   let include = false\n    //   const selectedRowIds = {}\n\n    //   const addRow = (row: Row) => {\n    //     mutateRowIsSelected(selectedRowIds, row.id, true, {\n    //       rowsById,\n    //       selectGroupingRows: selectGroupingRows!,\n    //       selectSubRows: selectSubRows!,\n    //     })\n    //   }\n\n    //   table.rows.forEach(row => {\n    //     const isFirstRow = row.id === firstRow.id\n    //     const isLastRow = row.id === lastRow.id\n\n    //     if (isFirstRow || isLastRow) {\n    //       if (!include) {\n    //         include = true\n    //       } else if (include) {\n    //         addRow(row)\n    //         include = false\n    //       }\n    //     }\n\n    //     if (include) {\n    //       addRow(row)\n    //     }\n    //   })\n\n    //   table.setRowSelection(selectedRowIds)\n    // },\n    table.getPreSelectedRowModel = () => table.getCoreRowModel()\n    table.getSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getCoreRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getSelectedRowModel')\n    )\n\n    table.getFilteredSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getFilteredRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getFilteredSelectedRowModel')\n    )\n\n    table.getGroupedSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getSortedRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getGroupedSelectedRowModel')\n    )\n\n    ///\n\n    // getGroupingRowCanSelect: rowId => {\n    //   const row = table.getRow(rowId)\n\n    //   if (!row) {\n    //     throw new Error()\n    //   }\n\n    //   if (typeof table.options.enableGroupingRowSelection === 'function') {\n    //     return table.options.enableGroupingRowSelection(row)\n    //   }\n\n    //   return table.options.enableGroupingRowSelection ?? false\n    // },\n\n    table.getIsAllRowsSelected = () => {\n      const preGroupedFlatRows = table.getFilteredRowModel().flatRows\n      const { rowSelection } = table.getState()\n\n      let isAllRowsSelected = Boolean(\n        preGroupedFlatRows.length && Object.keys(rowSelection).length\n      )\n\n      if (isAllRowsSelected) {\n        if (\n          preGroupedFlatRows.some(\n            row => row.getCanSelect() && !rowSelection[row.id]\n          )\n        ) {\n          isAllRowsSelected = false\n        }\n      }\n\n      return isAllRowsSelected\n    }\n\n    table.getIsAllPageRowsSelected = () => {\n      const paginationFlatRows = table\n        .getPaginationRowModel()\n        .flatRows.filter(row => row.getCanSelect())\n      const { rowSelection } = table.getState()\n\n      let isAllPageRowsSelected = !!paginationFlatRows.length\n\n      if (\n        isAllPageRowsSelected &&\n        paginationFlatRows.some(row => !rowSelection[row.id])\n      ) {\n        isAllPageRowsSelected = false\n      }\n\n      return isAllPageRowsSelected\n    }\n\n    table.getIsSomeRowsSelected = () => {\n      const totalSelected = Object.keys(\n        table.getState().rowSelection ?? {}\n      ).length\n      return (\n        totalSelected > 0 &&\n        totalSelected < table.getFilteredRowModel().flatRows.length\n      )\n    }\n\n    table.getIsSomePageRowsSelected = () => {\n      const paginationFlatRows = table.getPaginationRowModel().flatRows\n      return table.getIsAllPageRowsSelected()\n        ? false\n        : paginationFlatRows\n            .filter(row => row.getCanSelect())\n            .some(d => d.getIsSelected() || d.getIsSomeSelected())\n    }\n\n    table.getToggleAllRowsSelectedHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllRowsSelected(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n\n    table.getToggleAllPageRowsSelectedHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllPageRowsSelected(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.toggleSelected = (value, opts) => {\n      const isSelected = row.getIsSelected()\n\n      table.setRowSelection(old => {\n        value = typeof value !== 'undefined' ? value : !isSelected\n\n        if (row.getCanSelect() && isSelected === value) {\n          return old\n        }\n\n        const selectedRowIds = { ...old }\n\n        mutateRowIsSelected(\n          selectedRowIds,\n          row.id,\n          value,\n          opts?.selectChildren ?? true,\n          table\n        )\n\n        return selectedRowIds\n      })\n    }\n    row.getIsSelected = () => {\n      const { rowSelection } = table.getState()\n      return isRowSelected(row, rowSelection)\n    }\n\n    row.getIsSomeSelected = () => {\n      const { rowSelection } = table.getState()\n      return isSubRowSelected(row, rowSelection, table) === 'some'\n    }\n\n    row.getIsAllSubRowsSelected = () => {\n      const { rowSelection } = table.getState()\n      return isSubRowSelected(row, rowSelection, table) === 'all'\n    }\n\n    row.getCanSelect = () => {\n      if (typeof table.options.enableRowSelection === 'function') {\n        return table.options.enableRowSelection(row)\n      }\n\n      return table.options.enableRowSelection ?? true\n    }\n\n    row.getCanSelectSubRows = () => {\n      if (typeof table.options.enableSubRowSelection === 'function') {\n        return table.options.enableSubRowSelection(row)\n      }\n\n      return table.options.enableSubRowSelection ?? true\n    }\n\n    row.getCanMultiSelect = () => {\n      if (typeof table.options.enableMultiRowSelection === 'function') {\n        return table.options.enableMultiRowSelection(row)\n      }\n\n      return table.options.enableMultiRowSelection ?? true\n    }\n    row.getToggleSelectedHandler = () => {\n      const canSelect = row.getCanSelect()\n\n      return (e: unknown) => {\n        if (!canSelect) return\n        row.toggleSelected(\n          ((e as MouseEvent).target as HTMLInputElement)?.checked\n        )\n      }\n    }\n  },\n}\n\nconst mutateRowIsSelected = <TData extends RowData>(\n  selectedRowIds: Record<string, boolean>,\n  id: string,\n  value: boolean,\n  includeChildren: boolean,\n  table: Table<TData>\n) => {\n  const row = table.getRow(id, true)\n\n  // const isGrouped = row.getIsGrouped()\n\n  // if ( // TODO: enforce grouping row selection rules\n  //   !isGrouped ||\n  //   (isGrouped && table.options.enableGroupingRowSelection)\n  // ) {\n  if (value) {\n    if (!row.getCanMultiSelect()) {\n      Object.keys(selectedRowIds).forEach(key => delete selectedRowIds[key])\n    }\n    if (row.getCanSelect()) {\n      selectedRowIds[id] = true\n    }\n  } else {\n    delete selectedRowIds[id]\n  }\n  // }\n\n  if (includeChildren && row.subRows?.length && row.getCanSelectSubRows()) {\n    row.subRows.forEach(row =>\n      mutateRowIsSelected(selectedRowIds, row.id, value, includeChildren, table)\n    )\n  }\n}\n\nexport function selectRowsFn<TData extends RowData>(\n  table: Table<TData>,\n  rowModel: RowModel<TData>\n): RowModel<TData> {\n  const rowSelection = table.getState().rowSelection\n\n  const newSelectedFlatRows: Row<TData>[] = []\n  const newSelectedRowsById: Record<string, Row<TData>> = {}\n\n  // Filters top level and nested rows\n  const recurseRows = (rows: Row<TData>[], depth = 0): Row<TData>[] => {\n    return rows\n      .map(row => {\n        const isSelected = isRowSelected(row, rowSelection)\n\n        if (isSelected) {\n          newSelectedFlatRows.push(row)\n          newSelectedRowsById[row.id] = row\n        }\n\n        if (row.subRows?.length) {\n          row = {\n            ...row,\n            subRows: recurseRows(row.subRows, depth + 1),\n          }\n        }\n\n        if (isSelected) {\n          return row\n        }\n      })\n      .filter(Boolean) as Row<TData>[]\n  }\n\n  return {\n    rows: recurseRows(rowModel.rows),\n    flatRows: newSelectedFlatRows,\n    rowsById: newSelectedRowsById,\n  }\n}\n\nexport function isRowSelected<TData extends RowData>(\n  row: Row<TData>,\n  selection: Record<string, boolean>\n): boolean {\n  return selection[row.id] ?? false\n}\n\nexport function isSubRowSelected<TData extends RowData>(\n  row: Row<TData>,\n  selection: Record<string, boolean>,\n  table: Table<TData>\n): boolean | 'some' | 'all' {\n  if (!row.subRows?.length) return false\n\n  let allChildrenSelected = true\n  let someSelected = false\n\n  row.subRows.forEach(subRow => {\n    // Bail out early if we know both of these\n    if (someSelected && !allChildrenSelected) {\n      return\n    }\n\n    if (subRow.getCanSelect()) {\n      if (isRowSelected(subRow, selection)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    }\n\n    // Check row selection of nested subrows\n    if (subRow.subRows && subRow.subRows.length) {\n      const subRowChildrenSelected = isSubRowSelected(subRow, selection, table)\n      if (subRowChildrenSelected === 'all') {\n        someSelected = true\n      } else if (subRowChildrenSelected === 'some') {\n        someSelected = true\n        allChildrenSelected = false\n      } else {\n        allChildrenSelected = false\n      }\n    }\n  })\n\n  return allChildrenSelected ? 'all' : someSelected ? 'some' : false\n}\n","import { SortingFn } from './features/RowSorting'\n\nexport const reSplitAlphaNumeric = /([0-9]+)/gm\n\nconst alphanumeric: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(\n    toString(rowA.getValue(columnId)).toLowerCase(),\n    toString(rowB.getValue(columnId)).toLowerCase()\n  )\n}\n\nconst alphanumericCaseSensitive: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(\n    toString(rowA.getValue(columnId)),\n    toString(rowB.getValue(columnId))\n  )\n}\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst text: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(\n    toString(rowA.getValue(columnId)).toLowerCase(),\n    toString(rowB.getValue(columnId)).toLowerCase()\n  )\n}\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst textCaseSensitive: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(\n    toString(rowA.getValue(columnId)),\n    toString(rowB.getValue(columnId))\n  )\n}\n\nconst datetime: SortingFn<any> = (rowA, rowB, columnId) => {\n  const a = rowA.getValue<Date>(columnId)\n  const b = rowB.getValue<Date>(columnId)\n\n  // Can handle nullish values\n  // Use > and < because == (and ===) doesn't work with\n  // Date objects (would require calling getTime()).\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nconst basic: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(rowA.getValue(columnId), rowB.getValue(columnId))\n}\n\n// Utils\n\nfunction compareBasic(a: any, b: any) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction toString(a: any) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nfunction compareAlphanumeric(aStr: string, bStr: string) {\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  const a = aStr.split(reSplitAlphaNumeric).filter(Boolean)\n  const b = bStr.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    const aa = a.shift()!\n    const bb = b.shift()!\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0]!)) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1]!)) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\n// Exports\n\nexport const sortingFns = {\n  alphanumeric,\n  alphanumericCaseSensitive,\n  text,\n  textCaseSensitive,\n  datetime,\n  basic,\n}\n\nexport type BuiltInSortingFn = keyof typeof sortingFns\n","import { functionalUpdate, getMemoOptions, memo, RequiredKeys } from '../utils'\n\nimport {\n  Updater,\n  TableOptionsResolved,\n  TableState,\n  Table,\n  InitialTableState,\n  Row,\n  Column,\n  RowModel,\n  ColumnDef,\n  TableOptions,\n  RowData,\n  TableMeta,\n  ColumnDefResolved,\n  GroupColumnDef,\n  TableFeature,\n} from '../types'\n\n//\nimport { createColumn } from './column'\nimport { Headers } from './headers'\n//\n\nimport { ColumnFaceting } from '../features/ColumnFaceting'\nimport { ColumnFiltering } from '../features/ColumnFiltering'\nimport { ColumnGrouping } from '../features/ColumnGrouping'\nimport { ColumnOrdering } from '../features/ColumnOrdering'\nimport { ColumnPinning } from '../features/ColumnPinning'\nimport { ColumnSizing } from '../features/ColumnSizing'\nimport { ColumnVisibility } from '../features/ColumnVisibility'\nimport { GlobalFaceting } from '../features/GlobalFaceting'\nimport { GlobalFiltering } from '../features/GlobalFiltering'\nimport { RowExpanding } from '../features/RowExpanding'\nimport { RowPagination } from '../features/RowPagination'\nimport { RowPinning } from '../features/RowPinning'\nimport { RowSelection } from '../features/RowSelection'\nimport { RowSorting } from '../features/RowSorting'\n\nconst builtInFeatures = [\n  Headers,\n  ColumnVisibility,\n  ColumnOrdering,\n  ColumnPinning,\n  ColumnFaceting,\n  ColumnFiltering,\n  GlobalFaceting, //depends on ColumnFaceting\n  GlobalFiltering, //depends on ColumnFiltering\n  RowSorting,\n  ColumnGrouping, //depends on RowSorting\n  RowExpanding,\n  RowPagination,\n  RowPinning,\n  RowSelection,\n  ColumnSizing,\n] as const\n\n//\n\nexport interface CoreTableState {}\n\nexport interface CoreOptions<TData extends RowData> {\n  /**\n   * An array of extra features that you can add to the table instance.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#_features)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  _features?: TableFeature[]\n  /**\n   * Set this option to override any of the `autoReset...` feature options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#autoresetall)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  autoResetAll?: boolean\n  /**\n   * The array of column defs to use for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#columns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  columns: ColumnDef<TData, any>[]\n  /**\n   * The data for the table to display. This array should match the type you provided to `table.setRowType<...>`. Columns can access this data via string/index or a functional accessor. When the `data` option changes reference, the table will reprocess the data.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#data)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  data: TData[]\n  /**\n   * Set this option to `true` to output all debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugall)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugAll?: boolean\n  /**\n   * Set this option to `true` to output cell debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugcells]\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugCells?: boolean\n  /**\n   * Set this option to `true` to output column debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugColumns?: boolean\n  /**\n   * Set this option to `true` to output header debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugHeaders?: boolean\n  /**\n   * Set this option to `true` to output row debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugRows?: boolean\n  /**\n   * Set this option to `true` to output table debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugtable)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugTable?: boolean\n  /**\n   * Default column options to use for all column defs supplied to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#defaultcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  defaultColumn?: Partial<ColumnDef<TData, unknown>>\n  /**\n   * This required option is a factory for a function that computes and returns the core row model for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcorerowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getCoreRowModel: (table: Table<any>) => () => RowModel<any>\n  /**\n   * This optional function is used to derive a unique ID for any given row. If not provided the rows index is used (nested rows join together with `.` using their grandparents' index eg. `index.index.index`). If you need to identify individual rows that are originating from any server-side operations, it's suggested you use this function to return an ID that makes sense regardless of network IO/ambiguity eg. a userId, taskId, database ID field, etc.\n   * @example getRowId: row => row.userId\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrowid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRowId?: (originalRow: TData, index: number, parent?: Row<TData>) => string\n  /**\n   * This optional function is used to access the sub rows for any given row. If you are using nested rows, you will need to use this function to return the sub rows object (or undefined) from the row.\n   * @example getSubRows: row => row.subRows\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getSubRows?: (originalRow: TData, index: number) => undefined | TData[]\n  /**\n   * Use this option to optionally pass initial state to the table. This state will be used when resetting various table states either automatically by the table (eg. `options.autoResetPageIndex`) or via functions like `table.resetRowSelection()`. Most reset function allow you optionally pass a flag to reset to a blank/default state instead of the initial state.\n   *\n   * Table state will not be reset when this object changes, which also means that the initial state object does not need to be stable.\n   *\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#initialstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  initialState?: InitialTableState\n  /**\n   * This option is used to optionally implement the merging of table options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#mergeoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  mergeOptions?: (\n    defaultOptions: TableOptions<TData>,\n    options: Partial<TableOptions<TData>>\n  ) => TableOptions<TData>\n  /**\n   * You can pass any object to `options.meta` and access it anywhere the `table` is available via `table.options.meta`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#meta)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  meta?: TableMeta<TData>\n  /**\n   * The `onStateChange` option can be used to optionally listen to state changes within the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#onstatechange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  onStateChange: (updater: Updater<TableState>) => void\n  /**\n   * Value used when the desired value is not found in the data.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#renderfallbackvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  renderFallbackValue: any\n  /**\n   * The `state` option can be used to optionally _control_ part or all of the table state. The state you pass here will merge with and overwrite the internal automatically-managed state to produce the final state for the table. You can also listen to state changes via the `onStateChange` option.\n   * > Note: Any state passed in here will override both the internal state and any other `initialState` you provide.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#state)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  state: Partial<TableState>\n}\n\nexport interface CoreInstance<TData extends RowData> {\n  _features: readonly TableFeature[]\n  _getAllFlatColumnsById: () => Record<string, Column<TData, unknown>>\n  _getColumnDefs: () => ColumnDef<TData, unknown>[]\n  _getCoreRowModel?: () => RowModel<TData>\n  _getDefaultColumnDef: () => Partial<ColumnDef<TData, unknown>>\n  _getRowId: (_: TData, index: number, parent?: Row<TData>) => string\n  _queue: (cb: () => void) => void\n  /**\n   * Returns all columns in the table in their normalized and nested hierarchy.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all columns in the table flattened to a single level.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllFlatColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all leaf-node columns in the table flattened to a single level. This does not include parent columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a single column by its ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getColumn: (columnId: string) => Column<TData, unknown> | undefined\n  /**\n   * Returns the core row model before any processing has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcorerowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getCoreRowModel: () => RowModel<TData>\n  /**\n   * Returns the row with the given ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrow)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRow: (id: string, searchAll?: boolean) => Row<TData>\n  /**\n   * Returns the final model after all processing from other used features has been applied. This is the row model that is most commonly used for rendering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRowModel: () => RowModel<TData>\n  /**\n   * Call this function to get the table's current state. It's recommended to use this function and its state, especially when managing the table state manually. It is the exact same state used internally by the table for every feature and function it provides.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getState: () => TableState\n  /**\n   * This is the resolved initial state of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#initialstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  initialState: TableState\n  /**\n   * A read-only reference to the table's current options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#options)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  options: RequiredKeys<TableOptionsResolved<TData>, 'state'>\n  /**\n   * Call this function to reset the table state to the initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#reset)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  reset: () => void\n  /**\n   * This function can be used to update the table options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#setoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  setOptions: (newOptions: Updater<TableOptionsResolved<TData>>) => void\n  /**\n   * Call this function to update the table state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#setstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  setState: (updater: Updater<TableState>) => void\n}\n\nexport function createTable<TData extends RowData>(\n  options: TableOptionsResolved<TData>\n): Table<TData> {\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    (options.debugAll || options.debugTable)\n  ) {\n    console.info('Creating Table Instance...')\n  }\n\n  const _features = [...builtInFeatures, ...(options._features ?? [])]\n\n  let table = { _features } as unknown as Table<TData>\n\n  const defaultOptions = table._features.reduce((obj, feature) => {\n    return Object.assign(obj, feature.getDefaultOptions?.(table))\n  }, {}) as TableOptionsResolved<TData>\n\n  const mergeOptions = (options: TableOptionsResolved<TData>) => {\n    if (table.options.mergeOptions) {\n      return table.options.mergeOptions(defaultOptions, options)\n    }\n\n    return {\n      ...defaultOptions,\n      ...options,\n    }\n  }\n\n  const coreInitialState: CoreTableState = {}\n\n  let initialState = {\n    ...coreInitialState,\n    ...(options.initialState ?? {}),\n  } as TableState\n\n  table._features.forEach(feature => {\n    initialState = (feature.getInitialState?.(initialState) ??\n      initialState) as TableState\n  })\n\n  const queued: (() => void)[] = []\n  let queuedTimeout = false\n\n  const coreInstance: CoreInstance<TData> = {\n    _features,\n    options: {\n      ...defaultOptions,\n      ...options,\n    },\n    initialState,\n    _queue: cb => {\n      queued.push(cb)\n\n      if (!queuedTimeout) {\n        queuedTimeout = true\n\n        // Schedule a microtask to run the queued callbacks after\n        // the current call stack (render, etc) has finished.\n        Promise.resolve()\n          .then(() => {\n            while (queued.length) {\n              queued.shift()!()\n            }\n            queuedTimeout = false\n          })\n          .catch(error =>\n            setTimeout(() => {\n              throw error\n            })\n          )\n      }\n    },\n    reset: () => {\n      table.setState(table.initialState)\n    },\n    setOptions: updater => {\n      const newOptions = functionalUpdate(updater, table.options)\n      table.options = mergeOptions(newOptions) as RequiredKeys<\n        TableOptionsResolved<TData>,\n        'state'\n      >\n    },\n\n    getState: () => {\n      return table.options.state as TableState\n    },\n\n    setState: (updater: Updater<TableState>) => {\n      table.options.onStateChange?.(updater)\n    },\n\n    _getRowId: (row: TData, index: number, parent?: Row<TData>) =>\n      table.options.getRowId?.(row, index, parent) ??\n      `${parent ? [parent.id, index].join('.') : index}`,\n\n    getCoreRowModel: () => {\n      if (!table._getCoreRowModel) {\n        table._getCoreRowModel = table.options.getCoreRowModel(table)\n      }\n\n      return table._getCoreRowModel!()\n    },\n\n    // The final calls start at the bottom of the model,\n    // expanded rows, which then work their way up\n\n    getRowModel: () => {\n      return table.getPaginationRowModel()\n    },\n    //in next version, we should just pass in the row model as the optional 2nd arg\n    getRow: (id: string, searchAll?: boolean) => {\n      let row = (\n        searchAll ? table.getPrePaginationRowModel() : table.getRowModel()\n      ).rowsById[id]\n\n      if (!row) {\n        row = table.getCoreRowModel().rowsById[id]\n        if (!row) {\n          if (process.env.NODE_ENV !== 'production') {\n            throw new Error(`getRow could not find row with ID: ${id}`)\n          }\n          throw new Error()\n        }\n      }\n\n      return row\n    },\n    _getDefaultColumnDef: memo(\n      () => [table.options.defaultColumn],\n      defaultColumn => {\n        defaultColumn = (defaultColumn ?? {}) as Partial<\n          ColumnDef<TData, unknown>\n        >\n\n        return {\n          header: props => {\n            const resolvedColumnDef = props.header.column\n              .columnDef as ColumnDefResolved<TData>\n\n            if (resolvedColumnDef.accessorKey) {\n              return resolvedColumnDef.accessorKey\n            }\n\n            if (resolvedColumnDef.accessorFn) {\n              return resolvedColumnDef.id\n            }\n\n            return null\n          },\n          // footer: props => props.header.column.id,\n          cell: props => props.renderValue<any>()?.toString?.() ?? null,\n          ...table._features.reduce((obj, feature) => {\n            return Object.assign(obj, feature.getDefaultColumnDef?.())\n          }, {}),\n          ...defaultColumn,\n        } as Partial<ColumnDef<TData, unknown>>\n      },\n      getMemoOptions(options, 'debugColumns', '_getDefaultColumnDef')\n    ),\n\n    _getColumnDefs: () => table.options.columns,\n\n    getAllColumns: memo(\n      () => [table._getColumnDefs()],\n      columnDefs => {\n        const recurseColumns = (\n          columnDefs: ColumnDef<TData, unknown>[],\n          parent?: Column<TData, unknown>,\n          depth = 0\n        ): Column<TData, unknown>[] => {\n          return columnDefs.map(columnDef => {\n            const column = createColumn(table, columnDef, depth, parent)\n\n            const groupingColumnDef = columnDef as GroupColumnDef<\n              TData,\n              unknown\n            >\n\n            column.columns = groupingColumnDef.columns\n              ? recurseColumns(groupingColumnDef.columns, column, depth + 1)\n              : []\n\n            return column\n          })\n        }\n\n        return recurseColumns(columnDefs)\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllColumns')\n    ),\n\n    getAllFlatColumns: memo(\n      () => [table.getAllColumns()],\n      allColumns => {\n        return allColumns.flatMap(column => {\n          return column.getFlatColumns()\n        })\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllFlatColumns')\n    ),\n\n    _getAllFlatColumnsById: memo(\n      () => [table.getAllFlatColumns()],\n      flatColumns => {\n        return flatColumns.reduce(\n          (acc, column) => {\n            acc[column.id] = column\n            return acc\n          },\n          {} as Record<string, Column<TData, unknown>>\n        )\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllFlatColumnsById')\n    ),\n\n    getAllLeafColumns: memo(\n      () => [table.getAllColumns(), table._getOrderColumnsFn()],\n      (allColumns, orderColumns) => {\n        let leafColumns = allColumns.flatMap(column => column.getLeafColumns())\n        return orderColumns(leafColumns)\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllLeafColumns')\n    ),\n\n    getColumn: columnId => {\n      const column = table._getAllFlatColumnsById()[columnId]\n\n      if (process.env.NODE_ENV !== 'production' && !column) {\n        console.error(`[Table] Column with id '${columnId}' does not exist.`)\n      }\n\n      return column\n    },\n  }\n\n  Object.assign(table, coreInstance)\n\n  for (let index = 0; index < table._features.length; index++) {\n    const feature = table._features[index]\n    feature?.createTable?.(table)\n  }\n\n  return table\n}\n","import { FilterFn, FilterFnOption } from '..'\nimport { BuiltInFilterFn, filterFns } from '../filterFns'\nimport {\n  Column,\n  OnChangeFn,\n  Table,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport interface GlobalFilterTableState {\n  globalFilter: any\n}\n\nexport interface GlobalFilterColumnDef {\n  /**\n   * Enables/disables the **global** filter for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#enableglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  enableGlobalFilter?: boolean\n}\n\nexport interface GlobalFilterColumn {\n  /**\n   * Returns whether or not the column can be **globally** filtered. Set to `false` to disable a column from being scanned during global filtering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getcanglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getCanGlobalFilter: () => boolean\n}\n\nexport interface GlobalFilterOptions<TData extends RowData> {\n  /**\n   * Enables/disables **global** filtering for all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#enableglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  enableGlobalFilter?: boolean\n  /**\n   * If provided, this function will be called with the column and should return `true` or `false` to indicate whether this column should be used for global filtering.\n   *\n   * This is useful if the column can contain data that is not `string` or `number` (i.e. `undefined`).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getcolumncanglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getColumnCanGlobalFilter?: (column: Column<TData, unknown>) => boolean\n  /**\n   * The filter function to use for global filtering.\n   * - A `string` referencing a built-in filter function\n   * - A `string` that references a custom filter functions provided via the `tableOptions.filterFns` option\n   * - A custom filter function\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#globalfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  globalFilterFn?: FilterFnOption<TData>\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.globalFilter` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#onglobalfilterchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  onGlobalFilterChange?: OnChangeFn<any>\n}\n\nexport interface GlobalFilterInstance<TData extends RowData> {\n  /**\n   * Currently, this function returns the built-in `includesString` filter function. In future releases, it may return more dynamic filter functions based on the nature of the data provided.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getglobalautofilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getGlobalAutoFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns the filter function (either user-defined or automatic, depending on configuration) for the global filter.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getglobalfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getGlobalFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Resets the **globalFilter** state to `initialState.globalFilter`, or `true` can be passed to force a default blank state reset to `undefined`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#resetglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  resetGlobalFilter: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.globalFilter` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#setglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  setGlobalFilter: (updater: Updater<any>) => void\n}\n\n//\n\nexport const GlobalFiltering: TableFeature = {\n  getInitialState: (state): GlobalFilterTableState => {\n    return {\n      globalFilter: undefined,\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): GlobalFilterOptions<TData> => {\n    return {\n      onGlobalFilterChange: makeStateUpdater('globalFilter', table),\n      globalFilterFn: 'auto',\n      getColumnCanGlobalFilter: column => {\n        const value = table\n          .getCoreRowModel()\n          .flatRows[0]?._getAllCellsByColumnId()\n          [column.id]?.getValue()\n\n        return typeof value === 'string' || typeof value === 'number'\n      },\n    } as GlobalFilterOptions<TData>\n  },\n\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column.getCanGlobalFilter = () => {\n      return (\n        (column.columnDef.enableGlobalFilter ?? true) &&\n        (table.options.enableGlobalFilter ?? true) &&\n        (table.options.enableFilters ?? true) &&\n        (table.options.getColumnCanGlobalFilter?.(column) ?? true) &&\n        !!column.accessorFn\n      )\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.getGlobalAutoFilterFn = () => {\n      return filterFns.includesString\n    }\n\n    table.getGlobalFilterFn = () => {\n      const { globalFilterFn: globalFilterFn } = table.options\n\n      return isFunction(globalFilterFn)\n        ? globalFilterFn\n        : globalFilterFn === 'auto'\n          ? table.getGlobalAutoFilterFn()\n          : table.options.filterFns?.[globalFilterFn as string] ??\n            filterFns[globalFilterFn as BuiltInFilterFn]\n    }\n\n    table.setGlobalFilter = updater => {\n      table.options.onGlobalFilterChange?.(updater)\n    }\n\n    table.resetGlobalFilter = defaultState => {\n      table.setGlobalFilter(\n        defaultState ? undefined : table.initialState.globalFilter\n      )\n    }\n  },\n}\n","import { RowModel } from '..'\nimport {\n  BuiltInSortingFn,\n  reSplitAlphaNumeric,\n  sortingFns,\n} from '../sortingFns'\n\nimport {\n  Column,\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  RowData,\n  SortingFns,\n  TableFeature,\n} from '../types'\n\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport type SortDirection = 'asc' | 'desc'\n\nexport interface ColumnSort {\n  desc: boolean\n  id: string\n}\n\nexport type SortingState = ColumnSort[]\n\nexport interface SortingTableState {\n  sorting: SortingState\n}\n\nexport interface SortingFn<TData extends RowData> {\n  (rowA: Row<TData>, rowB: Row<TData>, columnId: string): number\n}\n\nexport type CustomSortingFns<TData extends RowData> = Record<\n  string,\n  SortingFn<TData>\n>\n\nexport type SortingFnOption<TData extends RowData> =\n  | 'auto'\n  | keyof SortingFns\n  | BuiltInSortingFn\n  | SortingFn<TData>\n\nexport interface SortingColumnDef<TData extends RowData> {\n  /**\n   * Enables/Disables multi-sorting for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiSort?: boolean\n  /**\n   * Enables/Disables sorting for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSorting?: boolean\n  /**\n   * Inverts the order of the sorting for this column. This is useful for values that have an inverted best/worst scale where lower numbers are better, eg. a ranking (1st, 2nd, 3rd) or golf-like scoring\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#invertsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  invertSorting?: boolean\n  /**\n   * Set to `true` for sorting toggles on this column to start in the descending direction.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortdescfirst)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortDescFirst?: boolean\n  /**\n   * The sorting function to use with this column.\n   * - A `string` referencing a built-in sorting function\n   * - A custom sorting function\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortingFn?: SortingFnOption<TData>\n  /**\n   * The priority of undefined values when sorting this column.\n   * - `false`\n   *   - Undefined values will be considered tied and need to be sorted by the next column filter or original index (whichever applies)\n   * - `-1`\n   *   - Undefined values will be sorted with higher priority (ascending) (if ascending, undefined will appear on the beginning of the list)\n   * - `1`\n   *   - Undefined values will be sorted with lower priority (descending) (if ascending, undefined will appear on the end of the list)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortundefined)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortUndefined?: false | -1 | 1 | 'first' | 'last'\n}\n\nexport interface SortingColumn<TData extends RowData> {\n  /**\n   * Removes this column from the table's sorting state\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#clearsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  clearSorting: () => void\n  /**\n   * Returns a sort direction automatically inferred based on the columns values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getautosortdir)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getAutoSortDir: () => SortDirection\n  /**\n   * Returns a sorting function automatically inferred based on the columns values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getautosortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getAutoSortingFn: () => SortingFn<TData>\n  /**\n   * Returns whether this column can be multi-sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getcanmultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getCanMultiSort: () => boolean\n  /**\n   * Returns whether this column can be sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getcansort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getCanSort: () => boolean\n  /**\n   * Returns the first direction that should be used when sorting this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getfirstsortdir)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getFirstSortDir: () => SortDirection\n  /**\n   * Returns the current sort direction of this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getissorted)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getIsSorted: () => false | SortDirection\n  /**\n   * Returns the next sorting order.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getnextsortingorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getNextSortingOrder: () => SortDirection | false\n  /**\n   * Returns the index position of this column's sorting within the sorting state\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortIndex: () => number\n  /**\n   * Returns the resolved sorting function to be used for this column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortingFn: () => SortingFn<TData>\n  /**\n   * Returns a function that can be used to toggle this column's sorting state. This is useful for attaching a click handler to the column header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#gettogglesortinghandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getToggleSortingHandler: () => undefined | ((event: unknown) => void)\n  /**\n   * Toggles this columns sorting state. If `desc` is provided, it will force the sort direction to that value. If `isMulti` is provided, it will additivity multi-sort the column (or toggle it if it is already sorted).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#togglesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  toggleSorting: (desc?: boolean, isMulti?: boolean) => void\n}\n\ninterface SortingOptionsBase {\n  /**\n   * Enables/disables the ability to remove multi-sorts\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultiremove)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiRemove?: boolean\n  /**\n   * Enables/Disables multi-sorting for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiSort?: boolean\n  /**\n   * Enables/Disables sorting for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSorting?: boolean\n  /**\n   * Enables/Disables the ability to remove sorting for the table.\n   * - If `true` then changing sort order will circle like: 'none' -> 'desc' -> 'asc' -> 'none' -> ...\n   * - If `false` then changing sort order will circle like: 'none' -> 'desc' -> 'asc' -> 'desc' -> 'asc' -> ...\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesortingremoval)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSortingRemoval?: boolean\n  /**\n   * This function is used to retrieve the sorted row model. If using server-side sorting, this function is not required. To use client-side sorting, pass the exported `getSortedRowModel()` from your adapter to your table or implement your own.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Pass a custom function that will be used to determine if a multi-sort event should be triggered. It is passed the event from the sort toggle handler and should return `true` if the event should trigger a multi-sort.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#ismultisortevent)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  isMultiSortEvent?: (e: unknown) => boolean\n  /**\n   * Enables manual sorting for the table. If this is `true`, you will be expected to sort your data before it is passed to the table. This is useful if you are doing server-side sorting.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#manualsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  manualSorting?: boolean\n  /**\n   * Set a maximum number of columns that can be multi-sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#maxmultisortcolcount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  maxMultiSortColCount?: number\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.sorting` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#onsortingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  onSortingChange?: OnChangeFn<SortingState>\n  /**\n   * If `true`, all sorts will default to descending as their first toggle state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortdescfirst)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortDescFirst?: boolean\n}\n\ntype ResolvedSortingFns = keyof SortingFns extends never\n  ? {\n      sortingFns?: Record<string, SortingFn<any>>\n    }\n  : {\n      sortingFns: Record<keyof SortingFns, SortingFn<any>>\n    }\n\nexport interface SortingOptions<TData extends RowData>\n  extends SortingOptionsBase,\n    ResolvedSortingFns {}\n\nexport interface SortingInstance<TData extends RowData> {\n  _getSortedRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any sorting has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getpresortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getPreSortedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after sorting has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortedRowModel: () => RowModel<TData>\n  /**\n   * Resets the **sorting** state to `initialState.sorting`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#resetsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  resetSorting: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.sorting` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#setsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  setSorting: (updater: Updater<SortingState>) => void\n}\n\n//\n\nexport const RowSorting: TableFeature = {\n  getInitialState: (state): SortingTableState => {\n    return {\n      sorting: [],\n      ...state,\n    }\n  },\n\n  getDefaultColumnDef: <TData extends RowData>(): SortingColumnDef<TData> => {\n    return {\n      sortingFn: 'auto',\n      sortUndefined: 1,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): SortingOptions<TData> => {\n    return {\n      onSortingChange: makeStateUpdater('sorting', table),\n      isMultiSortEvent: (e: unknown) => {\n        return (e as MouseEvent).shiftKey\n      },\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.getAutoSortingFn = () => {\n      const firstRows = table.getFilteredRowModel().flatRows.slice(10)\n\n      let isString = false\n\n      for (const row of firstRows) {\n        const value = row?.getValue(column.id)\n\n        if (Object.prototype.toString.call(value) === '[object Date]') {\n          return sortingFns.datetime\n        }\n\n        if (typeof value === 'string') {\n          isString = true\n\n          if (value.split(reSplitAlphaNumeric).length > 1) {\n            return sortingFns.alphanumeric\n          }\n        }\n      }\n\n      if (isString) {\n        return sortingFns.text\n      }\n\n      return sortingFns.basic\n    }\n    column.getAutoSortDir = () => {\n      const firstRow = table.getFilteredRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'string') {\n        return 'asc'\n      }\n\n      return 'desc'\n    }\n    column.getSortingFn = () => {\n      if (!column) {\n        throw new Error()\n      }\n\n      return isFunction(column.columnDef.sortingFn)\n        ? column.columnDef.sortingFn\n        : column.columnDef.sortingFn === 'auto'\n          ? column.getAutoSortingFn()\n          : table.options.sortingFns?.[column.columnDef.sortingFn as string] ??\n            sortingFns[column.columnDef.sortingFn as BuiltInSortingFn]\n    }\n    column.toggleSorting = (desc, multi) => {\n      // if (column.columns.length) {\n      //   column.columns.forEach((c, i) => {\n      //     if (c.id) {\n      //       table.toggleColumnSorting(c.id, undefined, multi || !!i)\n      //     }\n      //   })\n      //   return\n      // }\n\n      // this needs to be outside of table.setSorting to be in sync with rerender\n      const nextSortingOrder = column.getNextSortingOrder()\n      const hasManualValue = typeof desc !== 'undefined' && desc !== null\n\n      table.setSorting(old => {\n        // Find any existing sorting for this column\n        const existingSorting = old?.find(d => d.id === column.id)\n        const existingIndex = old?.findIndex(d => d.id === column.id)\n\n        let newSorting: SortingState = []\n\n        // What should we do with this sort action?\n        let sortAction: 'add' | 'remove' | 'toggle' | 'replace'\n        let nextDesc = hasManualValue ? desc : nextSortingOrder === 'desc'\n\n        // Multi-mode\n        if (old?.length && column.getCanMultiSort() && multi) {\n          if (existingSorting) {\n            sortAction = 'toggle'\n          } else {\n            sortAction = 'add'\n          }\n        } else {\n          // Normal mode\n          if (old?.length && existingIndex !== old.length - 1) {\n            sortAction = 'replace'\n          } else if (existingSorting) {\n            sortAction = 'toggle'\n          } else {\n            sortAction = 'replace'\n          }\n        }\n\n        // Handle toggle states that will remove the sorting\n        if (sortAction === 'toggle') {\n          // If we are \"actually\" toggling (not a manual set value), should we remove the sorting?\n          if (!hasManualValue) {\n            // Is our intention to remove?\n            if (!nextSortingOrder) {\n              sortAction = 'remove'\n            }\n          }\n        }\n\n        if (sortAction === 'add') {\n          newSorting = [\n            ...old,\n            {\n              id: column.id,\n              desc: nextDesc,\n            },\n          ]\n          // Take latest n columns\n          newSorting.splice(\n            0,\n            newSorting.length -\n              (table.options.maxMultiSortColCount ?? Number.MAX_SAFE_INTEGER)\n          )\n        } else if (sortAction === 'toggle') {\n          // This flips (or sets) the\n          newSorting = old.map(d => {\n            if (d.id === column.id) {\n              return {\n                ...d,\n                desc: nextDesc,\n              }\n            }\n            return d\n          })\n        } else if (sortAction === 'remove') {\n          newSorting = old.filter(d => d.id !== column.id)\n        } else {\n          newSorting = [\n            {\n              id: column.id,\n              desc: nextDesc,\n            },\n          ]\n        }\n\n        return newSorting\n      })\n    }\n\n    column.getFirstSortDir = () => {\n      const sortDescFirst =\n        column.columnDef.sortDescFirst ??\n        table.options.sortDescFirst ??\n        column.getAutoSortDir() === 'desc'\n      return sortDescFirst ? 'desc' : 'asc'\n    }\n\n    column.getNextSortingOrder = (multi?: boolean) => {\n      const firstSortDirection = column.getFirstSortDir()\n      const isSorted = column.getIsSorted()\n\n      if (!isSorted) {\n        return firstSortDirection\n      }\n\n      if (\n        isSorted !== firstSortDirection &&\n        (table.options.enableSortingRemoval ?? true) && // If enableSortRemove, enable in general\n        (multi ? table.options.enableMultiRemove ?? true : true) // If multi, don't allow if enableMultiRemove))\n      ) {\n        return false\n      }\n      return isSorted === 'desc' ? 'asc' : 'desc'\n    }\n\n    column.getCanSort = () => {\n      return (\n        (column.columnDef.enableSorting ?? true) &&\n        (table.options.enableSorting ?? true) &&\n        !!column.accessorFn\n      )\n    }\n\n    column.getCanMultiSort = () => {\n      return (\n        column.columnDef.enableMultiSort ??\n        table.options.enableMultiSort ??\n        !!column.accessorFn\n      )\n    }\n\n    column.getIsSorted = () => {\n      const columnSort = table.getState().sorting?.find(d => d.id === column.id)\n\n      return !columnSort ? false : columnSort.desc ? 'desc' : 'asc'\n    }\n\n    column.getSortIndex = () =>\n      table.getState().sorting?.findIndex(d => d.id === column.id) ?? -1\n\n    column.clearSorting = () => {\n      //clear sorting for just 1 column\n      table.setSorting(old =>\n        old?.length ? old.filter(d => d.id !== column.id) : []\n      )\n    }\n\n    column.getToggleSortingHandler = () => {\n      const canSort = column.getCanSort()\n\n      return (e: unknown) => {\n        if (!canSort) return\n        ;(e as any).persist?.()\n        column.toggleSorting?.(\n          undefined,\n          column.getCanMultiSort() ? table.options.isMultiSortEvent?.(e) : false\n        )\n      }\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setSorting = updater => table.options.onSortingChange?.(updater)\n    table.resetSorting = defaultState => {\n      table.setSorting(defaultState ? [] : table.initialState?.sorting ?? [])\n    }\n    table.getPreSortedRowModel = () => table.getGroupedRowModel()\n    table.getSortedRowModel = () => {\n      if (!table._getSortedRowModel && table.options.getSortedRowModel) {\n        table._getSortedRowModel = table.options.getSortedRowModel(table)\n      }\n\n      if (table.options.manualSorting || !table._getSortedRowModel) {\n        return table.getPreSortedRowModel()\n      }\n\n      return table._getSortedRowModel()\n    }\n  },\n}\n","import { RowModel } from '..'\nimport {\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { makeStateUpdater } from '../utils'\n\nexport type ExpandedStateList = Record<string, boolean>\nexport type ExpandedState = true | Record<string, boolean>\nexport interface ExpandedTableState {\n  expanded: ExpandedState\n}\n\nexport interface ExpandedRow {\n  /**\n   * Returns whether the row can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getcanexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getCanExpand: () => boolean\n  /**\n   * Returns whether all parent rows of the row are expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisallparentsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsAllParentsExpanded: () => boolean\n  /**\n   * Returns whether the row is expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsExpanded: () => boolean\n  /**\n   * Returns a function that can be used to toggle the expanded state of the row. This function can be used to bind to an event handler to a button.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#gettoggleexpandedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getToggleExpandedHandler: () => () => void\n  /**\n   * Toggles the expanded state (or sets it if `expanded` is provided) for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#toggleexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  toggleExpanded: (expanded?: boolean) => void\n}\n\nexport interface ExpandedOptions<TData extends RowData> {\n  /**\n   * Enable this setting to automatically reset the expanded state of the table when expanding state changes.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#autoresetexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  autoResetExpanded?: boolean\n  /**\n   * Enable/disable expanding for all rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#enableexpanding)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  enableExpanding?: boolean\n  /**\n   * This function is responsible for returning the expanded row model. If this function is not provided, the table will not expand rows. You can use the default exported `getExpandedRowModel` function to get the expanded row model or implement your own.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * If provided, allows you to override the default behavior of determining whether a row is currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisrowexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsRowExpanded?: (row: Row<TData>) => boolean\n  /**\n   * If provided, allows you to override the default behavior of determining whether a row can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getrowcanexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getRowCanExpand?: (row: Row<TData>) => boolean\n  /**\n   * Enables manual row expansion. If this is set to `true`, `getExpandedRowModel` will not be used to expand rows and you would be expected to perform the expansion in your own data model. This is useful if you are doing server-side expansion.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#manualexpanding)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  manualExpanding?: boolean\n  /**\n   * This function is called when the `expanded` table state changes. If a function is provided, you will be responsible for managing this state on your own. To pass the managed state back to the table, use the `tableOptions.state.expanded` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#onexpandedchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  onExpandedChange?: OnChangeFn<ExpandedState>\n  /**\n   * If `true` expanded rows will be paginated along with the rest of the table (which means expanded rows may span multiple pages). If `false` expanded rows will not be considered for pagination (which means expanded rows will always render on their parents page. This also means more rows will be rendered than the set page size)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#paginateexpandedrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  paginateExpandedRows?: boolean\n}\n\nexport interface ExpandedInstance<TData extends RowData> {\n  _autoResetExpanded: () => void\n  _getExpandedRowModel?: () => RowModel<TData>\n  /**\n   * Returns whether there are any rows that can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getcansomerowsexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getCanSomeRowsExpand: () => boolean\n  /**\n   * Returns the maximum depth of the expanded rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandeddepth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedDepth: () => number\n  /**\n   * Returns the row model after expansion has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedRowModel: () => RowModel<TData>\n  /**\n   * Returns whether all rows are currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisallrowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsAllRowsExpanded: () => boolean\n  /**\n   * Returns whether there are any rows that are currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getissomerowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsSomeRowsExpanded: () => boolean\n  /**\n   * Returns the row model before expansion has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getpreexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getPreExpandedRowModel: () => RowModel<TData>\n  /**\n   * Returns a handler that can be used to toggle the expanded state of all rows. This handler is meant to be used with an `input[type=checkbox]` element.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#gettoggleallrowsexpandedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getToggleAllRowsExpandedHandler: () => (event: unknown) => void\n  /**\n   * Resets the expanded state of the table to the initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#resetexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  resetExpanded: (defaultState?: boolean) => void\n  /**\n   * Updates the expanded state of the table via an update function or value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#setexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  setExpanded: (updater: Updater<ExpandedState>) => void\n  /**\n   * Toggles the expanded state for all rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#toggleallrowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  toggleAllRowsExpanded: (expanded?: boolean) => void\n}\n\n//\n\nexport const RowExpanding: TableFeature = {\n  getInitialState: (state): ExpandedTableState => {\n    return {\n      expanded: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ExpandedOptions<TData> => {\n    return {\n      onExpandedChange: makeStateUpdater('expanded', table),\n      paginateExpandedRows: true,\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    let registered = false\n    let queued = false\n\n    table._autoResetExpanded = () => {\n      if (!registered) {\n        table._queue(() => {\n          registered = true\n        })\n        return\n      }\n\n      if (\n        table.options.autoResetAll ??\n        table.options.autoResetExpanded ??\n        !table.options.manualExpanding\n      ) {\n        if (queued) return\n        queued = true\n        table._queue(() => {\n          table.resetExpanded()\n          queued = false\n        })\n      }\n    }\n    table.setExpanded = updater => table.options.onExpandedChange?.(updater)\n    table.toggleAllRowsExpanded = expanded => {\n      if (expanded ?? !table.getIsAllRowsExpanded()) {\n        table.setExpanded(true)\n      } else {\n        table.setExpanded({})\n      }\n    }\n    table.resetExpanded = defaultState => {\n      table.setExpanded(defaultState ? {} : table.initialState?.expanded ?? {})\n    }\n    table.getCanSomeRowsExpand = () => {\n      return table\n        .getPrePaginationRowModel()\n        .flatRows.some(row => row.getCanExpand())\n    }\n    table.getToggleAllRowsExpandedHandler = () => {\n      return (e: unknown) => {\n        ;(e as any).persist?.()\n        table.toggleAllRowsExpanded()\n      }\n    }\n    table.getIsSomeRowsExpanded = () => {\n      const expanded = table.getState().expanded\n      return expanded === true || Object.values(expanded).some(Boolean)\n    }\n    table.getIsAllRowsExpanded = () => {\n      const expanded = table.getState().expanded\n\n      // If expanded is true, save some cycles and return true\n      if (typeof expanded === 'boolean') {\n        return expanded === true\n      }\n\n      if (!Object.keys(expanded).length) {\n        return false\n      }\n\n      // If any row is not expanded, return false\n      if (table.getRowModel().flatRows.some(row => !row.getIsExpanded())) {\n        return false\n      }\n\n      // They must all be expanded :shrug:\n      return true\n    }\n    table.getExpandedDepth = () => {\n      let maxDepth = 0\n\n      const rowIds =\n        table.getState().expanded === true\n          ? Object.keys(table.getRowModel().rowsById)\n          : Object.keys(table.getState().expanded)\n\n      rowIds.forEach(id => {\n        const splitId = id.split('.')\n        maxDepth = Math.max(maxDepth, splitId.length)\n      })\n\n      return maxDepth\n    }\n    table.getPreExpandedRowModel = () => table.getSortedRowModel()\n    table.getExpandedRowModel = () => {\n      if (!table._getExpandedRowModel && table.options.getExpandedRowModel) {\n        table._getExpandedRowModel = table.options.getExpandedRowModel(table)\n      }\n\n      if (table.options.manualExpanding || !table._getExpandedRowModel) {\n        return table.getPreExpandedRowModel()\n      }\n\n      return table._getExpandedRowModel()\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.toggleExpanded = expanded => {\n      table.setExpanded(old => {\n        const exists = old === true ? true : !!old?.[row.id]\n\n        let oldExpanded: ExpandedStateList = {}\n\n        if (old === true) {\n          Object.keys(table.getRowModel().rowsById).forEach(rowId => {\n            oldExpanded[rowId] = true\n          })\n        } else {\n          oldExpanded = old\n        }\n\n        expanded = expanded ?? !exists\n\n        if (!exists && expanded) {\n          return {\n            ...oldExpanded,\n            [row.id]: true,\n          }\n        }\n\n        if (exists && !expanded) {\n          const { [row.id]: _, ...rest } = oldExpanded\n          return rest\n        }\n\n        return old\n      })\n    }\n    row.getIsExpanded = () => {\n      const expanded = table.getState().expanded\n\n      return !!(\n        table.options.getIsRowExpanded?.(row) ??\n        (expanded === true || expanded?.[row.id])\n      )\n    }\n    row.getCanExpand = () => {\n      return (\n        table.options.getRowCanExpand?.(row) ??\n        ((table.options.enableExpanding ?? true) && !!row.subRows?.length)\n      )\n    }\n    row.getIsAllParentsExpanded = () => {\n      let isFullyExpanded = true\n      let currentRow = row\n\n      while (isFullyExpanded && currentRow.parentId) {\n        currentRow = table.getRow(currentRow.parentId, true)\n        isFullyExpanded = currentRow.getIsExpanded()\n      }\n\n      return isFullyExpanded\n    }\n    row.getToggleExpandedHandler = () => {\n      const canExpand = row.getCanExpand()\n\n      return () => {\n        if (!canExpand) return\n        row.toggleExpanded()\n      }\n    }\n  },\n}\n","import {\n  OnChangeFn,\n  Table,\n  RowModel,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport {\n  functionalUpdate,\n  getMemoOptions,\n  makeStateUpdater,\n  memo,\n} from '../utils'\n\nexport interface PaginationState {\n  pageIndex: number\n  pageSize: number\n}\n\nexport interface PaginationTableState {\n  pagination: PaginationState\n}\n\nexport interface PaginationInitialTableState {\n  pagination?: Partial<PaginationState>\n}\n\nexport interface PaginationOptions {\n  /**\n   * If set to `true`, pagination will be reset to the first page when page-altering state changes eg. `data` is updated, filters change, grouping changes, etc.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#autoresetpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  autoResetPageIndex?: boolean\n  /**\n   * Returns the row model after pagination has taken place, but no further.\n   *\n   * Pagination columns are automatically reordered by default to the start of the columns list. If you would rather remove them or leave them as-is, set the appropriate mode here.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPaginationRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Enables manual pagination. If this option is set to `true`, the table will not automatically paginate rows using `getPaginationRowModel()` and instead will expect you to manually paginate the rows before passing them to the table. This is useful if you are doing server-side pagination and aggregation.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#manualpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  manualPagination?: boolean\n  /**\n   * If this function is provided, it will be called when the pagination state changes and you will be expected to manage the state yourself. You can pass the managed state back to the table via the `tableOptions.state.pagination` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#onpaginationchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  onPaginationChange?: OnChangeFn<PaginationState>\n  /**\n   * When manually controlling pagination, you can supply a total `pageCount` value to the table if you know it (Or supply a `rowCount` and `pageCount` will be calculated). If you do not know how many pages there are, you can set this to `-1`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#pagecount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  pageCount?: number\n  /**\n   * When manually controlling pagination, you can supply a total `rowCount` value to the table if you know it. The `pageCount` can be calculated from this value and the `pageSize`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#rowcount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  rowCount?: number\n}\n\nexport interface PaginationDefaultOptions {\n  onPaginationChange: OnChangeFn<PaginationState>\n}\n\nexport interface PaginationInstance<TData extends RowData> {\n  _autoResetPageIndex: () => void\n  _getPaginationRowModel?: () => RowModel<TData>\n  /**\n   * Returns whether the table can go to the next page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getcannextpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getCanNextPage: () => boolean\n  /**\n   * Returns whether the table can go to the previous page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getcanpreviouspage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getCanPreviousPage: () => boolean\n  /**\n   * Returns the page count. If manually paginating or controlling the pagination state, this will come directly from the `options.pageCount` table option, otherwise it will be calculated from the table data using the total row count and current page size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpagecount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPageCount: () => number\n  /**\n   * Returns the row count. If manually paginating or controlling the pagination state, this will come directly from the `options.rowCount` table option, otherwise it will be calculated from the table data.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getrowcount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getRowCount: () => number\n  /**\n   * Returns an array of page options (zero-index-based) for the current page size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpageoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPageOptions: () => number[]\n  /**\n   * Returns the row model for the table after pagination has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPaginationRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any pagination has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getprepaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPrePaginationRowModel: () => RowModel<TData>\n  /**\n   * Increments the page index by one, if possible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#nextpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  nextPage: () => void\n  /**\n   * Decrements the page index by one, if possible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#previouspage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  previousPage: () => void\n  /**\n   * Sets the page index to `0`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#firstpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  firstPage: () => void\n  /**\n   * Sets the page index to the last page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#lastpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  lastPage: () => void\n  /**\n   * Resets the page index to its initial state. If `defaultState` is `true`, the page index will be reset to `0` regardless of initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPageIndex: (defaultState?: boolean) => void\n  /**\n   * Resets the page size to its initial state. If `defaultState` is `true`, the page size will be reset to `10` regardless of initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpagesize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPageSize: (defaultState?: boolean) => void\n  /**\n   * Resets the **pagination** state to `initialState.pagination`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPagination: (defaultState?: boolean) => void\n  /**\n   * @deprecated The page count no longer exists in the pagination state. Just pass as a table option instead.\n   */\n  setPageCount: (updater: Updater<number>) => void\n  /**\n   * Updates the page index using the provided function or value in the `state.pagination.pageIndex` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPageIndex: (updater: Updater<number>) => void\n  /**\n   * Updates the page size using the provided function or value in the `state.pagination.pageSize` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpagesize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPageSize: (updater: Updater<number>) => void\n  /**\n   * Sets or updates the `state.pagination` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPagination: (updater: Updater<PaginationState>) => void\n}\n\n//\n\nconst defaultPageIndex = 0\nconst defaultPageSize = 10\n\nconst getDefaultPaginationState = (): PaginationState => ({\n  pageIndex: defaultPageIndex,\n  pageSize: defaultPageSize,\n})\n\nexport const RowPagination: TableFeature = {\n  getInitialState: (state): PaginationTableState => {\n    return {\n      ...state,\n      pagination: {\n        ...getDefaultPaginationState(),\n        ...state?.pagination,\n      },\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): PaginationDefaultOptions => {\n    return {\n      onPaginationChange: makeStateUpdater('pagination', table),\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    let registered = false\n    let queued = false\n\n    table._autoResetPageIndex = () => {\n      if (!registered) {\n        table._queue(() => {\n          registered = true\n        })\n        return\n      }\n\n      if (\n        table.options.autoResetAll ??\n        table.options.autoResetPageIndex ??\n        !table.options.manualPagination\n      ) {\n        if (queued) return\n        queued = true\n        table._queue(() => {\n          table.resetPageIndex()\n          queued = false\n        })\n      }\n    }\n    table.setPagination = updater => {\n      const safeUpdater: Updater<PaginationState> = old => {\n        let newState = functionalUpdate(updater, old)\n\n        return newState\n      }\n\n      return table.options.onPaginationChange?.(safeUpdater)\n    }\n    table.resetPagination = defaultState => {\n      table.setPagination(\n        defaultState\n          ? getDefaultPaginationState()\n          : table.initialState.pagination ?? getDefaultPaginationState()\n      )\n    }\n    table.setPageIndex = updater => {\n      table.setPagination(old => {\n        let pageIndex = functionalUpdate(updater, old.pageIndex)\n\n        const maxPageIndex =\n          typeof table.options.pageCount === 'undefined' ||\n          table.options.pageCount === -1\n            ? Number.MAX_SAFE_INTEGER\n            : table.options.pageCount - 1\n\n        pageIndex = Math.max(0, Math.min(pageIndex, maxPageIndex))\n\n        return {\n          ...old,\n          pageIndex,\n        }\n      })\n    }\n    table.resetPageIndex = defaultState => {\n      table.setPageIndex(\n        defaultState\n          ? defaultPageIndex\n          : table.initialState?.pagination?.pageIndex ?? defaultPageIndex\n      )\n    }\n    table.resetPageSize = defaultState => {\n      table.setPageSize(\n        defaultState\n          ? defaultPageSize\n          : table.initialState?.pagination?.pageSize ?? defaultPageSize\n      )\n    }\n    table.setPageSize = updater => {\n      table.setPagination(old => {\n        const pageSize = Math.max(1, functionalUpdate(updater, old.pageSize))\n        const topRowIndex = old.pageSize * old.pageIndex!\n        const pageIndex = Math.floor(topRowIndex / pageSize)\n\n        return {\n          ...old,\n          pageIndex,\n          pageSize,\n        }\n      })\n    }\n    //deprecated\n    table.setPageCount = updater =>\n      table.setPagination(old => {\n        let newPageCount = functionalUpdate(\n          updater,\n          table.options.pageCount ?? -1\n        )\n\n        if (typeof newPageCount === 'number') {\n          newPageCount = Math.max(-1, newPageCount)\n        }\n\n        return {\n          ...old,\n          pageCount: newPageCount,\n        }\n      })\n\n    table.getPageOptions = memo(\n      () => [table.getPageCount()],\n      pageCount => {\n        let pageOptions: number[] = []\n        if (pageCount && pageCount > 0) {\n          pageOptions = [...new Array(pageCount)].fill(null).map((_, i) => i)\n        }\n        return pageOptions\n      },\n      getMemoOptions(table.options, 'debugTable', 'getPageOptions')\n    )\n\n    table.getCanPreviousPage = () => table.getState().pagination.pageIndex > 0\n\n    table.getCanNextPage = () => {\n      const { pageIndex } = table.getState().pagination\n\n      const pageCount = table.getPageCount()\n\n      if (pageCount === -1) {\n        return true\n      }\n\n      if (pageCount === 0) {\n        return false\n      }\n\n      return pageIndex < pageCount - 1\n    }\n\n    table.previousPage = () => {\n      return table.setPageIndex(old => old - 1)\n    }\n\n    table.nextPage = () => {\n      return table.setPageIndex(old => {\n        return old + 1\n      })\n    }\n\n    table.firstPage = () => {\n      return table.setPageIndex(0)\n    }\n\n    table.lastPage = () => {\n      return table.setPageIndex(table.getPageCount() - 1)\n    }\n\n    table.getPrePaginationRowModel = () => table.getExpandedRowModel()\n    table.getPaginationRowModel = () => {\n      if (\n        !table._getPaginationRowModel &&\n        table.options.getPaginationRowModel\n      ) {\n        table._getPaginationRowModel =\n          table.options.getPaginationRowModel(table)\n      }\n\n      if (table.options.manualPagination || !table._getPaginationRowModel) {\n        return table.getPrePaginationRowModel()\n      }\n\n      return table._getPaginationRowModel()\n    }\n\n    table.getPageCount = () => {\n      return (\n        table.options.pageCount ??\n        Math.ceil(table.getRowCount() / table.getState().pagination.pageSize)\n      )\n    }\n\n    table.getRowCount = () => {\n      return (\n        table.options.rowCount ?? table.getPrePaginationRowModel().rows.length\n      )\n    }\n  },\n}\n","import {\n  OnChangeFn,\n  Updater,\n  Table,\n  Row,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type RowPinningPosition = false | 'top' | 'bottom'\n\nexport interface RowPinningState {\n  bottom?: string[]\n  top?: string[]\n}\n\nexport interface RowPinningTableState {\n  rowPinning: RowPinningState\n}\n\nexport interface RowPinningOptions<TData extends RowData> {\n  /**\n   * Enables/disables row pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#enablerowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  enableRowPinning?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * When `false`, pinned rows will not be visible if they are filtered or paginated out of the table. When `true`, pinned rows will always be visible regardless of filtering or pagination. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#keeppinnedrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  keepPinnedRows?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.rowPinning` changes. This overrides the default internal state management, so you will also need to supply `state.rowPinning` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#onrowpinningchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/onrowpinningchange)\n   */\n  onRowPinningChange?: OnChangeFn<RowPinningState>\n}\n\nexport interface RowPinningDefaultOptions {\n  onRowPinningChange: OnChangeFn<RowPinningState>\n}\n\nexport interface RowPinningRow {\n  /**\n   * Returns whether or not the row can be pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getcanpin-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getCanPin: () => boolean\n  /**\n   * Returns the pinned position of the row. (`'top'`, `'bottom'` or `false`)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getispinned-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getIsPinned: () => RowPinningPosition\n  /**\n   * Returns the numeric pinned index of the row within a pinned row group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getpinnedindex-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getPinnedIndex: () => number\n  /**\n   * Pins a row to the `'top'` or `'bottom'`, or unpins the row to the center if `false` is passed.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#pin-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  pin: (\n    position: RowPinningPosition,\n    includeLeafRows?: boolean,\n    includeParentRows?: boolean\n  ) => void\n}\n\nexport interface RowPinningInstance<TData extends RowData> {\n  _getPinnedRows: (\n    visiblePinnedRows: Array<Row<TData>>,\n    pinnedRowIds: Array<string> | undefined,\n    position: 'top' | 'bottom'\n  ) => Row<TData>[]\n  /**\n   * Returns all bottom pinned rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getbottomrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getBottomRows: () => Row<TData>[]\n  /**\n   * Returns all rows that are not pinned to the top or bottom.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getcenterrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getCenterRows: () => Row<TData>[]\n  /**\n   * Returns whether or not any rows are pinned. Optionally specify to only check for pinned rows in either the `top` or `bottom` position.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getissomerowspinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getIsSomeRowsPinned: (position?: RowPinningPosition) => boolean\n  /**\n   * Returns all top pinned rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#gettoprows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getTopRows: () => Row<TData>[]\n  /**\n   * Resets the **rowPinning** state to `initialState.rowPinning`, or `true` can be passed to force a default blank state reset to `{ top: [], bottom: [], }`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#resetrowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  resetRowPinning: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.rowPinning` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#setrowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  setRowPinning: (updater: Updater<RowPinningState>) => void\n}\n\n//\n\nconst getDefaultRowPinningState = (): RowPinningState => ({\n  top: [],\n  bottom: [],\n})\n\nexport const RowPinning: TableFeature = {\n  getInitialState: (state): RowPinningTableState => {\n    return {\n      rowPinning: getDefaultRowPinningState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): RowPinningDefaultOptions => {\n    return {\n      onRowPinningChange: makeStateUpdater('rowPinning', table),\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.pin = (position, includeLeafRows, includeParentRows) => {\n      const leafRowIds = includeLeafRows\n        ? row.getLeafRows().map(({ id }) => id)\n        : []\n      const parentRowIds = includeParentRows\n        ? row.getParentRows().map(({ id }) => id)\n        : []\n      const rowIds = new Set([...parentRowIds, row.id, ...leafRowIds])\n\n      table.setRowPinning(old => {\n        if (position === 'bottom') {\n          return {\n            top: (old?.top ?? []).filter(d => !rowIds?.has(d)),\n            bottom: [\n              ...(old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n              ...Array.from(rowIds),\n            ],\n          }\n        }\n\n        if (position === 'top') {\n          return {\n            top: [\n              ...(old?.top ?? []).filter(d => !rowIds?.has(d)),\n              ...Array.from(rowIds),\n            ],\n            bottom: (old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n          }\n        }\n\n        return {\n          top: (old?.top ?? []).filter(d => !rowIds?.has(d)),\n          bottom: (old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n        }\n      })\n    }\n    row.getCanPin = () => {\n      const { enableRowPinning, enablePinning } = table.options\n      if (typeof enableRowPinning === 'function') {\n        return enableRowPinning(row)\n      }\n      return enableRowPinning ?? enablePinning ?? true\n    }\n    row.getIsPinned = () => {\n      const rowIds = [row.id]\n\n      const { top, bottom } = table.getState().rowPinning\n\n      const isTop = rowIds.some(d => top?.includes(d))\n      const isBottom = rowIds.some(d => bottom?.includes(d))\n\n      return isTop ? 'top' : isBottom ? 'bottom' : false\n    }\n    row.getPinnedIndex = () => {\n      const position = row.getIsPinned()\n      if (!position) return -1\n\n      const visiblePinnedRowIds = (\n        position === 'top' ? table.getTopRows() : table.getBottomRows()\n      )?.map(({ id }) => id)\n\n      return visiblePinnedRowIds?.indexOf(row.id) ?? -1\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setRowPinning = updater => table.options.onRowPinningChange?.(updater)\n\n    table.resetRowPinning = defaultState =>\n      table.setRowPinning(\n        defaultState\n          ? getDefaultRowPinningState()\n          : table.initialState?.rowPinning ?? getDefaultRowPinningState()\n      )\n\n    table.getIsSomeRowsPinned = position => {\n      const pinningState = table.getState().rowPinning\n\n      if (!position) {\n        return Boolean(pinningState.top?.length || pinningState.bottom?.length)\n      }\n      return Boolean(pinningState[position]?.length)\n    }\n\n    table._getPinnedRows = (visibleRows, pinnedRowIds, position) => {\n      const rows =\n        table.options.keepPinnedRows ?? true\n          ? //get all rows that are pinned even if they would not be otherwise visible\n            //account for expanded parent rows, but not pagination or filtering\n            (pinnedRowIds ?? []).map(rowId => {\n              const row = table.getRow(rowId, true)\n              return row.getIsAllParentsExpanded() ? row : null\n            })\n          : //else get only visible rows that are pinned\n            (pinnedRowIds ?? []).map(\n              rowId => visibleRows.find(row => row.id === rowId)!\n            )\n\n      return rows.filter(Boolean).map(d => ({ ...d, position })) as Row<TData>[]\n    }\n\n    table.getTopRows = memo(\n      () => [table.getRowModel().rows, table.getState().rowPinning.top],\n      (allRows, topPinnedRowIds) =>\n        table._getPinnedRows(allRows, topPinnedRowIds, 'top'),\n      getMemoOptions(table.options, 'debugRows', 'getTopRows')\n    )\n\n    table.getBottomRows = memo(\n      () => [table.getRowModel().rows, table.getState().rowPinning.bottom],\n      (allRows, bottomPinnedRowIds) =>\n        table._getPinnedRows(allRows, bottomPinnedRowIds, 'bottom'),\n      getMemoOptions(table.options, 'debugRows', 'getBottomRows')\n    )\n\n    table.getCenterRows = memo(\n      () => [\n        table.getRowModel().rows,\n        table.getState().rowPinning.top,\n        table.getState().rowPinning.bottom,\n      ],\n      (allRows, top, bottom) => {\n        const topAndBottom = new Set([...(top ?? []), ...(bottom ?? [])])\n        return allRows.filter(d => !topAndBottom.has(d.id))\n      },\n      getMemoOptions(table.options, 'debugRows', 'getCenterRows')\n    )\n  },\n}\n","import {\n  Column,\n  Table,\n  AccessorFn,\n  ColumnDef,\n  RowData,\n  ColumnDefResolved,\n} from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport interface CoreColumn<TData extends RowData, TValue> {\n  /**\n   * The resolved accessor function to use when extracting the value for the column from each row. Will only be defined if the column def has a valid accessor key or function defined.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#accessorfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  accessorFn?: AccessorFn<TData, TValue>\n  /**\n   * The original column def used to create the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#columndef)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  columnDef: ColumnDef<TData, TValue>\n  /**\n   * The child column (if the column is a group column). Will be an empty array if the column is not a group column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#columns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  columns: Column<TData, TValue>[]\n  /**\n   * The depth of the column (if grouped) relative to the root column def array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  depth: number\n  /**\n   * Returns the flattened array of this column and all child/grand-child columns for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#getflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  getFlatColumns: () => Column<TData, TValue>[]\n  /**\n   * Returns an array of all leaf-node columns for this column. If a column has no children, it is considered the only leaf-node column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#getleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  getLeafColumns: () => Column<TData, TValue>[]\n  /**\n   * The resolved unique identifier for the column resolved in this priority:\n      - A manual `id` property from the column def\n      - The accessor key from the column def\n      - The header string from the column def\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  id: string\n  /**\n   * The parent column for this column. Will be undefined if this is a root column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#parent)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  parent?: Column<TData, TValue>\n}\n\nexport function createColumn<TData extends RowData, TValue>(\n  table: Table<TData>,\n  columnDef: ColumnDef<TData, TValue>,\n  depth: number,\n  parent?: Column<TData, TValue>\n): Column<TData, TValue> {\n  const defaultColumn = table._getDefaultColumnDef()\n\n  const resolvedColumnDef = {\n    ...defaultColumn,\n    ...columnDef,\n  } as ColumnDefResolved<TData>\n\n  const accessorKey = resolvedColumnDef.accessorKey\n\n  let id =\n    resolvedColumnDef.id ??\n    (accessorKey\n      ? typeof String.prototype.replaceAll === 'function'\n        ? accessorKey.replaceAll('.', '_')\n        : accessorKey.replace(/\\./g, '_')\n      : undefined) ??\n    (typeof resolvedColumnDef.header === 'string'\n      ? resolvedColumnDef.header\n      : undefined)\n\n  let accessorFn: AccessorFn<TData> | undefined\n\n  if (resolvedColumnDef.accessorFn) {\n    accessorFn = resolvedColumnDef.accessorFn\n  } else if (accessorKey) {\n    // Support deep accessor keys\n    if (accessorKey.includes('.')) {\n      accessorFn = (originalRow: TData) => {\n        let result = originalRow as Record<string, any>\n\n        for (const key of accessorKey.split('.')) {\n          result = result?.[key]\n          if (process.env.NODE_ENV !== 'production' && result === undefined) {\n            console.warn(\n              `\"${key}\" in deeply nested key \"${accessorKey}\" returned undefined.`\n            )\n          }\n        }\n\n        return result\n      }\n    } else {\n      accessorFn = (originalRow: TData) =>\n        (originalRow as any)[resolvedColumnDef.accessorKey]\n    }\n  }\n\n  if (!id) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(\n        resolvedColumnDef.accessorFn\n          ? `Columns require an id when using an accessorFn`\n          : `Columns require an id when using a non-string header`\n      )\n    }\n    throw new Error()\n  }\n\n  let column: CoreColumn<TData, any> = {\n    id: `${String(id)}`,\n    accessorFn,\n    parent: parent as any,\n    depth,\n    columnDef: resolvedColumnDef as ColumnDef<TData, any>,\n    columns: [],\n    getFlatColumns: memo(\n      () => [true],\n      () => {\n        return [\n          column as Column<TData, TValue>,\n          ...column.columns?.flatMap(d => d.getFlatColumns()),\n        ]\n      },\n      getMemoOptions(table.options, 'debugColumns', 'column.getFlatColumns')\n    ),\n    getLeafColumns: memo(\n      () => [table._getOrderColumnsFn()],\n      orderColumns => {\n        if (column.columns?.length) {\n          let leafColumns = column.columns.flatMap(column =>\n            column.getLeafColumns()\n          )\n\n          return orderColumns(leafColumns)\n        }\n\n        return [column as Column<TData, TValue>]\n      },\n      getMemoOptions(table.options, 'debugColumns', 'column.getLeafColumns')\n    ),\n  }\n\n  for (const feature of table._features) {\n    feature.createColumn?.(column as Column<TData, TValue>, table)\n  }\n\n  // Yes, we have to convert table to unknown, because we know more than the compiler here.\n  return column as Column<TData, TValue>\n}\n","import { createRow } from '../core/row'\nimport { Table, Row, RowModel, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getCoreRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.options.data],\n      (\n        data\n      ): {\n        rows: Row<TData>[]\n        flatRows: Row<TData>[]\n        rowsById: Record<string, Row<TData>>\n      } => {\n        const rowModel: RowModel<TData> = {\n          rows: [],\n          flatRows: [],\n          rowsById: {},\n        }\n\n        const accessRows = (\n          originalRows: TData[],\n          depth = 0,\n          parentRow?: Row<TData>\n        ): Row<TData>[] => {\n          const rows = [] as Row<TData>[]\n\n          for (let i = 0; i < originalRows.length; i++) {\n            // This could be an expensive check at scale, so we should move it somewhere else, but where?\n            // if (!id) {\n            //   if (process.env.NODE_ENV !== 'production') {\n            //     throw new Error(`getRowId expected an ID, but got ${id}`)\n            //   }\n            // }\n\n            // Make the row\n            const row = createRow(\n              table,\n              table._getRowId(originalRows[i]!, i, parentRow),\n              originalRows[i]!,\n              i,\n              depth,\n              undefined,\n              parentRow?.id\n            )\n\n            // Keep track of every row in a flat array\n            rowModel.flatRows.push(row)\n            // Also keep track of every row by its ID\n            rowModel.rowsById[row.id] = row\n            // Push table row into parent\n            rows.push(row)\n\n            // Get the original subrows\n            if (table.options.getSubRows) {\n              row.originalSubRows = table.options.getSubRows(\n                originalRows[i]!,\n                i\n              )\n\n              // Then recursively access them\n              if (row.originalSubRows?.length) {\n                row.subRows = accessRows(row.originalSubRows, depth + 1, row)\n              }\n            }\n          }\n\n          return rows\n        }\n\n        rowModel.rows = accessRows(data)\n\n        return rowModel\n      },\n      getMemoOptions(table.options, 'debugTable', 'getRowModel', () =>\n        table._autoResetPageIndex()\n      )\n    )\n}\n","import { Table, Row, RowModel, RowData } from '../types'\nimport { SortingFn } from '../features/RowSorting'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getSortedRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.getState().sorting, table.getPreSortedRowModel()],\n      (sorting, rowModel) => {\n        if (!rowModel.rows.length || !sorting?.length) {\n          return rowModel\n        }\n\n        const sortingState = table.getState().sorting\n\n        const sortedFlatRows: Row<TData>[] = []\n\n        // Filter out sortings that correspond to non existing columns\n        const availableSorting = sortingState.filter(sort =>\n          table.getColumn(sort.id)?.getCanSort()\n        )\n\n        const columnInfoById: Record<\n          string,\n          {\n            sortUndefined?: false | -1 | 1 | 'first' | 'last'\n            invertSorting?: boolean\n            sortingFn: SortingFn<TData>\n          }\n        > = {}\n\n        availableSorting.forEach(sortEntry => {\n          const column = table.getColumn(sortEntry.id)\n          if (!column) return\n\n          columnInfoById[sortEntry.id] = {\n            sortUndefined: column.columnDef.sortUndefined,\n            invertSorting: column.columnDef.invertSorting,\n            sortingFn: column.getSortingFn(),\n          }\n        })\n\n        const sortData = (rows: Row<TData>[]) => {\n          // This will also perform a stable sorting using the row index\n          // if needed.\n          const sortedData = rows.map(row => ({ ...row }))\n\n          sortedData.sort((rowA, rowB) => {\n            for (let i = 0; i < availableSorting.length; i += 1) {\n              const sortEntry = availableSorting[i]!\n              const columnInfo = columnInfoById[sortEntry.id]!\n              const sortUndefined = columnInfo.sortUndefined\n              const isDesc = sortEntry?.desc ?? false\n\n              let sortInt = 0\n\n              // All sorting ints should always return in ascending order\n              if (sortUndefined) {\n                const aValue = rowA.getValue(sortEntry.id)\n                const bValue = rowB.getValue(sortEntry.id)\n\n                const aUndefined = aValue === undefined\n                const bUndefined = bValue === undefined\n\n                if (aUndefined || bUndefined) {\n                  if (sortUndefined === 'first') return aUndefined ? -1 : 1\n                  if (sortUndefined === 'last') return aUndefined ? 1 : -1\n                  sortInt =\n                    aUndefined && bUndefined\n                      ? 0\n                      : aUndefined\n                        ? sortUndefined\n                        : -sortUndefined\n                }\n              }\n\n              if (sortInt === 0) {\n                sortInt = columnInfo.sortingFn(rowA, rowB, sortEntry.id)\n              }\n\n              // If sorting is non-zero, take care of desc and inversion\n              if (sortInt !== 0) {\n                if (isDesc) {\n                  sortInt *= -1\n                }\n\n                if (columnInfo.invertSorting) {\n                  sortInt *= -1\n                }\n\n                return sortInt\n              }\n            }\n\n            return rowA.index - rowB.index\n          })\n\n          // If there are sub-rows, sort them\n          sortedData.forEach(row => {\n            sortedFlatRows.push(row)\n            if (row.subRows?.length) {\n              row.subRows = sortData(row.subRows)\n            }\n          })\n\n          return sortedData\n        }\n\n        return {\n          rows: sortData(rowModel.rows),\n          flatRows: sortedFlatRows,\n          rowsById: rowModel.rowsById,\n        }\n      },\n      getMemoOptions(table.options, 'debugTable', 'getSortedRowModel', () =>\n        table._autoResetPageIndex()\n      )\n    )\n}\n"],"names":["hiddenStyles","display","HiddenText","_ref","id","value","React","style","LiveRegion","announcement","ariaLiveType","position","top","left","width","height","margin","border","padding","overflow","clip","clipPath","whiteSpace","role","DndMonitorContext","createContext","defaultScreenReaderInstructions","draggable","defaultAnnouncements","onDragStart","active","onDragOver","_ref2","over","onDragEnd","_ref3","onDragCancel","_ref4","Accessibility","announcements","container","hiddenTextDescribedById","screenReaderInstructions","announce","setAnnouncement","useState","useCallback","useAnnouncement","liveRegionId","useUniqueId","mounted","setMounted","useEffect","listener","registerListener","useContext","Error","useDndMonitor","useMemo","onDragMove","_ref5","_ref6","markup","createPortal","Action","noop","useSensor","sensor","options","useSensors","sensors","Array","_len","_key","arguments","filter","defaultCoordinates","Object","freeze","x","y","distanceBetween","p1","p2","Math","sqrt","pow","sortCollisionsAsc","data","a","b","sortCollisionsDesc","centerOfRectangle","rect","closestCenter","collisionRect","droppableRects","droppableContainers","centerRect","collisions","droppableContainer","get","distBetween","push","sort","getIntersectionRatio","entry","target","max","right","min","bottom","targetArea","entryArea","intersectionArea","Number","toFixed","rectIntersection","intersectionRatio","getRectDelta","rect1","rect2","createRectAdjustmentFn","modifier","adjustments","reduce","acc","adjustment","_objectSpread","getAdjustedRect","parseTransform","transform","startsWith","transformArray","slice","split","scaleX","scaleY","defaultOptions","ignoreTransform","getClientRect","element","getBoundingClientRect","transformOrigin","getWindow","getComputedStyle","parsedTransform","translateX","translateY","parseFloat","indexOf","w","h","inverseTransform","getTransformAgnosticClientRect","getScrollableAncestors","limit","scrollParents","findScrollableAncestors","node","length","isDocument","scrollingElement","includes","isHTMLElement","isSVGElement","computedStyle","overflowRegex","some","property","test","isScrollable","isFixed","parentNode","getFirstScrollableAncestor","firstScrollableAncestor","getScrollableElement","canUseDOM","isWindow","isNode","getOwnerDocument","window","getScrollXCoordinate","scrollX","scrollLeft","getScrollYCoordinate","scrollY","scrollTop","getScrollCoordinates","Direction","isDocumentScrollingElement","document","getScrollPosition","scrollingContainer","minScroll","dimensions","innerHeight","innerWidth","clientHeight","clientWidth","maxScroll","scrollWidth","scrollHeight","isTop","isLeft","isBottom","isRight","defaultThreshold","getScrollDirectionAndSpeed","scrollContainer","scrollContainerRect","acceleration","thresholdPercentage","direction","speed","threshold","Backward","abs","Forward","getScrollElementRect","getScrollOffsets","scrollableAncestors","add","scrollIntoViewIfNeeded","measure","scrollIntoView","block","inline","properties","Rect","constructor","scrollOffsets","this","axis","keys","getScrollOffset","key","defineProperty","currentOffsets","scrollOffsetsDeltla","enumerable","Listeners","listeners","removeAll","forEach","_this$target","removeEventListener","eventName","handler","_this$target2","addEventListener","hasExceededDistance","delta","measurement","dx","dy","EventName","KeyboardCode","preventDefault","event","stopPropagation","defaultKeyboardCodes","start","Space","Enter","cancel","Esc","end","Tab","defaultKeyboardCoordinateGetter","currentCoordinates","code","Right","Left","Down","Up","KeyboardSensor","props","autoScrollEnabled","referenceCoordinates","windowListeners","handleKeyDown","bind","handleCancel","attach","handleStart","Resize","VisibilityChange","setTimeout","Keydown","activeNode","onStart","current","isKeyboardEvent","context","keyboardCodes","coordinateGetter","scrollBehavior","handleEnd","newCoordinates","coordinatesDelta","subtract","scrollDelta","scrollElementRect","clampedCoordinates","canScrollX","canScrollY","newScrollCoordinates","canScrollToNewCoordinates","scrollTo","behavior","scrollBy","handleMove","coordinates","onMove","onEnd","detach","onCancel","isDistanceConstraint","constraint","Boolean","isDelayConstraint","activators","onActivation","nativeEvent","activator","activatorNode","AbstractPointerSensor","events","listenerTarget","EventTarget","getEventListenerTarget","activated","initialCoordinates","timeoutId","documentListeners","_getEventCoordinates","getEventCoordinates","handleKeydown","removeTextSelection","activationConstraint","bypassActivationConstraint","move","name","passive","DragStart","ContextMenu","delay","handlePending","clearTimeout","offset","onPending","Click","capture","SelectionChange","_getEventCoordinates2","tolerance","distance","cancelable","onAbort","_this$document$getSel","getSelection","removeAllRanges","PointerSensor","super","isPrimary","button","events$1","MouseButton","MouseSensor","RightClick","events$2","TouchSensor","setup","AutoScrollActivator","TraversalOrder","useAutoScroller","Pointer","canScroll","draggingRect","enabled","interval","order","TreeOrder","pointerCoordinates","scrollableAncestorRects","scrollIntent","disabled","previousDelta","usePrevious","useLazyMemo","previousIntent","defaultScrollIntent","sign","useScrollIntent","setAutoScrollInterval","clearAutoScrollInterval","useInterval","scrollSpeed","useRef","scrollDirection","DraggableRect","scrollContainerRef","autoScroll","sortedScrollableAncestors","reverse","index","JSON","stringify","touches","MeasuringStrategy","MeasuringFrequency","defaultValue","Map","useInitialValue","computeFn","previousValue","useResizeObserver","callback","handleResize","useEvent","resizeObserver","ResizeObserver","disconnect","defaultMeasure","useRect","fallbackRect","setRect","measureRect","currentRect","isConnected","newRect","mutationObserver","handleMutations","MutationObserver","useMutationObserver","records","record","type","HTMLElement","contains","useIsomorphicLayoutEffect","observe","body","childList","subtree","defaultValue$1","useScrollOffsetsDelta","dependencies","initialScrollOffsets","hasScrollOffsets","useWindowRect","getWindowClientRect","defaultValue$2","getMeasurableNode","children","firstChild","defaultSensors","defaultData","defaultMeasuringConfiguration","droppable","strategy","WhileDragging","frequency","Optimized","dragOverlay","DroppableContainersMap","_super$get","undefined","toArray","from","values","getEnabled","getNodeFor","_this$get$node$curren","_this$get","defaultPublicContext","activatorEvent","activeNodeRect","containerNodeRect","draggableNodes","nodeRef","setRef","measuringConfiguration","measureDroppableContainers","windowRect","measuringScheduled","defaultInternalContext","ariaDescribedById","dispatch","InternalContext","PublicContext","getInitialState","nodes","translate","containers","reducer","state","action","DragMove","DragEnd","DragCancel","RegisterDroppable","set","SetDroppableDisabled","UnregisterDroppable","delete","RestoreFocus","previousActivatorEvent","previousActiveId","activeElement","draggableNode","requestAnimationFrame","focusableNode","findFirstFocusableNode","focus","applyModifiers","modifiers","args","_objectWithoutProperties","accumulator","ActiveDraggableContext","Status","DndContext","memo","accessibility","collisionDetection","measuring","store","useReducer","dispatchMonitorEvent","registerMonitorListener","Set","_listener$type","call","useDndMonitorProvider","status","setStatus","Uninitialized","isInitialized","Initialized","activeId","activeRects","initial","translated","_node$data","activeRef","activeSensor","setActiveSensor","setActivatorEvent","latestProps","useLatestValue","draggableDescribedById","enabledDroppableContainers","config","dragging","queue","setQueue","containersRef","Always","BeforeDragging","isDisabled","disabledRef","ids","concat","map","useDroppableMeasuring","cachedNode","useCachedNode","activationCoordinates","autoScrollOptions","activeSensorDisablesAutoscroll","autoScrollGloballyDisabled","getAutoScrollerOptions","initialActiveNodeRect","useInitialRect","initialRect","initialized","rectDelta","useLayoutShiftScrollCompensation","layoutShiftCompensation","parentElement","sensorContext","draggingNode","draggingNodeRect","scrollAdjustedTranslate","overNode","_sensorContext$curren","entries","handleNodeChange","useNodeRef","useDragOverlayMeasuring","_dragOverlay$nodeRef$","_dragOverlay$rect","usesDragOverlay","nodeRectDelta","previousNode","ancestors","useScrollableAncestors","elements","firstElement","rects","setRects","measureRects","useRects","modifiedTranslate","overlayNodeRect","scrollCoordinates","setScrollCoordinates","prevElements","handleScroll","previousElements","cleanup","scrollableElement","useScrollOffsets","scrollAdjustment","activeNodeScrollDelta","overId","firstCollision","getFirstCollision","setOver","adjustScale","_over$rect","activeSensorRef","instantiateSensor","Sensor","sensorInstance","onDragAbort","onDragPending","unstable_batchedUpdates","Initializing","createHandler","async","cancelDrop","Promise","resolve","bindActivatorToSensorInstantiator","activeDraggableNode","dndKit","defaultPrevented","activationContext","capturedBy","getSyntheticHandler","useCombineActivators","teardownFns","teardown","useSensorSetup","overContainer","publicContext","internalContext","Provider","restoreFocus","NullContext","defaultRole","ID_PREFIX","useDraggable","attributes","roleDescription","tabIndex","isDragging","setNodeRef","setActivatorNodeRef","useSyntheticListeners","dataRef","useDndContext","ID_PREFIX$1","defaultResizeObserverConfig","timeout","useDroppable","resizeObserverConfig","previous","resizeObserverConnected","callbackId","resizeObserverDisabled","updateMeasurementsFor","resizeObserverTimeout","isArray","newElement","previousElement","unobserve","isOver","restrictToHorizontalAxis","arrayMove","array","to","newArray","splice","getSortedRects","items","isValidIndex","defaultScale","horizontalListSortingStrategy","fallbackActiveRect","activeIndex","overIndex","_rects$activeIndex","itemGap","previousRect","nextRect","getItemGap","newIndexRect","rectSortingStrategy","newRects","oldRect","Context","containerId","disableTransforms","useDragOverlay","sortedRects","SortableContext","userDefinedItems","disabledProp","item","previousItemsRef","itemsHaveChanged","i","itemsEqual","normalizeDisabled","contextValue","defaultNewIndexGetter","defaultAnimateLayoutChanges","isSorting","wasDragging","newIndex","previousItems","previousContainerId","transition","defaultTransition","duration","easing","transitionProperty","disabledTransition","CSS","Transition","toString","defaultAttributes","useSortable","animateLayoutChanges","userDefinedAttributes","localDisabled","customData","getNewIndex","localStrategy","globalDisabled","globalStrategy","_localDisabled$dragga","_localDisabled$droppa","normalizeLocalDisabled","sortable","itemsAfterCurrentSortable","setDroppableNodeRef","setDraggableNodeRef","useCombinedRefs","displaceItem","shouldDisplaceDragSource","dragSourceDisplacement","finalTransform","shouldAnimateLayoutChanges","derivedTransform","setDerivedtransform","previousIndex","useDerivedTransform","getTransition","refs","ref","createElement","elementString","prototype","_target$ownerDocument","_target$ownerDocument2","ownerDocument","defaultView","Document","SVGElement","useLayoutEffect","handlerRef","intervalRef","setInterval","clearInterval","valueRef","newValue","onChange","onChangeHandler","prefix","createAdjustmentFn","object","valueAdjustment","KeyboardEvent","TouchEvent","isTouchEvent","clientX","clientY","changedTouches","hasViewportRelativeCoordinates","Translate","round","Scale","Transform","join","SELECTOR","matches","querySelector","_defineProperty","e","r","t","Symbol","toPrimitive","TypeError","String","_toPrimitive","_toPropertyKey","configurable","writable","ownKeys","getOwnPropertySymbols","o","getOwnPropertyDescriptor","apply","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_WINDOW","_DOCUMENT","_MUTATION_OBSERVER","_PERFORMANCE","mark","performance","userAgent","navigator","WINDOW","DOCUMENT","MUTATION_OBSERVER","PERFORMANCE","IS_DOM","documentElement","head","IS_IE","S","classic","fa","fas","far","fal","fat","fab","duotone","fad","fadr","fadl","fadt","sharp","fass","fasr","fasl","fast","fasds","fasdr","fasdl","fasdt","P","s","L","pt","defaultShortPrefixId","defaultStyleId","styleIds","futureStyleIds","defaultFontWeight","Ft","St","fak","fakd","Lt","Et","kit","t$1","GROUP","SWAP_OPACITY","PRIMARY","SECONDARY","bt$1","ga","Ia","c$1","F$1","ma","NAMESPACE_IDENTIFIER","UNITS_IN_GRID","DEFAULT_REPLACEMENT_CLASS","DATA_FA_I2SVG","DATA_FA_PSEUDO_ELEMENT","DATA_PREFIX","DATA_ICON","HTML_CLASS_I2SVG_BASE_CLASS","TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS","PRODUCTION","process","e$$1","familyProxy","obj","Proxy","prop","_PREFIX_TO_STYLE","PREFIX_TO_STYLE","_STYLE_TO_PREFIX","solid","regular","light","thin","brands","STYLE_TO_PREFIX","_PREFIX_TO_LONG_STYLE","PREFIX_TO_LONG_STYLE","_LONG_STYLE_TO_PREFIX","ICON_SELECTION_SYNTAX_PATTERN","LAYERS_TEXT_CLASSNAME","FONT_FAMILY_PATTERN","ATTRIBUTES_WATCHED_FOR_MUTATION","normal","DUOTONE_CLASSES","RESERVED_CLASSES","FontAwesomeConfig","attr","val","coerce","getAttribute","getAttrConfig","_default","styleDefault","familyDefault","cssPrefix","replacementClass","autoReplaceSvg","autoAddCss","autoA11y","searchPseudoElements","observeMutations","mutateApproach","keepOriginalSource","measurePerformance","showMissingIcons","familyPrefix","_config","_onChangeCb","cb","d$2","meaninglessTransform","size","rotate","flipX","flipY","nextUniqueId","random","classArray","classList","htmlEscape","str","replace","joinStyles","styles","styleName","trim","transformIsMeaningful","css","dcp","drc","fp","rc","dPatt","RegExp","customPropPatt","rPatt","_cssInserted","ensureCss","setAttribute","innerHTML","headChildren","childNodes","beforeChild","child","tagName","toUpperCase","insertBefore","insertCss","InjectCSS","mixout","dom","hooks","beforeDOMElementCreation","beforeI2svg","shims","namespace","functions","loaded","fn","toHtml","abstractNodes","tag","attributeName","joinAttributes","iconFromMapping","mapping","iconName","icon","doScroll","readyState","subject","initialValue","thisContext","result","iterator","func","c","d","bindInternal4","toHex","unicode","decoded","string","output","counter","charCodeAt","extra","ucs2decode","normalizeIcons","icons","defineIcons","params","skipHooks","normalized","addPack","FAMILY_NAMES","PREFIXES_FOR_FAMILY","familyId","_defaultUsablePrefix","_byUnicode","_byLigature","_byOldName","_byOldUnicode","_byAlias","getIconName","cls","parts","build","lookup","o$$1","a$$1","alias","aliases","hasRegular","autoFetchSvg","shimLookups","shim","maybeNameMaybeUnicode","names","unicodes","getCanonicalPrefix","family","byUnicode","byAlias","byOldName","getDefaultUsablePrefix","c$$1","styleOrPrefix","defined","sortedUniqueValues","arr","getCanonicalIcon","skipLookups","givenPrefix","faCombinedClasses","faStyleOrFamilyClasses","nonStyleOrFamilyClasses","faStyles","styleFromValues","famProps","v$$1","getFamilyId","canonical","classNames","rest","moveNonFaClassesToRest","prefixOptions","config$$1","isDuotoneFamily","valuesHasDuotone","defaultFamilyIsDuotone","canonicalPrefixIsDuotone","newCanonicalFamilies","find","newCanonicalStyles","defaultPrefix","getDefaultCanonicalPrefix","aliasIconName","applyShimAndAlias","flat","_plugins","_hooks","providers","defaultProviderKeys","chainHooks","hook","hookFn","callHooks","_len2","_key2","callProvided","findIconDefinition","iconLookup","library","definitions","additions","_pullDefinitions","longPrefix","reset","definition","i2svg","reject","watch","autoReplaceSvgRoot","autoReplace","parse","match","canonicalIcon","api","noAuto","domVariants","abstractCreator","abstract","html","makeInlineSvgAbstract","main","mask","symbol","title","maskId","titleId","watchable","found","isUploadedIcon","attrClass","classes","content","uploadedIconWidthStyle","asSymbol","asIcon","makeLayersTextAbstract","startCentered","transformForCss","styleString","class","styles$1","asFoundIcon","vectorData","fill","missingIconResolutionMixin","findIcon","console","error","maybeNotifyMissing","noop$1","p$2","preamble","perf","noop$2","isWatched","createElementNS","convertSVG","abstractObj","ceFn","createTextNode","appendChild","mutators","mutation","comment","createComment","outerHTML","nodeAsComment","replaceChild","remove","nest","forSvg","splitClasses","toSvg","toNode","removeAttribute","newInnerHTML","performOperationSync","op","perform","mutations","callbackFunction","frame","mutator","disableObservation","enableObservation","mo","treeCallback","nodeCallback","pseudoElementsCallback","observeMutationsRoot","objects","mutationRecord","addedNodes","hasPrefixAndIcon","characterData","classParser","existingPrefix","existingIconName","innerText","ligature","nodeType","Node","TEXT_NODE","parseMeta","parser","styleParser","extraClasses","extraAttributes","attributesParser","pluginMeta","extraStyles","styles$2","generateMutation","nodeMeta","onTree","root","htmlClassList","hclAdd","suffix","hclRemove","prefixes","prefixesDomQuery","p$$1","candidates","querySelectorAll","all","then","resolvedMutations","catch","onNode","render","iconDefinition","ReplaceElements","next","maybeIconDefinition","mutationObserverCallbacks","provides","providers$$1","generateSvgReplacementMutation","generateAbstractIcon","nextChild","containerWidth","iconWidth","Layers","layer","assembler","LayersCounter","makeLayersCounterAbstract","LayersText","text","generateLayersText","computedFontSize","parseInt","fontSize","boundingClientRect","CLEAN_CONTENT_PATTERN","SECONDARY_UNICODE_RANGE","_FONT_FAMILY_WEIGHT_TO_PREFIX","FontAwesome","FONT_FAMILY_WEIGHT_TO_PREFIX","toLowerCase","FONT_FAMILY_WEIGHT_FALLBACK","fontFamily","weights","replaceForPosition","pendingAttribute","alreadyProcessedPseudoElement","getPropertyValue","fontFamilyMatch","fontWeight","removeChild","fontFamilySanitized","fontWeightInteger","fontWeightSanitized","isNaN","getPrefix","hexValue","isSecondary","cleaned","codePoint","second","first","codePointAt","isPrependTen","isDoubled","hexValueFromContent","isV4","iconIdentifier","iconName4","oldUnicode","newUnicode","byOldUnicode","meta","processable","operations","PseudoElements","pseudoElements2svg","_unwatched","MutationObserver$1","unwatch","bootstrap","parseTransformString","transformString","n","PowerTransforms","parseNodeAttributes","generateAbstractTransformGrouping","outer","innerTranslate","innerScale","innerRotate","inner","path","ALL_SPACE","fillBlack","force","Masks","maskData","generateAbstractMask","explicitMaskId","mainWidth","mainPath","maskWidth","maskPath","trans","transformForSvg","maskRect","maskInnerGroupChildrenMixin","maskInnerGroup","maskOuterGroup","clipId","maskTag","maskUnits","maskContentUnits","defs","MissingIconIndicator","reduceMotion","matchMedia","missingIconAbstract","gChildren","FILL","ANIMATION_BASE","attributeType","repeatCount","dur","OPACITY_ANIMATE","dot","cx","cy","opacity","nextPlugins","mixoutsTo","k","plugin","tk","sk","registerPlugins","symbolData","parse$1","enumerableOnly","symbols","sym","source","_typeof","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","_iterableToArray","minLen","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","camelize","chr","substr","_excluded","normalizeIconArgs","objectWithKey","defaultProps","className","fixedWidth","inverse","flip","listItem","pull","pulse","rotation","spin","spinPulse","spinReverse","beat","fade","beatFade","bounce","shake","swapOpacity","FontAwesomeIcon","allProps","iconArgs","maskArgs","_classes","flash","renderedIcon","_console","log","extraProps","hasOwnProperty","convertCurry","displayName","propTypes","PropTypes","convert","mixins","attrs","pair","charAt","_extraProps$style","existingStyle","remaining","CardFooter","bsPrefix","as","Component","useBootstrapPrefix","_jsx","CardHeader","cardHeaderBsPrefix","CardHeaderContext","CardImg","variant","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","CardBody","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Image","fluid","rounded","roundedCircle","thumbnail","flexRender","Comp","component","proto","getPrototypeOf","isReactComponent","isClassComponent","$$typeof","description","isExoticComponent","useReactTable","resolvedOptions","onStateChange","renderFallbackValue","tableRef","createTable","setState","initialState","setOptions","prev","updater","functionalUpdate","input","makeStateUpdater","instance","old","isFunction","Function","flattenBy","getChildren","recurse","subArr","getDeps","opts","deps","depArgs","depTime","debug","Date","now","newDeps","dep","resultTime","depEndTime","resultEndTime","resultFpsPercentage","pad","num","info","getMemoOptions","tableOptions","debugLevel","_tableOptions$debugAl","debugAll","createHeader","table","column","_options$id","header","isPlaceholder","placeholderId","depth","subHeaders","colSpan","rowSpan","headerGroup","getLeafHeaders","leafHeaders","recurseHeader","getContext","_features","feature","Headers","getHeaderGroups","getAllColumns","getVisibleLeafColumns","getState","columnPinning","allColumns","leafColumns","_left$map$filter","_right$map$filter","leftColumns","columnId","rightColumns","buildHeaderGroups","getCenterHeaderGroups","getLeftHeaderGroups","_left$map$filter2","getRightHeaderGroups","_right$map$filter2","getFooterGroups","headerGroups","getLeftFooterGroups","getCenterFooterGroups","getRightFooterGroups","getFlatHeaders","headers","getLeftFlatHeaders","getCenterFlatHeaders","getRightFlatHeaders","getCenterLeafHeaders","flatHeaders","_header$subHeaders","getLeftLeafHeaders","_header$subHeaders2","getRightLeafHeaders","_header$subHeaders3","center","_left$0$headers","_left$","_center$0$headers","_center$","_right$0$headers","_right$","columnsToGroup","headerFamily","_headerGroups$0$heade","_headerGroups$","maxDepth","findMaxDepth","columns","getIsVisible","_column$columns","createHeaderGroup","headersToGroup","pendingParentHeaders","headerToGroup","latestPendingParentHeader","parent","bottomHeaders","recurseHeadersForSpans","childRowSpans","childColSpan","childRowSpan","createRow","original","rowIndex","subRows","parentId","row","_valuesCache","_uniqueValuesCache","getValue","getColumn","accessorFn","getUniqueValues","columnDef","renderValue","_row$getValue","getLeafRows","getParentRow","getRow","getParentRows","parentRows","currentRow","parentRow","getAllCells","getAllLeafColumns","cell","getRenderValue","_cell$getValue","createCell","_getAllCellsByColumnId","allCells","ColumnFaceting","createColumn","_getFacetedRowModel","getFacetedRowModel","getPreFilteredRowModel","_getFacetedUniqueValues","getFacetedUniqueValues","_getFacetedMinMaxValues","getFacetedMinMaxValues","includesString","filterValue","_filterValue$toString","search","autoRemove","testFalsey","includesStringSensitive","_row$getValue2","equalsString","_row$getValue3","arrIncludes","_row$getValue4","arrIncludesAll","_row$getValue5","arrIncludesSome","_row$getValue6","equals","weakEquals","inNumberRange","rowValue","resolveFilterValue","unsafeMin","unsafeMax","parsedMin","parsedMax","Infinity","temp","filterFns","ColumnFiltering","getDefaultColumnDef","filterFn","columnFilters","getDefaultOptions","onColumnFiltersChange","filterFromLeafRows","maxLeafRowFilterDepth","getAutoFilterFn","firstRow","getCoreRowModel","flatRows","getFilterFn","_table$options$filter","_table$options$filter2","getCanFilter","_column$columnDef$ena","_table$options$enable","_table$options$enable2","enableColumnFilter","enableColumnFilters","enableFilters","getIsFiltered","getFilterIndex","getFilterValue","_table$getState$colum","_table$getState$colum2","_table$getState$colum3","findIndex","setFilterValue","setColumnFilters","previousFilter","newFilter","_old$filter","shouldAutoRemoveFilter","newFilterObj","_old$map","_table","columnFiltersMeta","_functionalUpdate","resetColumnFilters","defaultState","_table$initialState$c","_table$initialState","getFilteredRowModel","_getFilteredRowModel","manualFiltering","aggregationFns","sum","_leafRows","childRows","nextValue","extent","mean","leafRows","count","median","every","mid","floor","nums","unique","uniqueCount","_columnId","ColumnGrouping","aggregatedCell","_toString","_props$getValue","aggregationFn","grouping","onGroupingChange","groupedColumnMode","toggleGrouping","setGrouping","getCanGroup","enableGrouping","getGroupingValue","getIsGrouped","_table$getState$group","getGroupedIndex","_table$getState$group2","getToggleGroupingHandler","canGroup","getAutoAggregationFn","getAggregationFn","_table$options$aggreg","_table$options$aggreg2","resetGrouping","_table$initialState$g","getPreGroupedRowModel","getGroupedRowModel","_getGroupedRowModel","manualGrouping","groupingColumnId","_groupingValuesCache","getIsPlaceholder","getIsAggregated","_row$subRows","ColumnOrdering","columnOrder","onColumnOrderChange","getIndex","_getVisibleLeafColumns","getIsFirstColumn","_columns$","getIsLastColumn","_columns","setColumnOrder","resetColumnOrder","_getOrderColumnsFn","orderedColumns","columnOrderCopy","columnsCopy","targetColumnId","shift","foundIndex","nonGroupingColumns","col","g","orderColumns","ColumnPinning","onColumnPinningChange","pin","columnIds","getLeafColumns","setColumnPinning","_old$left3","_old$right3","_old$left","_old$right","_old$left2","_old$right2","getCanPin","_d$columnDef$enablePi","enablePinning","enableColumnPinning","getIsPinned","leafColumnIds","getPinnedIndex","getCenterVisibleCells","_getAllVisibleCells","leftAndRight","getLeftVisibleCells","getRightVisibleCells","resetColumnPinning","getIsSomeColumnsPinned","_pinningState$positio","pinningState","_pinningState$left","_pinningState$right","getLeftLeafColumns","getRightLeafColumns","getCenterLeafColumns","defaultColumnSizing","minSize","maxSize","MAX_SAFE_INTEGER","ColumnSizing","columnSizing","columnSizingInfo","startOffset","startSize","deltaOffset","deltaPercentage","isResizingColumn","columnSizingStart","columnResizeMode","columnResizeDirection","onColumnSizingChange","onColumnSizingInfoChange","getSize","_column$columnDef$min","_column$columnDef$max","columnSize","getStart","getAfter","resetSize","setColumnSizing","_column$id","_","getCanResize","enableResizing","enableColumnResizing","getIsResizing","_header$column$getSiz","prevSiblingHeader","getResizeHandler","_contextDocument","canResize","persist","isTouchStartEvent","newColumnSizing","updateOffset","eventType","clientXPos","setColumnSizingInfo","_old$startOffset","_old$startSize","deltaDirection","headerSize","contextDocument","mouseEvents","moveHandler","upHandler","touchEvents","_e$touches$","passiveIfSupported","passiveSupported","supported","err","passiveEventSupported","resetColumnSizing","resetHeaderSizeInfo","_table$initialState$c2","getTotalSize","_table$getHeaderGroup","_table$getHeaderGroup2","getLeftTotalSize","_table$getLeftHeaderG","_table$getLeftHeaderG2","getCenterTotalSize","_table$getCenterHeade","_table$getCenterHeade2","getRightTotalSize","_table$getRightHeader","_table$getRightHeader2","getCenterVisibleLeafColumns","getLeftVisibleLeafColumns","getRightVisibleLeafColumns","RowSelection","rowSelection","onRowSelectionChange","enableRowSelection","enableMultiRowSelection","enableSubRowSelection","setRowSelection","resetRowSelection","_table$initialState$r","toggleAllRowsSelected","getIsAllRowsSelected","preGroupedFlatRows","getCanSelect","toggleAllPageRowsSelected","resolvedValue","getIsAllPageRowsSelected","getRowModel","rows","mutateRowIsSelected","getPreSelectedRowModel","getSelectedRowModel","rowModel","selectRowsFn","rowsById","getFilteredSelectedRowModel","getGroupedSelectedRowModel","getSortedRowModel","isAllRowsSelected","paginationFlatRows","getPaginationRowModel","isAllPageRowsSelected","getIsSomeRowsSelected","_table$getState$rowSe","totalSelected","getIsSomePageRowsSelected","getIsSelected","getIsSomeSelected","getToggleAllRowsSelectedHandler","checked","getToggleAllPageRowsSelectedHandler","toggleSelected","isSelected","_opts$selectChildren","selectedRowIds","selectChildren","isRowSelected","isSubRowSelected","getIsAllSubRowsSelected","getCanSelectSubRows","getCanMultiSelect","_table$options$enable3","getToggleSelectedHandler","canSelect","_target","includeChildren","newSelectedFlatRows","newSelectedRowsById","recurseRows","_row$subRows2","selection","_selection$row$id","_row$subRows3","allChildrenSelected","someSelected","subRow","subRowChildrenSelected","reSplitAlphaNumeric","compareBasic","compareAlphanumeric","aStr","bStr","aa","bb","an","bn","combo","sortingFns","alphanumeric","rowA","rowB","alphanumericCaseSensitive","textCaseSensitive","datetime","basic","builtInFeatures","columnVisibility","onColumnVisibilityChange","toggleVisibility","getCanHide","setColumnVisibility","childColumns","enableHiding","getToggleVisibilityHandler","cells","getVisibleCells","makeVisibleColumnsMethod","getColumns","getVisibleFlatColumns","getAllFlatColumns","resetColumnVisibility","toggleAllColumnsVisible","_value","getIsAllColumnsVisible","getIsSomeColumnsVisible","getToggleAllColumnsVisibilityHandler","_getGlobalFacetedRowModel","getGlobalFacetedRowModel","_getGlobalFacetedUniqueValues","getGlobalFacetedUniqueValues","_getGlobalFacetedMinMaxValues","getGlobalFacetedMinMaxValues","globalFilter","onGlobalFilterChange","globalFilterFn","getColumnCanGlobalFilter","_table$getCoreRowMode","getCanGlobalFilter","_table$options$getCol","enableGlobalFilter","getGlobalAutoFilterFn","getGlobalFilterFn","setGlobalFilter","resetGlobalFilter","sorting","sortingFn","sortUndefined","onSortingChange","isMultiSortEvent","shiftKey","getAutoSortingFn","firstRows","isString","getAutoSortDir","getSortingFn","_table$options$sortin","_table$options$sortin2","toggleSorting","desc","multi","nextSortingOrder","getNextSortingOrder","hasManualValue","setSorting","existingSorting","existingIndex","sortAction","newSorting","nextDesc","_table$options$maxMul","getCanMultiSort","maxMultiSortColCount","getFirstSortDir","_column$columnDef$sor","sortDescFirst","firstSortDirection","isSorted","getIsSorted","enableSortingRemoval","enableMultiRemove","getCanSort","enableSorting","_column$columnDef$ena2","enableMultiSort","_table$getState$sorti","columnSort","getSortIndex","_table$getState$sorti2","_table$getState$sorti3","clearSorting","getToggleSortingHandler","canSort","resetSorting","_table$initialState$s","getPreSortedRowModel","_getSortedRowModel","manualSorting","expanded","onExpandedChange","paginateExpandedRows","registered","queued","_autoResetExpanded","_table$options$autoRe","autoResetAll","autoResetExpanded","manualExpanding","_queue","resetExpanded","setExpanded","toggleAllRowsExpanded","getIsAllRowsExpanded","_table$initialState$e","getCanSomeRowsExpand","getPrePaginationRowModel","getCanExpand","getToggleAllRowsExpandedHandler","getIsSomeRowsExpanded","getIsExpanded","getExpandedDepth","splitId","getPreExpandedRowModel","getExpandedRowModel","_getExpandedRowModel","toggleExpanded","_expanded","exists","oldExpanded","rowId","_row$id","_table$options$getIsR","getIsRowExpanded","_table$options$getRow","getRowCanExpand","enableExpanding","getIsAllParentsExpanded","isFullyExpanded","getToggleExpandedHandler","canExpand","pagination","pageIndex","pageSize","onPaginationChange","_autoResetPageIndex","autoResetPageIndex","manualPagination","resetPageIndex","setPagination","resetPagination","_table$initialState$p","setPageIndex","maxPageIndex","pageCount","_table$initialState$p2","resetPageSize","_table$initialState$p3","_table$initialState2","setPageSize","topRowIndex","setPageCount","_table$options$pageCo","newPageCount","getPageOptions","getPageCount","pageOptions","getCanPreviousPage","getCanNextPage","previousPage","nextPage","firstPage","lastPage","_getPaginationRowModel","_table$options$pageCo2","ceil","getRowCount","_table$options$rowCou","rowCount","rowPinning","onRowPinningChange","includeLeafRows","includeParentRows","leafRowIds","parentRowIds","rowIds","setRowPinning","_old$top3","_old$bottom3","_old$top","_old$bottom","_old$top2","_old$bottom2","has","enableRowPinning","_visiblePinnedRowIds$","visiblePinnedRowIds","getTopRows","getBottomRows","resetRowPinning","getIsSomeRowsPinned","_pinningState$top","_pinningState$bottom","_getPinnedRows","visibleRows","pinnedRowIds","_table$options$keepPi","keepPinnedRows","allRows","topPinnedRowIds","bottomPinnedRowIds","getCenterRows","topAndBottom","_options$_features","_options$initialState","_feature$getInitialSt","queuedTimeout","coreInstance","newOptions","mergeOptions","_getRowId","getRowId","_getCoreRowModel","searchAll","_getDefaultColumnDef","defaultColumn","_defaultColumn","resolvedColumnDef","accessorKey","_props$renderValue$to","_props$renderValue","_getColumnDefs","columnDefs","recurseColumns","_resolvedColumnDef$id","replaceAll","originalRow","_result","getFlatColumns","flatMap","_column$columns2","groupingColumnDef","_getAllFlatColumnsById","flatColumns","accessRows","originalRows","_row$originalSubRows","getSubRows","originalSubRows","sortingState","sortedFlatRows","availableSorting","_table$getColumn","columnInfoById","sortEntry","invertSorting","sortData","sortedData","_sortEntry$desc","columnInfo","isDesc","sortInt","aUndefined","bUndefined"],"sourceRoot":""}