{"version":3,"file":"static/js/366.47daacd3.chunk.js","mappings":"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","sources":["components/DragAndDrop/DragAndDrop.jsx","components/SearchInput/SearchInput.jsx","hooks/useInterComSearch.js","pages/revisionFloat/dataHelpers.js","WidgetLifecycle-munish.jsx","pages/revisionFloat/revisionFloatToolbarNativeCta.jsx","utils/getUserEmail.js","pages/revisionFloat/revisionFloat.jsx","index.js","services/api/refreshService.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\n\r\nconst DragAndDropComponent = () => {\r\n  const {  handleDrop } = useDroppableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      // console.log(\"Selected objects:\", selectedObjects);\r\n      // console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"droppable-container mt-4\"\r\n      >\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport \"./SearchInput.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SearchInput = ({ onSearch, disabled }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const handleInputChange = (event) => {\r\n    const newSearchText = event.target.value;\r\n    setSearchText(newSearchText);\r\n  };\r\n\r\n  const handleInputKeyPress = (event) => {\r\n    if (event.key === \"Enter\" && searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setSearchText(\"\");\r\n    inputRef.current.focus(); // Keep focus on the input after clearing\r\n  };\r\n  const handleSearchIconClick = () => {\r\n    if (searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-content-container d-flex align-items-center\">\r\n      <FontAwesomeIcon\r\n        icon={faMagnifyingGlass}\r\n        onClick={handleSearchIconClick}\r\n        className=\"search-icon\"\r\n      />\r\n\r\n      <span className=\"ms-4 drag-and-drop-text flex-grow-1\">\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            ref={inputRef}\r\n            value={searchText}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleInputKeyPress}\r\n            placeholder=\"Search...\"\r\n            disabled={disabled}\r\n          />\r\n          {searchText && (\r\n            <Button\r\n              variant=\"btn-link\"\r\n              onClick={handleClearClick}\r\n              className=\"clear-button\"\r\n            >\r\n              ✖\r\n            </Button>\r\n          )}\r\n        </InputGroup>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { loadInterCom } from \"../utils/helpers\";\r\n\r\nconst useInterComSearch = () => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [InterCom, setInterCom] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        // console.log(\"[useInterComSearch] Loading InterCom module\");\r\n        const interComInstance = await loadInterCom();\r\n        setInterCom(interComInstance);\r\n      } catch (error) {\r\n        console.error(\r\n          \"[useInterComSearch] Error initializing InterCom:\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (socket) {\r\n        socket.disconnect();\r\n        // console.log(\"[useInterComSearch] Socket disconnected\");\r\n      }\r\n    };\r\n  }, [socket]);\r\n\r\n  const performSearch = useCallback(\r\n    (searchText, searchOpts, onObjectsSelected) => {\r\n      // Check if InterCom is loaded\r\n      if (!InterCom) {\r\n        console.warn(\"[useInterComSearch] InterCom is not loaded yet.\");\r\n        return;\r\n      }\r\n\r\n      const socketName =\r\n        \"socket\" + new Date().toISOString().replace(/[-:]/g, \"\");\r\n      const newSocket = new InterCom.Socket(socketName, {\r\n        dispatchRetryInternal: 0,\r\n      });\r\n      newSocket.subscribeServer(\"SearchComServer\");\r\n      setSocket(newSocket);\r\n\r\n      console.log(\r\n        \"[useInterComSearch] performSearch called with:\",\r\n        searchText,\r\n        searchOpts\r\n      );\r\n\r\n      const widgetId = window.widget?.id;\r\n      // console.log(\"[useInterComSearch] widget id:\", widgetId);\r\n\r\n      const finalSearchOpts = {\r\n        ...searchOpts,\r\n        widget_id: widgetId,\r\n        app_socket_id: socketName,\r\n        default_search_criteria: searchText,\r\n      };\r\n\r\n      // Register the search context (if needed)\r\n      console.log(\r\n        \"[useInterComSearch] Dispatching RegisterContext event with:\",\r\n        finalSearchOpts\r\n      );\r\n      newSocket.dispatchEvent(\"RegisterContext\", finalSearchOpts);\r\n\r\n      // Dispatch the search event\r\n      // console.log(\r\n      //   \"[useInterComSearch] Dispatching InContextSearch event with:\",\r\n      //   finalSearchOpts\r\n      // );\r\n      newSocket.dispatchEvent(\"InContextSearch\", finalSearchOpts);\r\n\r\n      // Add a listener for search results\r\n      const handleSearchResults = (data) => {\r\n        console.log(\"[useInterComSearch] Search results received:\", data);\r\n        if (onObjectsSelected) {\r\n          onObjectsSelected(data);\r\n        }\r\n      };\r\n\r\n      console.log(\r\n        \"[useInterComSearch] Adding listener for Selected_Objects_search\"\r\n      );\r\n      newSocket.addListener(\"Selected_Objects_search\", handleSearchResults);\r\n    },\r\n    [InterCom]\r\n  );\r\n\r\n  return {\r\n    performSearch,\r\n  };\r\n};\r\n\r\nexport default useInterComSearch;\r\n","// pages/revisionFloat/dataHelpers.js\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nconst ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n\r\nconst CheckmarkCell = () => (\r\n  <FontAwesomeIcon icon={faCheck} className=\"green-icon\" />\r\n);\r\n\r\nconst CrossmarkCell = () => (\r\n  <FontAwesomeIcon icon={faXmark} className=\"cross-icon\" />\r\n);\r\n\r\nexport const getCardData = (cardData) => {\r\n  if (!cardData || typeof cardData !== \"object\") {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    title: cardData.Title || \"N/A\",\r\n    type: cardData.Type || \"N/A\",\r\n    \"Maturity State\": cardData[\"Maturity State\"] || \"N/A\",\r\n    owner: cardData.Owner || \"N/A\",\r\n    \"Collaborative Space Title\": cardData[\"Collaborative Space Title\"] || \"N/A\",\r\n    Description: cardData.Description || \"N/A\",\r\n    \"Dropped Revision\": cardData[\"Dropped Revision\"] || \"N/A\",\r\n    \"Latest Released Revision\": cardData[\"Latest Released Revision\"] || \"N/A\",\r\n    \"CAD Format\": cardData[\"CAD Format\"] || \"N/A\",\r\n    imageURL:\r\n      cardData.imageURL ||\r\n      `${ENOVIA_BASE_URL}/snresources/images/icons/large/I_VPMNavProduct108x144.png`, // You might want a placeholder image URL\r\n    ...(cardData.Type !== \"Document\" && {\r\n      EIN: cardData.EIN || \"N/A\",\r\n      \"CAD Format\": cardData[\"CAD Format\"] || \"N/A\",\r\n    }),\r\n  };\r\n};\r\n\r\nexport const getTableData = (parentDetails, cardData) => {\r\n  if (!parentDetails || !Array.isArray(parentDetails.data)) {\r\n    console.warn(\"[getTableData] ⚠️ No parent details available. Returning empty array.\");\r\n    return [];\r\n  }\r\n  return parentDetails.data.map((parent) => ({\r\n    EIN: parent.EIN || \"N/A\",\r\n    Title: parent.Title || \"N/A\",\r\n    Description: parent.Description || \"N/A\",\r\n    Type: parent.Type || \"N/A\",\r\n    Revision: parent[\"Dropped Revision\"] || \"N/A\",\r\n    \"Dropped Revision ID\": parent[\"Dropped Revision ID\"] || \"N/A\",\r\n    \"Connected Child Revision\": parent.connectedChildRev || \"N/A\",\r\n    \"Latest child connected\": parent.toBeChildRevConnected ? false : true,\r\n    \"To-Be child connected\": parent.toBeChildRevConnected || \"-\",\r\n    State: parent[\"Maturity State\"] || \"N/A\",\r\n    Owner: parent.Owner || \"N/A\",\r\n    \"CAD Format\": parent[\"CAD Format\"] || \"N/A\",\r\n    Collabspace: parent[\"Collaborative Space Title\"] || \"N/A\",\r\n\r\n    // Add relationship field if the type is Document\r\n    ...(cardData?.Type === \"Document\" && {\r\n      relationship: parent.relationship || \"N/A\",\r\n    }),\r\n  }));\r\n};\r\n\r\nexport const tableColumns = [\r\n  {\r\n    accessorKey: \"EIN\",\r\n    header: \"EIN\",\r\n    columnPinning: true,\r\n  },\r\n  { accessorKey: \"Title\", header: \"Title\" },\r\n  { accessorKey: \"Description\", header: \"Description\" },\r\n  { accessorKey: \"Type\", header: \"Type\" },\r\n  { accessorKey: \"Revision\", header: \"Revision\" },\r\n  {\r\n    accessorKey: \"Connected Child Revision\",\r\n    header: \"Connected Revision\",\r\n  },\r\n  {\r\n    accessorKey: \"Latest child connected\",\r\n    header: \"latest Revision Connected\",\r\n    cell: ({ cell }) => {\r\n      const value = cell.getValue();\r\n      // Render a checkmark if true, a cross if false\r\n      return value ? <CheckmarkCell /> : <CrossmarkCell />;\r\n    },\r\n  },\r\n  {\r\n    accessorKey: \"To-Be child connected\",\r\n    header: \"Revision to-be Connected\",\r\n  },\r\n  {\r\n    accessorKey: \"relationship\",\r\n    header: \"Relationship\",\r\n  },\r\n  { accessorKey: \"State\", header: \"State\" },\r\n  { accessorKey: \"Owner\", header: \"Owner\" },\r\n  { accessorKey: \"CAD Format\", header: \"CAD Format\" },\r\n  { accessorKey: \"Collabspace\", header: \"Collabspace\" },\r\n];\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { refreshWidgetData } from \"./services/api/refreshService\";\r\nimport useToast from \"./hooks/useToast\";\r\nimport useDroppableArea from \"./hooks/useDroppableArea\";\r\nimport { MSG_REFRESH_ERROR, MSG_REFRESH_SUCCESS } from \"./utils/toastMessages\";\r\nimport store from \"./store\"; // ✅ Import Redux store directly\r\nimport Loader from \"./components/Loader/Loader\";\r\n\r\nconst WidgetLifecycle = () => {\r\n  const { handleDrop } = useDroppableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // console.log(\"---[WidgetLifecycle]--- starts\");\r\n\r\n  const isAutoTriggeredRefresh = (trace) => {\r\n    return trace.some(\r\n      (line) =>\r\n        line.includes(\"UWA_Frame_Alone.js\") || line.includes(\"bundle-min.js\")\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.widget) return;\r\n\r\n    // console.log(\"[WidgetLifecycle] 📌 Registering `onRefresh` event...\");\r\n\r\n    const onRefresh = async () => {\r\n      const trace = new Error().stack.split(\"\\n\");\r\n\r\n      // ✅ Check if refresh was manually triggered\r\n      const userClickedRefresh = sessionStorage.getItem(\"userClickedRefresh\");\r\n\r\n      if (isAutoTriggeredRefresh(trace) && !userClickedRefresh) {\r\n        console.warn(\r\n          \"[WidgetLifecycle] ⛔ Auto-refresh detected. Ignoring unwanted `onRefresh`.\"\r\n        );\r\n        return; // ✅ Block auto-triggered refresh\r\n      }\r\n\r\n      // console.log(\"[WidgetLifecycle] 🔄 `onRefresh` triggered!\");\r\n      // ✅ Reset manual refresh flag so next refresh isn't blocked\r\n      sessionStorage.removeItem(\"userClickedRefresh\");\r\n      // console.log(\r\n      //   \"Stored Flag in widgt lifecycle:\",\r\n      //   sessionStorage.getItem(\"userClickedRefresh\")\r\n      // );\r\n\r\n      setLoading(true);\r\n\r\n      const latestState = store.getState();\r\n      const latestDraggedData =\r\n        latestState.droppedObject.droppedObjectData.initialDraggedData;\r\n\r\n      if (!latestDraggedData?.data?.items?.length) {\r\n        console.error(\r\n          \"[WidgetLifecycle] ⚠️ `initialDraggedData` is missing or invalid:\",\r\n          latestDraggedData\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // console.log(\r\n        //   \"[WidgetLifecycle] 🚀 Refreshing widget with latest data...\"\r\n        // );\r\n        await refreshWidgetData(latestDraggedData.data.items, handleDrop);\r\n      } catch (error) {\r\n        console.error(\"[WidgetLifecycle] ❌ Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      } finally {\r\n        setLoading(false); // ✅ Stop Loader when refresh completes\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      }\r\n    };\r\n    console.trace(\"[WidgetLifecycle] 🔄 `onRefresh` was called from:\");\r\n    window.widget.addEvent(\"onRefresh\", onRefresh);\r\n    // console.log(\r\n    //   \"[WidgetLifecycle] ✅ `onRefresh` event registered successfully\"\r\n    // );\r\n  }, []); // ✅ Runs only once\r\n\r\n  return loading ? <Loader/> : null;\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","import React from \"react\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useRevisions from \"../../hooks/useRevisions\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport { MSG_NO_ROWS, MSG_NO_REPLACE } from \"../../utils/toastMessages\";\r\nimport getUserEmail from \"../../utils/getUserEmail\";\r\nimport WidgetLifecycle from \"../../WidgetLifecycle-munish\";\r\n\r\n\r\nconst RevisionFloatToolbarNativeCta = () => {\r\n  const { replaceRevisions } = useRevisions();\r\n  const { showErrorToast } = useToast();\r\n  // Access relevant data from Redux store\r\n  const droppedObjectData = useSelector(\r\n    (state) => state.droppedObject.droppedObjectData\r\n  );\r\n\r\n  const selectedTableRows = useSelector(\r\n    (state) => state.droppedObject.selectedTableRows\r\n  ); // Assuming you're storing selected rows in Redux\r\n\r\n  // console.log(\"selectedTableRows\", selectedTableRows);\r\n\r\n  const handleReplace = async () => {\r\n    if (!selectedTableRows || selectedTableRows.length === 0) {\r\n      showErrorToast(MSG_NO_ROWS);\r\n      return;\r\n    }\r\n\r\n    // Get the parentDetails from droppedObjectData\r\n    const allParents = droppedObjectData.parentDetails?.data;\r\n    if (!allParents || allParents.length === 0) {\r\n      showErrorToast(\"No parent details available.\");\r\n      return;\r\n    }\r\n\r\n    // Filter selected rows where 'To-Be child connected' is not \"-\"\r\n    const selectedRows = selectedTableRows.filter(\r\n      (row) => row[\"To-Be child connected\"] !== \"-\"\r\n    );\r\n\r\n    if (selectedRows.length === 0) {\r\n      showErrorToast(MSG_NO_REPLACE);\r\n      return;\r\n    }\r\n\r\n    // Map selectedRows to their corresponding parent objects\r\n    const selectedParents = selectedRows.map((row) => {\r\n      return allParents.find(\r\n        (parent) => parent[\"Dropped Revision ID\"] === row[\"Dropped Revision ID\"]\r\n      );\r\n    });\r\n\r\n    // Check if any matching parent is not found\r\n    if (selectedParents.some((parent) => !parent)) {\r\n      showErrorToast(\"Could not find all corresponding parent details.\");\r\n      return;\r\n    }\r\n\r\n    const userEmail = await getUserEmail();\r\n    if (!userEmail) {\r\n      throw new Error(\"User email not found.\");\r\n    }\r\n\r\n    const droppedData = droppedObjectData.cardData;\r\n\r\n    // Call the replaceRevisions function from useRevisions hook\r\n    const result = await replaceRevisions(\r\n      selectedParents,\r\n      droppedData,\r\n      userEmail\r\n    );\r\n    \r\n\r\n    if (result.success) {\r\n      // Handle success (e.g., show a success message, refetch data, etc.)\r\n    } else {\r\n      // Handle error (e.g., show an error message)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex cta-absolute\">\r\n      <CustomButton\r\n        variant=\"outline-secondary\"\r\n        className=\"m-2\"\r\n        size=\"lg\"\r\n        text=\"Replace\"\r\n        onClick={handleReplace}\r\n      />\r\n      {/* <WidgetLifecycle /> */}\r\n      \r\n\r\n      {/* <CustomButton\r\n        variant=\"outline-secondary\"\r\n        className=\"m-2\"\r\n        size=\"lg\"\r\n        text=\" Select items in my Collaborative Space\"\r\n        // onClick={\"\"}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RevisionFloatToolbarNativeCta;\r\n","// utils/getUserEmail.js\r\nimport { loadPlatformAPI } from \"./helpers\"; \r\n\r\nexport default async function getUserEmail() {\r\n  try {\r\n    const PlatformAPI = await loadPlatformAPI();\r\n    const user = await PlatformAPI.getUser();\r\n\r\n    return user.email;\r\n  } catch (error) {\r\n    console.error(\"Error getting user email:\", error);\r\n    return null; // Or throw the error, depending on how you want to handle it\r\n  }\r\n}","import React, { useEffect, useMemo, useRef, useCallback } from \"react\";\r\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\r\nimport DragAndDropComponent from \"../../components/DragAndDrop/DragAndDrop\";\r\nimport CardWithDragAndDrop from \"../../components/Card/cardwithdraganddrop\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ReusableTable from \"../../components/Table/Table\";\r\nimport {\r\n  setDroppedObjectData,\r\n  setIsDropped,\r\n} from \"../../store/droppedObjectSlice\";\r\nimport { getCardData, getTableData, tableColumns } from \"./dataHelpers\";\r\nimport RevisionFloatToolbarNativeCta from \"./revisionFloatToolbarNativeCta\";\r\n\r\nconst RevisionFloat = () => {\r\n  const { initializeDroppableArea, loading } = useDroppableArea();\r\n  const tableKey = useRef(0); // ✅ Use useRef instead of useState\r\n  const dispatch = useDispatch();\r\n\r\n  // console.log(\"[RevisionFloat] 🎯 Component Rendered\");\r\n  // ✅ Use shallowEqual to prevent unnecessary re-renders\r\n  const { cardData, parentDetails, isDropped, initialDraggedData } =\r\n    useSelector(\r\n      (state) => ({\r\n        cardData: state.droppedObject.droppedObjectData.cardData,\r\n        parentDetails: state.droppedObject.droppedObjectData.parentDetails,\r\n        isDropped: state.droppedObject.isDropped,\r\n        initialDraggedData:\r\n          state.droppedObject.droppedObjectData.initialDraggedData,\r\n      }),\r\n      shallowEqual // ✅ Ensures Redux only re-renders when values actually change\r\n    );\r\n  // console.log(\"[RevisionFloat] 🏪 Redux State - cardData:\", cardData);\r\n  // console.log(\"[RevisionFloat] 🏪 Redux State - parentDetails:\", parentDetails);\r\n\r\n  // ✅ Ensure droppable area is only initialized **once**\r\n  const hasInitializedDroppable = useRef(false);\r\n  useEffect(() => {\r\n    if (!hasInitializedDroppable.current) {\r\n      // console.log(\"[RevisionFloat] 🔄 Initializing droppable area...\");\r\n      initializeDroppableArea();\r\n      hasInitializedDroppable.current = true; // ✅ Ensure it runs only once\r\n    }\r\n  }, [initializeDroppableArea]);\r\n\r\n  // useEffect(() => {\r\n  //   if (!isDropped) {\r\n  //     initializeDroppableArea();\r\n  //   }\r\n  // }, [isDropped, initializeDroppableArea]);\r\n\r\n  // ✅ Memoize tableData (Only re-run if parentDetails change)\r\n  const optimizedTableData = useMemo(\r\n    () => getTableData(parentDetails, cardData),\r\n    [parentDetails, cardData]\r\n  );\r\n\r\n  // ✅ Prevent unnecessary re-renders by checking for data changes\r\n  useEffect(() => {\r\n    if (optimizedTableData.length > 0) {\r\n      console.log(\r\n        \"[RevisionFloat] 📊 optimizedTableData Updated:\",\r\n        optimizedTableData\r\n      );\r\n    }\r\n  }, [optimizedTableData]);\r\n\r\n  // ✅ Memoize cardData (Avoid recalculations unless cardData changes)\r\n  const optimizedCardData = useMemo(() => getCardData(cardData), [cardData]);\r\n\r\n  // ✅ Reset state only when needed\r\n  const handleHomeClick = useCallback(() => {\r\n    // console.log(\r\n    //   \"[handleHomeClick] 🏠 Home icon clicked. Resetting droppable area...\"\r\n    // );\r\n\r\n    if (!isDropped) {\r\n      // console.log(\r\n      //   \"[handleHomeClick] 🚫 Already reset. Skipping unnecessary updates.\"\r\n      // );\r\n      return;\r\n    }\r\n\r\n    // ✅ Only reinitialize if necessary\r\n    if (!initialDraggedData.length) {\r\n      // console.log(\"[handleHomeClick] 🔄 Reinitializing droppable area...\");\r\n      initializeDroppableArea();\r\n    }\r\n\r\n    // ✅ Reset Redux state only if needed\r\n    dispatch(setIsDropped(false));\r\n\r\n    if (cardData || parentDetails.length || initialDraggedData.length) {\r\n      console.log(\"[handleHomeClick] 🗑 Dispatching reset action...\");\r\n      dispatch(\r\n        setDroppedObjectData({\r\n          cardData: {},\r\n          parentDetails: [],\r\n          initialDraggedData: [],\r\n        })\r\n      );\r\n    } else {\r\n      // console.log(\r\n      //   \"[handleHomeClick] 🚫 State already cleared. Skipping dispatch.\"\r\n      // );\r\n    }\r\n\r\n    // console.log(\"[handleHomeClick] ✅ Reset complete.\");\r\n  }, [\r\n    dispatch,\r\n    initializeDroppableArea,\r\n    isDropped,\r\n    initialDraggedData,\r\n    cardData,\r\n    parentDetails,\r\n  ]);\r\n\r\n  // ✅ Memoize filtered columns\r\n  const filteredColumns = useMemo(() => {\r\n    if (cardData?.Type === \"Document\") {\r\n      return tableColumns;\r\n    } else {\r\n      return tableColumns.filter(\r\n        (column) => column.accessorKey !== \"relationship\"\r\n      );\r\n    }\r\n  }, [cardData]);\r\n  // console.log(\"[RevisionFloat] ✅ Component Updated\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"[RevisionFloat] State Changes:\", {\r\n      loading,\r\n      isDropped,\r\n    });\r\n  }, [loading, isDropped]);\r\n\r\n  return (\r\n    <>\r\n      {!isDropped && !loading && <DragAndDropComponent />}\r\n      {isDropped && (\r\n        <>\r\n          {loading && <Loader />}\r\n          <div className=\"content-wrapper py-3 border-bottom\">\r\n            <div className=\"d-flex\">\r\n              <div className=\"p-0 pt-4\">\r\n                <Image\r\n                  src=\"https://thewhitechamaleon.github.io/testrapp/images/home.png\"\r\n                  alt=\"home-icon\"\r\n                  className=\"home-icon\"\r\n                  onClick={handleHomeClick}\r\n                />\r\n              </div>\r\n              {optimizedCardData && (\r\n                <CardWithDragAndDrop data={optimizedCardData} />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {optimizedTableData.length > 0 ? (\r\n            <div className=\"wrapper-cta\">\r\n              <RevisionFloatToolbarNativeCta />\r\n              <ReusableTable\r\n                key={tableKey.current}\r\n                data={optimizedTableData}\r\n                columns={filteredColumns}\r\n                widgetType=\"Revision_FLoat_Widget\"\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-data-banner\">No Parent object(s) found</div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RevisionFloat;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport RevisionFloat from \"./pages/revisionFloat/revisionFloat\";\r\n// import { io } from \"socket.io-client\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\nimport WidgetLifecycle from \"./WidgetLifecycle-munish\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <WidgetLifecycle />\r\n      <RevisionFloat />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\n// Function to inject the refresh listener script into the **parent window**\r\nfunction injectRefreshListener() {\r\n  // console.log(\"🌍 [index.js] Injecting refresh listener into parent window...\");\r\n\r\n  const scriptContent = `\r\n    function listenForRefreshClicks() {\r\n      // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\r\n\r\n      document.body.addEventListener(\"click\", function (event) {\r\n        let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\r\n\r\n        if (refreshButton) {\r\n          // console.log(\"✅ [Parent] User clicked Refresh!\");\r\n          sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\r\n          // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\r\n        }\r\n      }, true);\r\n    }\r\n\r\n    // ✅ Ensure event listener is added even if DOM is already loaded\r\n    if (document.readyState === \"loading\") {\r\n      document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\r\n    } else {\r\n      listenForRefreshClicks();\r\n    }\r\n  `;\r\n\r\n  // Inject script **into the parent window**\r\n  if (window.parent && window.parent.document) {\r\n    let injectedScript = window.parent.document.createElement(\"script\");\r\n    injectedScript.textContent = scriptContent;\r\n    window.parent.document.body.appendChild(injectedScript);\r\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\r\n  } else {\r\n    console.warn(\"⚠️ [index.js] Unable to inject script—parent window not accessible.\");\r\n  }\r\n}\r\n\r\n// ✅ Inject the script when the React app starts\r\ninjectRefreshListener();\r\n\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n","export const refreshWidgetData = async (dataItems, handleDrop) => {\r\n  console.log(\"[refreshWidgetData] called with dataItems:\", dataItems);\r\n  if (!dataItems || dataItems.length === 0) {\r\n    console.warn(\"[Refresh] No dropped data available to refresh.\");\r\n    return;\r\n  }\r\n  try {\r\n    if (typeof handleDrop !== \"function\") {\r\n      throw new Error(\"[Refresh] handleDrop is not a function.\");\r\n    }\r\n    await handleDrop(dataItems);\r\n  } catch (error) {\r\n    console.error(\"[Refresh] Error during handleDrop execution:\", error);\r\n  }\r\n};\r\n"],"names":["DragAndDropComponent","handleDrop","useDroppableArea","performSearch","useInterComSearch","_jsx","_Fragment","children","_jsxs","className","Image","style","width","height","src","alt","SearchInput","onSearch","searchText","title","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","length","id","objectId","objectType","console","warn","_ref","disabled","setSearchText","useState","inputRef","useRef","FontAwesomeIcon","icon","faMagnifyingGlass","onClick","handleSearchIconClick","trim","InputGroup","Form","Control","type","ref","value","onChange","event","newSearchText","target","onKeyDown","key","placeholder","Button","variant","handleClearClick","current","focus","socket","setSocket","InterCom","setInterCom","useEffect","async","interComInstance","loadInterCom","error","loadData","disconnect","useCallback","searchOpts","onObjectsSelected","_window$widget","socketName","Date","toISOString","replace","newSocket","Socket","dispatchRetryInternal","subscribeServer","log","widgetId","window","widget","finalSearchOpts","_objectSpread","widget_id","app_socket_id","default_search_criteria","dispatchEvent","addListener","data","CheckmarkCell","faCheck","CrossmarkCell","faXmark","tableColumns","accessorKey","header","columnPinning","cell","getValue","WidgetLifecycle","showSuccessToast","showErrorToast","useToast","loading","setLoading","trace","addEvent","_latestDraggedData$da","_latestDraggedData$da2","Error","stack","split","userClickedRefresh","sessionStorage","getItem","some","line","includes","isAutoTriggeredRefresh","removeItem","latestDraggedData","store","getState","droppedObject","droppedObjectData","initialDraggedData","items","refreshWidgetData","MSG_REFRESH_ERROR","MSG_REFRESH_SUCCESS","Loader","RevisionFloatToolbarNativeCta","replaceRevisions","useRevisions","useSelector","state","selectedTableRows","CustomButton","size","text","_droppedObjectData$pa","MSG_NO_ROWS","allParents","parentDetails","selectedRows","filter","row","MSG_NO_REPLACE","selectedParents","map","find","parent","userEmail","PlatformAPI","loadPlatformAPI","getUser","email","getUserEmail","droppedData","cardData","success","RevisionFloat","initializeDroppableArea","tableKey","dispatch","useDispatch","isDropped","shallowEqual","hasInitializedDroppable","optimizedTableData","useMemo","getTableData","Array","isArray","EIN","Title","Description","Type","Revision","connectedChildRev","toBeChildRevConnected","State","Owner","Collabspace","relationship","optimizedCardData","owner","imageURL","concat","process","getCardData","handleHomeClick","setIsDropped","setDroppedObjectData","filteredColumns","column","CardWithDragAndDrop","ReusableTable","columns","widgetType","root","hasOnLoadRun","_window$widget$body","requirejs","rootElement","body","querySelector","document","getElementById","createElement","appendChild","ReactDOM","render","Provider","ToastContainer","start","injectedScript","textContent","injectRefreshListener","dataItems"],"sourceRoot":""}